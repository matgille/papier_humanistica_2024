Lesson GoalsþObjetivos de la lecciónþObjetivos da Lição
The list that we created in the From HTML to a List of Words ( 2 ) needs some normalizing before it can be used further .þLa lista que creamos en De HTML a lista de palabras ( parte 2 ) necesita cierta `` normalización '' antes de que podamos usarla más adelante .þA lista que criámos na lição De HTML para Lista de Palavras ( parte 2 ) precisa ser normalizada antes de poder ser utilizada .
We are going to do this by applying additional string methods , as well as by using regular expressions .þVamos a hacer esto aplicando métodos adicionales para cadenas de caracteres , así como utilizar expresiones regulares .þFaremos isso através da aplicação de alguns métodos de string adicionais , bem como utilizando expressões regulares .
Once normalized , we will be able to more easily analyze our data .þUna vez normalizadas seremos capaces de analizar nuestros datos de una manera más fácil .þUma vez normalizados , estaremos aptos a analisar os nossos dados mais facilmente .
Files Needed For This LessonþArchivos necesarios para esta lecciónþFicheiros Necessários para esta Lição
If you do not have these files from the previous lesson , you can download a zipþSi no tienes estos archivos de la lección previa , puedes descargar un zip .þCaso não tenha esses ficheiros das lições anteriores , pode fazer o download de um zip .
Cleaning up the ListþLimpiar la listaþLimpando a Lista
In From HTML to a List of Words ( 2 ) , we wrote a Python program called html-to-list-1.py which downloaded a web page , stripped out the HTML formatting and metadata and returned a list of “ words ” like the one shown below .þEn De HTML a lista de palabras ( parte 2 ) , escribimos un programa en Python llamado html-a-lista-1.py que descargó una página Web , retiró el formato HTML y los metadatos y nos devolvió una lista de `` palabras '' como la que se muestra más abajo .þNa lição De HTML para Lista de Palavras ( parte 2 ) , escrevemos um programa em Python chamado html-to-list1.py que fazia o download de uma página web , removia a formatação HTML e os metadados e retornava uma lista de `` palavras '' como a apresentada abaixo .
Technically , these entities are called “ tokens ” rather than “ words ” .þTécnicamente , estas entidades son llamadas `` tokens `` ( o `` componente léxico `` ) en vez de `` palabras '' .þTecnicamente , essas entidades são chamadas de `` tokens `` ao invés de `` palavras '' .
They include some things that are , strictly speaking , not words at all ( like the abbreviation & c. for “ etcetera ” ) .þEstos incluyen cosas que nos son palabras estrictamente hablando ( como la abreviatura & c. de `` etcétera '' ) .þElas incluem alguns elementos que , estritamente falando , não são palavras ( como a abreviação & c. para `` etcetera '' ) .
They also include some things that may be considered composites of more than one word .þTambién incluyen algunas cosas que se podrían considerar componentes de más de una palabra .þElas também incluem elementos que podem ser considerados composições de mais de uma palavra .
The possessive “ Akerman ’ s , ” for example , is sometimes analyzed by linguists as two words : “ Akerman ” plus a possessive marker .þEl posesivo `` Akerman 's '' en idioma inglés , por ejemplo , algunas veces es analizado por los lingüístas como dos palabras : `` Akerman '' más un marcador posesivo .þO possessivo `` Akerman 's '' , por exemplo , é ocasionalmente analisado por linguistas como duas palavras : `` Akerman '' e um marcador de posse .
Is “ o ’ clock ” one word or two ?þEn inglés también , ¿ '' o'clock '' es una o dos palabras ?þ`` o'clock '' é uma palavra ou duas ?
And so on .þY así .þE assim por diante .
Turn back to your program html-to-list-1.py and make sure that your results look something like this :þRegresa a tu programa html-a-lista-1.py y asegúrate de que tus resultados se vean como algo por el estilo de esto :þVolte ao seu programa html-to-list1.py e certifique-se de que o seu resultado se assemelha ao seguinte :
By itself , this ability to separate the document into words doesn ’ t buy us much because we already know how to read .þPor sí misma , esta habilidad de separar el documento en palabras no nos ayuda mucho porque nosotros ya sabemos cómo leerlo .þPor si só , a habilidade de separar um documento em palavras não é muito útil , já que somos capazes de ler .
We can use the text , however , to do things that aren ’ t usually possible without special software .þSin embargo , podemos usar el texto para hacer cosas que normalmente no son posibles sin un programa especial .þPodemos usar o texto , no entanto , para executar tarefas que não são sempre possíveis sem softwares especiais .
We ’ re going to start by computing the frequencies of tokens and other linguistic units , a classic measure of a text .þVamos a comenzar por computar la frecuencia de los tokens y otras unidades lingüísticas , una medida clásica de un texto .þComeçaremos calculando as frequências dos tokens e outras unidades linguísticas , uma forma clássica de mensurar textos .
It is clear that our list is going to need some cleaning up before we can use it to count frequencies .þQueda claro que nuestra lista va a necesitar cierta limpieza antes de que la podamos utilizar para contar frecuencias .þEstá claro que a nossa lista precisará de uma limpeza antes de conseguirmos utilizá-la para contar frequências .
In keeping with the practices established in From HTML to a List of Words ( 1 ) , let ’ s try to describe our algorithm in plain English first .þConservando la práctica establecida en De HTML a lista de palabras ( parte 1 ) , tratemos de describir nuestro algoritmo primero en lenguaje llano .þEm linha com as práticas estabelecidas em De HTML para Lista de Palavras ( parte 1 ) , vamos tentar descrever o nosso algoritmo em português primeiro .
We want to know the frequency of each meaningful word that appears in the trial transcript .þQueremos saber la frecuencia con la que aparece cada palabra con significado en la transcripción del juicio .þDesejamos saber a frequência de cada palavra com sentido que aparece na transcrição do julgamento .
So , the steps involved might look like this :þDe tal manera , los pasos a seguir deben verse de la siguiente manera :þDesse modo , as etapas envolvidas podem ser semelhantes a estas :
Convert all words to lower case so that “ BENJAMIN ” and “ benjamin ” are counted as the same wordþConvierte todas las palabras a minúsculas para que `` BENJAMIN '' y `` benjamin '' sean contadas como una misma palabraþConverter todas as palavras para letras minúsculas de modo que `` BENJAMIN '' e `` benjamin '' sejam contabilizadas como a mesma palavra
Remove any strange or unusual charactersþRetira cualquier carácter extraño o inusualþRemover quaisquer caracteres estranhos ou incomuns
Count the number of times each word appearsþCuenta el número de veces que aparece cada palabraþContar o número de vezes que cada palavra aparece
Remove overly common words such as “ it ” , “ the ” , “ and ” , etc .þRetira palabras demasiado comunes como `` eso '' , `` el '' , `` y '' , etc .þRemover palavras excessivamente comuns como `` it '' , `` the '' , `` and '' , etc .
Convert to Lower CaseþConvertir a minúsculasþConverter para Minúsculas
Typically tokens are folded to lower case when counting frequencies , so we ’ ll do that using the string method lower which was introduced in Manipulating Strings in Python .þTípicamente los componentes léxicos ( tokens ) son compactados como minúsculas cuando se cuentan frecuencias , así que lo haremos utilizando el método de cadena `` lower '' que aprendimos en Manipular cadenas de caracteres en Python .þTipicamente tokens são convertidos em letras minúsculas ao contar frequências , então faremos isso através do método de string lower que foi introduzido em Manipular strings com Python .
Since this is a string method we will have to apply it to the string : text in the html-to-list1.py program .þYa que este es un método para cadenas , tendremos que aplicarlo en la cadena texto en el programa html-a-lista-1.py .þJá que este é um método de string , devemos aplicá-lo à string text no programa html-to-list1.py .
Amend html-to-list1.py by adding the string tag lower ( ) to the the end of the text string .þEnmienda html-a-lista-1.py añadiendo la etiqueta de cadena lower ( ) al final de la cadena texto .þAjuste html-to-list1.py adicionando a string tag lower ( ) ao final da string text .
You should now see the same list of words as before , but with all characters changed to lower case .þAhora debes ver la misma lista de palabras que antes pero con todos los caracteres en minúsculas .þAgora deve ver a mesma lista de palavras de antes , mas com todos os caracteres minúsculos .
By calling methods one after another like this , we can keep our code short and make some pretty significant changes to our program .þAl `` llamar '' métodos uno tras otro , como en este caso , podemos mantener nuestro código corto y hacer algunos cambios muy significativos en nuestro programa .þAo chamar métodos em sequência como mostrado , torna-se possível manter o nosso código curto e fazer mudanças bastante significativas no nosso programa .
Like we said before , Python makes it easy to do a lot with very little code !þComo hemos dicho antes , Python facilita hacer mucho con muy poco código .þComo afirmámos anteriormente , o Python torna fácil a execução de muitas tarefas com pouquíssimo código .
At this point , we might look through a number of other Old Bailey Online entries and a wide range of other potential sources to make sure that there aren ’ t other special characters that are going to cause problems later .þEn este punto podríamos mirar con atención otras entradas del Old Bailey en línea así como una amplia gama de otras fuentes potenciales para asegurarnos de que no hay otros caracteres especiales que podrían causar problemas más adelante .þNeste ponto , podemos examinar uma série de outras entradas do Old Bailey Online e uma ampla gama de outras fontes em potencial para termos certeza de que não há outros caracteres especiais que causarão problema posteriormente .
We might also try to anticipate situations where we don ’ t want to get rid of punctuation ( e.g. , distinguishing monetary amounts like “ $ 1629 ” or “ £1295 ” from dates , or recognizing that “ 1629-40 ” has a different meaning than “ 1629 40 ” .þTambién podríamos tratar de anticipar situaciones en las que no queremos deshacernos de cierta puntuación ( por ejemplo , los distintivos de cantidades monetarios como `` $ 1629 '' o “ £1295 ” , de fechas , o el reconocer que `` 1629-40 '' tiene un significado distinto que `` 1629 40 '' ) .þTambém podemos tentar antecipar situações nas quais não desejamos nos livrar de pontuação ( por exemplo , para distinguir valores monetários como `` $ 1629 ” ou “ £1295 ” de datas , ou reconhecer que “ 1629-40 ” carrega um significado diferente de “ 1629 40 ” ) .
) This is what professional programmers get paid to do : try to think of everything that might go wrong and deal with it in advance .þEsto es lo que a lo programadores profesionales se les paga por hacer : trata de pensar en todo lo que podría ir mal y trátalo de antemano .þIsso é o que programadores profissionais são pagos para fazer : tentar pensar em tudo que pode dar errado e tratar isso com antecedência .
We ’ re going to take a different approach .þVeámoslo desde otra perspectiva .þVamos adotar uma abordagem diferente .
Our main goal is to develop techniques that a working historian can use during the research process .þNuestro objetivo principal es desarrollar técnicas que un historiador puede utilizar durante el proceso de investigación .þO nosso objetivo principal é desenvolver técnicas que um historiador em exercício pode utilizar durante o processo de investigação .
This means that we will almost always prefer approximately correct solutions that can be developed quickly .þEsto significa que casi siempre preferimos soluciones aproximadamente correctas que puedan desarrollarse rápidamente .þIsso significa que quase sempre preferiremos soluções aproximadamente corretas que possam ser desenvolvidas rapidamente .
So rather than taking the time now to make our program robust in the face of exceptions , we ’ re simply going to get rid of anything that isn ’ t an accented or unaccented letter or an Arabic numeral .þAsí que , en lugar de invertir tiempo en hacer nuestro programa sólido de cara a excepciones , simplemente queremos deshacernos de todo aquello que no sea un carácter con o sin acentos o un número arábigo .þEntão , ao invés de perder tempo neste momento para tornar o nosso programa robusto em face de exceções , vamos simplesmente nos livrar de tudo que não seja uma letra com ou sem acento ou um algarismo arábico .
Programming is typically a process of “ stepwise refinement ” .þLa programación generalmente es un proceso de `` refinamiento paso a paso '' .þProgramação é tipicamente um processo de `` refinamento gradual '' .
You start with a problem and part of a solution , and then you keep refining your solution until you have something that works better .þEmpiezas con un problema y partes de una solución , y luego sigues refinando tu solución hasta que tienes algo que funciona mejor .þComeçamos com um problema e parte de uma solução , e depois continuamos refinando a solução até obter um resultado que funcione melhor .
Python Regular ExpressionsþExpresiones regulares en PythonþExpressões Regulares de Python
We ’ ve eliminated upper case letters .þHemos eliminado las mayúsculas .þNós eliminamos as letras maiúsculas .
That just leaves all the punctuation to get rid of .þAhora nos toca deshacernos de los signos de puntuación .þAgora só precisamos nos livrar da pontuação .
Punctuation will throw off our frequency counts if we leave them in .þSi dejamos la puntuación , ésta echa a perder nuestras cuentas de frecuencia .þA pontuação prejudicará as nossas contagens de frequência se as mantivermos lá .
We want “ evening ?þ¿Queremos que `` evening ?þDesejamos que `` evening ?
” to be counted as “ evening ” and “ 1780. ” as “ 1780 ” , of course .þ'' sea contada como `` evening '' y `` 1780 . '' como `` 1780 '' ?þ'' seja contabilizado como `` evening '' e `` 1780 . '' como `` 1780 '' , claro .
It is possible to use the replace string method to remove each type of punctuation :þ¡Por supuesto ! Es posible utilizar el método de cadena `` replace '' para retirar cada tipo de puntuación :þÉ possível utilizar o método de string replace para remover cada tipo de pontuação :
But that ’ s not very efficient .þPero esto no es verdaderamente eficiente .þNo entanto , isso não é muito eficiente .
In keeping with our goal of creating short , powerful programs , we ’ re going to use a mechanism called regular expressions .þAteniéndonos a nuestro objetivo de crear programas breves y poderosos , vamos a utilizar un mecanismo llamado `` expresiones regulares '' .þEm linha com o nosso objetivo de criar programas curtos e poderosos , utilizaremos um mecanismo chamado expressões regulares .
Regular expressions are provided by many programming languages in a range of different forms .þLas expresiones regulares son provistas por varios lenguajes de programación en un abanico de formas distintas .þExpressões regulares são fornecidas por muitas linguagens de programação de várias maneiras distintas .
Regular expressions allow you to search for well defined patterns and can drastically shorten the length of your code .þLas expresiones regulares te permiten buscar patrones bien definidos y pueden acortar drásticamente la longitud de tu código .þExpressões regulares permitem que busque por padrões bem definidos e podem diminuir drasticamente o comprimento do código .
For instance , if you wanted to know if a substring matched a letter of the alphabet , rather than use an if/else statement to check if it matched the letter “ a ” then “ b ” then “ c ” , and so on , you could use a regular expression to see if the substring matched a letter between “ a ” and “ z ” .þPor ejemplo , si deseas saber si una subcadena coincidió con una letra del alfabeto , en lugar de utilizar la sentencia if / else para comprobar la coincidencia con la letra `` a '' , luego la `` b '' y luego la `` c '' , y así sucesivamente , se podría utilizar una expresión regular para ver si cualquier letra entre la `` a '' y la `` z '' coincide con la subcadena .þPor exemplo , se desejasse saber se uma substring corresponde a uma letra do alfabeto , ao invés de usar uma condição if/else para verificar se ela representa a letra `` a '' , depois `` b '' , depois `` c '' e assim por diante , poderia usar uma expressão regular para verificar se a substring se assemelha a uma letra entre `` a '' e `` z '' .
Or , you could check for the presence of a digit , or a capital letter , or any alphanumeric character , or a carriage return , or any combination of the above , and more .þO bien , puedes comprobar la presencia de un dígito o una letra mayúscula , o de cualquier carácter alfanumérico , un retorno de carro o cualquier combinación de los anteriores y mucho más .þOu poderia verificar a presença de um dígito , uma letra maiúscula , ou qualquer caractere alfanumérico , ou um retorno de carro , ou qualquer combinação dos itens acima e muito mais .
In Python , regular expressions are available as a Python module .þEn Python , las expresiones regulares están disponibles como un módulo de Python .þEm Python , expressões regulares estão disponíveis como um módulo .
To speed up processing it is not loaded automatically because not all programs require it .þPara acelerar el procesamiento , éste no se carga automáticamente porque no todos los programas lo requieren .þPara acelerar o processamento , ele não é carregado automaticamente porque nem todos os programas o exigem .
So , you will have to import the module ( called re ) in the same way that you imported your obo.py module .þPor lo tanto , tendrás que importar ( import ) el módulo ( llamado re ) de la misma manera en la que has importado tu propio módulo obo.py .þEntão , precisará importar ( import ) o módulo ( chamado re , abreviação de regular expressions ) da mesma forma que importou o módulo obo.py .
Since we ’ re interested in only alphanumeric characters , we ’ ll create a regular expression that will isolate only these and remove the rest .þDado que nos interesan solamente los caracteres alfanuméricos , vamos a crear una expresión regular que aislará sólo estos y eliminará el resto .þComo estamos interessados apenas em caracteres alfanuméricos , criaremos uma expressão regular que irá isolá-los e removerá o resto .
Copy the following function and paste it into the obo.py module at the end .þCopia la siguiente función y pégala al final del módulo obo.py .þCopie a função a seguir e cole-a ao final do módulo obo.py .
You can leave the other functions in the module alone , as we ’ ll continue to use those .þPuedes dejar las otras funciones en el módulo solo , ya que seguiremos utilizándolas .þPode manter as outras funções do módulo , já que continuaremos a usá-las .
The regular expression in the above code is the material inside the string , in other words W+ .þLa expresión regular en el código anterior es el material dentro de la cadena , en otras palabras W+ .þA expressão regular no código acima é o material dentro da string , em outras palavras : W+ .
The W is shorthand for the class of non-alphanumeric characters .þLa W es la abreviatura de la clase de caracteres no-alfanuméricos .þW é uma abreviatura para a classe de caracteres não-alfanuméricos .
In a Python regular expression , the plus sign ( + ) matches one or more copies of a given character .þEn una expresión regular de Python , el signo de adición ( + ) coincide con una o más copias de un carácter dado .þNuma expressão regular de Python , o sinal de adição ( + ) encontra uma ou mais cópias de um determinado caractere .
The re.UNICODE tells the interpreter that we want to include characters from the world ’ s other languages in our definition of “ alphanumeric ” , as well as the A to Z , a to z and 0-9 of English .þLa expresión re.UNICODE le dice al intérprete que queremos que incluya los caracteres de todas las lenguas del mundo en nuestra definición de `` alfanumérico '' , así como de la A a la Z , de a-z y de 0-9 en inglés .þre.UNICODE informa ao interpretador que desejamos incluir caracteres de outros idiomas do mundo em nossa definição de alfanumérico , assim como de `` A '' a `` Z '' , `` a '' a `` z '' e 0-9 do português .
Regular expressions have to be compiled before they can be used , which is what the rest of the statement does .þLas expresiones regulares deben ser compiladas antes de poder ser utilizadas , que es lo que hace el resto de la declaración .þExpressões regulares devem ser compiladas antes de poderem ser utilizadas , que é o que o resto do comando faz .
Don ’ t worry about understanding the compilation part right now .þNo te preocupes en entender ahora mismo la parte de la compilación .þNão se preocupe em compreender a parte da compilação agora .
When we refine our html-to-list1.py program , it now looks like this :þCuando redefinamos nuestro programa html-a-lista-1.py , entonces se verá como esto :þAgora que refinamos o nosso programa html-to-list1.py , ele se parece com isto :
When you execute the program and look through its output in the “ Command Output ” pane , you ’ ll see that it has done a pretty good job .þCuando ejecutes el programa y veas a través de su salida en el panel de `` comando de salida '' , verás que ha hecho un maravilloso trabajo .þAo executar o programa e verificar a saída no painel `` Saída de Comando '' , verá que ele fez um bom trabalho .
This code will split hyphenated forms like “ coach-wheels ” into two words and turn the possessive “ s ” or “ o ’ clock ” into separate words by losing the apostrophe .þEste código separará expresiones con guiones como `` coach-wells '' en dos palabras y convertirá la partícula posesiva `` s '' o `` o'clock '' en palabras separadas perdiéndo el apóstrofe .þEsse código irá dividir formas hifenizadas como `` coach-wheels '' em duas palavras e irá transformar o possessivo `` s '' ou `` o'clock '' em palavras separadas ao perderem o apóstrofo .
But it is a good enough approximation to what we want that we should move on to counting frequencies before attempting to make it better .þPero es una aproximación lo suficientemente buena a lo que queremos , así que podemos proceder a contar frecuencias antes de intentar mejorarlo .þAinda assim , o código faz uma aproximação boa o suficiente para os nossos objetivos e devemos agora passar para a contagem de frequências antes de tentar melhorá-lo .
( If you work with sources in more than one language , you need to learn more about the Unicode standard and about Python support for it . )þ( Si trabajas con fuentes documentales en más de una lengua , necesitaras aprender más acerca del estándar Unicode y acerca del soporte de Python para el mismo ) .þ( Caso trabalhe com fontes em mais de um idioma , precisa aprender um pouco mais a respeito do padrão Unicode e sobre o suporte de Python a ele . )
Suggested ReadingþLecturas sugeridasþLeituras Sugeridas
For extra practice with Regular Expressions , you may find Chapter 7 of Mark Pilgrim ’ s “ Dive into Python ” a useful tutorial .þPara una práctica extra en expresiones regulares , encontrarás que el Capítulo 7 del libro de Mark Pilgrim Dive into Python es un tutorial muy útil .þPara praticar mais as Expressões Regulares , o capítulo 7 de `` Dive into Python `` de Mark Pilgrim pode ser um tutorial útil .
Code SyncingþSicronización de códigoþSincronização de Código
To follow along with future lessons it is important that you have the right files and programs in your programming-historian directory .þPara seguir a lo largo de las lecciones futuras es importante que tengas los archivos correctos y programas en el directorio `` programming-historian '' de tu disco duro .þPara acompanhar as lições futuras , é importante que tenha os ficheiros e programas corretos no seu diretório programming historian .
At the end of each chapter in this series you can download the programming-historian zip file to make sure you have the correct code .þAl final de cada lección puedes descargar el archivo zip `` python-es-lecciones '' para asegurarte que tienes el código correcto .þAo final de cada capítulo nesta série pode fazer o download do ficheiro zip do programming historian para garantir que possui o código correto .
python-lessons4.zip ( zip sync )þpython-es-lecciones4.zip ( zip sync )þpython-lessons4.zip ( zip sync )
