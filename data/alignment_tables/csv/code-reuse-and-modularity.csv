Lesson GoalsþObjetivos de la lecciónþObjectifs de la leçonþObjetivos da lição
Computer programs can become long , unwieldy and confusing without special mechanisms for managing complexity .þLos programas de computadora pueden resultar largos , inmanejables y confusos si no contamos con mecanismos especiales para la gestión de su complejidad .þUn programme informatique peut vite devenir un très long fichier et ainsi devenir peu commode à maintenir , notamment quand aucune stratégie n ' a été mise en place afin de contrôler cette complexité .þProgramas de computador podem se tornar longos , pesados e confusos sem mecanismos especiais para gerenciar a complexidade .
This lesson will show you how to reuse parts of your code by writing Functions and break your programs into Modules , in order to keep everything concise and easier to debug .þEsta lección te mostrará la manera de reutilizar partes de su código mediante la escritura de Funciones y cómo fraccionar tus programas en Módulos con el fin de mantener todo de una manera concisa y fácil de depurar .þCette leçon sera l'occasion de vous expliquer comment réutiliser des parties de votre code à l'aide de l'écriture de fonctions , mais aussi comment organiser un programme en modules , de manière à rendre celui-ci plus concis et plus facile à débugger .þEsta lição mostrará como reutilizar partes do seu código escrevendo Funções e dividindo seus programas em Módulos , a fim de mantê-los concisos e fáceis de serem depurados .
Being able to remove a single dysfunctional module can save time and effort .þSer capaz de extraer un módulo que no resulte útil nos ahorra tiempo y esfuerzo .þEn effet , être capable de repérer et de supprimer un module dysfonctionnel vous permettra d'économiser en temps et en efforts .þA possibilidade de remover um único módulo disfuncional pode economizar tempo e esforço .
FunctionsþFuncionesþLes fonctionsþFunções
You will often find that you want to re-use a particular set of statements , usually because you have a task that you need to do over and over .þA menudo encontrarás que deseas volver a utilizar un conjunto particular de enunciados , generalmente porque tiene una tarea que vas a utilizar una y otra vez .þDans la pratique , vous vous rendrez compte qu'il est souvent nécessaire de répéter certaines séries d'instructions , généralement parce que l'on est amené à réaliser certaines tâches à plusieurs reprises .þFrequentemente você descobrirá que deseja reutilizar um determinado conjunto de comandos , geralmente porque há uma tarefa que precisa ser realizada repetidas vezes .
Programs are mostly composed of routines that are powerful and general-purpose enough to be reused .þLos programas están compuestos , sobre todo , de rutinas que son lo suficientemente potentes y con propósitos generales y que por lo tanto pueden ser reutilizadas .þLes programmes sont , pour la plupart , composés de routines qui sont assez robustes et générales pour être réutilisées .þProgramas são majoritariamente compostos de rotinas que são poderosas e cujos usos são gerais o suficiente para serem reutilizadas .
These are known as functions , and Python has mechanisms that allow you to define new functions .þEstas rutinas se conocen como funciones , y Python tiene los mecanismos para permitirte definir nuevas funciones .þElles sont connues sous le nom de fonction et Python propose un moyen de définir de nouvelles fonctions .þEssas rotinas são conhecidos como funções , e o Python possui mecanismos que permitem a definição de novas funções .
Let ’ s work through a very simple example of a function .þVamos a trabajar con un ejemplo muy simple de una función .þPour illustrer cela , observons un exemple simple de fonction .þVamos trabalhar com um exemplo muito simples de função .
Suppose you want to create a general purpose function for greeting people .þSupongamos que deseas crear una función general para saludar a la gente .þSupposons que vous souhaitez définir une fonction qui saluerait des personnes .þSuponha que você deseja criar uma função de uso geral para cumprimentar pessoas .
Copy the following function definition into Komodo Edit and save it as greet.py .þCopia la siguiente definición de función en el editor de Komodo y guárdalo como saludo.pyþCopiez la définition de cette fonction dans un éditeur de texte et sauvegardez-la dans un fichier nommé salutation.py .þCopie a definição de função a seguir no Komodo Edit e salve o documento como cumprimento.py .
The line beginning with def is the function declaration .þLa línea que comienza con def es la declaración de función .þLa première ligne commençant par def est la déclaration de la fonction .þA linha que começa com def é a declaração de função .
We are going to define ( `` def '' ) a function , which in this case we have named '' greetEntity '' .þVamos a definir ( `` def '' ) una función que en este caso hemos llamado `` saludoEntidad '' .þNous y définissons ( « def » ) une fonction qui s'appelle « saluer » .þDefiniremos ( `` def '' ) uma função , que neste caso nomeamos `` cumprimentar_entidade '' .
The ( x ) is the function 's parameter . You should understand how that works in a moment .þLa ( x ) es el parámetro de la función . En un momento entenderás cómo trabaja .þLe paramètre de la fonction est ( x ) , vous comprendrez bientôt à quoi celui-ci va nous servir .þO x é o parâmetro da função . Seu funcionamento deve ficar claro num instante .
The second line contains the code of the function .þLa segunda línea contiene el código de la función .þLa seconde ligne contient le code de notre fonction .þA segunda linha contém o código da função .
This could be as many lines as we need , but in this case it is only a single line .þÉste puede contener las líneas que necesitemos , pero en este caso es una sola línea .þUne fonction peut contenir autant de lignes que vous le souhaitez ; dans notre cas , elle n'est composée que d'une ligne .þO número de linhas do código varia conforme a nossa necessidade , mas neste exemplo é apenas uma única linha .
Note that indentation is very important in Python .þTen en cuenta que la sangría es muy importante en Python .þNotez que l'indentation est très importante en Python .þNote que a indentação é muito importante em Python .
The blank space before the print statement tells the interpreter that it is part of the function that is being defined .þEl espacio en blanco antes de la declaración print le dice al intérprete que es parte de la función que ha sido definida .þL'espace avant le print contenu dans notre fonction saluer indique à l'interpréteur que nous nous situons au sein de la fonction .þO espaço vazio antes do comando print informa ao interpretador que esse comando é parte da função que está sendo definida .
You will learn more about this as we go along ; for now , make sure to keep indentation the way we show it .þAprenderás más acerca de esto a medida que avanzamos ; por ahora , asegúrate de mantener la sangría de la manera en que te demostramos .þNous en apprendrons plus à ce sujet plus tard ; pour le moment , vérifiez que l'indentation dans votre fichier soit bien la même que celle que nous vous présentons .þVocê aprenderá mais sobre isso à medida que prosseguirmos ; por ora , certifique-se de manter a indentação da maneira como foi mostrada .
Run the program , and you should see something like this :þEjecuta el programa y debes ver algo como esto :þLancez le programme . Vous devriez obtenir quelque chose ressemblant à cela :þAo executar o programa , deverá ver algo assim :
This example contains one function : greetEntity .þEste ejemplo contiene una función : saludoEntidad .þCet exemple ne contient qu'une seule fonction : saluer .þEste exemplo contém uma função : cumprimentar_entidade .
This function is then '' called '' ( sometimes referred to as `` invoked '' ) two times .þEsta función entonces es llamada ( a veces se le denomina invocada ) dos veces .þCelle-ci est « appelée » deux fois ( on peut aussi dire qu'elle est « invoquée » ) .þEntão essa função é `` chamada '' ( ou `` invocada '' ) duas vezes .
Calling or invoking a function just means we have told the program to execute the code in that function .þLlamar o invocar una función solamente significa que le hemos dicho al programa que ejecute el código en esa función .þAppeler une fonction ou l'invoquer signifie juste que nous demandons au programme d'exécuter le code compris dans celle-ci .þChamar ou invocar uma função significa apenas dizer ao programa para executar o código daquela função .
Like giving the dog his chicken-flavoured treat ( * woof * * woof * ) . In this case each time we have called the function we have given it a different parameter .þComo darle al perro su recompensa sabor a pollo ( * guau * * guau * ) . En este caso , cada vez que hemos llamado a la función le hemos dado un parámetro diferente .þNous avons ici appelé notre fonction avec deux paramètres différents .þÉ como dar ao cachorro sua guloseima com sabor de frango ( * au * * au * ) . Nesse caso , para cada vez que chamamos a função damos à mesma um parâmetro diferente .
Try editing greet.py so that it calls the greetEntity function a third time using your own name as a parameter . Run the program again .þIntenta editar saludo.py para que invoque a la función saludoEntidad una tercera vez utilizando tu propio nombre como parámetro . Ejecuta el programa de nuevo .þÉditez le fichier salutation.py en invoquant à la fin de celui-ci une nouvelle fois notre fonction en remplaçant le paramètre par votre prénom .þTente editar cumprimento.py de forma que ele chame a função cumprimentar_entidade uma terceira vez utilizando seu próprio nome como parâmetro . Execute o código novamente .
You should now be able to figure out what ( x ) does in the function declaration .þDebes ser capaz de imaginarte qué es lo que hace ' ( x ) ' en la declaración de la función .þLancez le programme , cela devrait éclairer ce que ( x ) représente dans la déclaration de la fonction .þAgora deve entender melhor o que x faz na declaração da função .
Before moving on to the next step , edit greet.py to delete the function calls , leaving only the function declaration .þAntes de ir al siguiente paso , edita saludo.py para borrar las llamadas de la función dejando solamente la declaración de la función .þAvant de passer à la prochaine étape , éditez salutation.py de manière à supprimer les appels de fonctions et en ne gardant que la déclaration de la fonction et son contenu .þAntes de prosseguirmos para o próximo passo , edite cumprimento.py para deletar os chamados da função , deixando apenas a declaração da função .
You 're going to learn how to call the function from another program .þVas a aprender cómo llamar a la función desde otro programa .þNous allons maintenant apprendre à appeler une fonction depuis un autre programme .þAgora aprenderá como chamar uma função através de outro programa .
When you are finished , your greet.py file should look like this :þCuando termines , tu archivo saludo.py deberá verse como esto :þLorsque vous aurez terminé , votre fichier salutation.py devrait ressembler à cela :þQuando terminar , seu ficheiro cumprimento.py deve estar assim :
ModularityþModularidadþModularitéþModularidade
When programs are small like the above example , they are typically stored in a single file .þCuando los programas son pequeños , como en el ejemplo anterior , generalmente se almacenan en un solo archivo .þDans notre exemple , le programme est très court et tient naturellement dans un unique fichier .þQuando os programas são pequenos como o do exemplo acima , tipicamente ficam hospedados num único ficheiro .
When you want to run one of your programs , you can simply send the file to the interpreter . As programs become larger , it makes sense to split them into separate files known as modules .þCuando deseas ejecutar uno de tus programas simplemente puedes enviar el archivo al intérprete . Cuando los programas se hacen más grandes , tiene sentido cortarlos en archivos separados conocidos como módulos .þMais quand un programme contient un nombre important de lignes , il sera alors judicieux de le séparer en plusieurs fichiers appelés modules .þQuando quiser executar um de seus programas , pode simplesmente enviar o ficheiro ao interpretador . À medida que os programas ficam maiores , faz sentido dividi-los em ficheiros separados conhecidos como módulos .
This modularity makes it easier for you to work on sections of your larger programs .þEsta modularidad hace que te sea más fácil trabajar en secciones de tus programas más largos .þCette modularité facilitera grandement la maintenance de votre code , qui ne serait pas aussi évidente si vous le stockez dans un grand fichier . En effet , cette méthode de travail permet de travailler de manière indépendante sur chaque partie de votre code avant de les faire tenir toutes ensemble .þEssa modularidade torna mais fácil o trabalho em seções quando os programas forem maiores .
By perfecting each section of the program before putting all of the sections together , you not only make it easier to reuse individual modules in other programs , you make it easier to fix problems by being able to pinpoint the source of the error .þAl perfeccionar cada sección del programa antes de poner todas las secciones juntas haces más fácil el reutilizar módulos individuales en otros programas y haces más sencillo resolver problemas al ser capaz de precisar la fuente del error .þEn utilisant des modules , vous ne simplifierez pas seulement la réutilisation de votre code . Vous serez notamment capable de repérer plus facilement la source des erreurs de vos programmes .þAperfeiçoando cada seção do programa antes de unir todas as seções , torna-se mais fácil não apenas reutilizar módulos individuais em outros programas , como também torna mais fácil corrigir eventuais problemas pois permite identificar a origem do erro .
When you break a program into modules , you are also able to hide the details for how something is done within the module that does it .þCuando se corta un programa en módulos también eres capaz de ocultar detalles de cómo se hace algo dentro del módulo que lo hace .þLorsque vous divisez un programme en modules , vous n'êtes plus obligés de réécrire le détail de chaque procédure que vous souhaitez utiliser .þQuando você divide um programa em módulos , também consegue ocultar os detalhes de como algo é feito dentro do módulo que o faz .
Other modules don ’ t need to know how something is accomplished if they are not responsible for doing it .þOtros módulos no necesitan saber cómo se logra algo si no son responsables de hacerlo .þLes autres modules n'ont pas besoin de savoir comment elle est codée s'ils n'en sont pas responsables .þOutros módulos não precisam saber como algo é feito se não são os responsáveis pela sua execução .
This need-to-know principle is called “ encapsulation “ .þEste principio , necesario de conocer , se llama encapsulamiento .þCe principe est appelé « l'encapsulation » .þEsse princípio `` need-to-know '' ( necessidade de saber ) é chamado de `` encapsulamento '' .
Suppose you were building a car .þSupongamos que estamos construyendo un automóvil .þSupposons que vous construisiez une voiture .þSuponha que você esteja construindo um carro .
You could start adding pieces willy nilly , but it would make more sense to start by building and testing one module — perhaps the engine — before moving on to others .þPodrías empezar a juntar piezas de cualquier modo , pero tendría más sentido comenzar a construir y probar cada modulo -quizá el motor- antes de pasar a otros .þVous pourriez commencer par ajouter une à une des pièces à celle-ci , mais il serait peut-être judicieux de commencer par construire et tester un module — comme par exemple un moteur — avant d'ajouter le reste .þÉ possível começar a adicionar peças à vontade , mas faria mais sentido começar construindo e testando um módulo - talvez o motor - antes de passar para os outros .
The engine , in turn , could be imagined to consist of a number of other , smaller modules like the carburettor and ignition system , and those are comprised of still smaller and more basic modules . The same is true when coding .þEl motor , a su vez , podría idearse a partir de un número de otros pequeños módulos , como el sistema de carburación y de encendido , los cuales se componen de módulos básicos aún más pequeños . Lo mismo aplica cuando escribes código .þLe moteur lui-même pourrait être envisagé comme étant composé d'un certain nombre de modules , plus petits , comme un carburateur , un système d'allumage , qui pourraient eux-mêmes être composés de modules , encore plus basiques et plus petits ... Il en est de même lorsque l'on travaille sur un code informatique : on essaye de décomposer chaque problème en petits morceaux et de les résoudre un à un .þO motor , por sua vez , pode ser imaginado como consistindo em vários outros módulos menores , como o carburador e o sistema de ignição , e esses são compostos de módulos ainda menores e mais básicos . O mesmo se aplica à codificação .
You try to break a problem into smaller pieces , and solve those first .þTrata de separar un problema en partes más pequeñas y resuélvelas primero .þþVocê tenta quebrar um problema em pedaços menores e resolvê-los primeiro .
You already created a module when you wrote the greet.py program .þAcabas de crear un módulo cuando escribiste el programa saludo.py .þVous avez déjà créé un module quand nous avons écrit le programme salutation.py .þUm módulo já foi criado quando o programa cumprimento.py foi escrito .
Now you are going to write a second program , using-greet.py which will import code from your module and make use of it .þAhora vas a escribir un segundo programa , usar-saludo.py , que importará el código de tu módulo y hará uso de él .þVous allez maintenant en écrire un second , utiliser-salutation.py , qui comme l'indique son nom va importer le code du module pour en tirer parti .þAgora você escreverá um segundo programa , utilizando-cumprimento.py , que importará o código do seu módulo e fará uso dele .
Python has a special import statement that allows one program to gain access to the contents of another program file .þPython tiene una declaración especial de importación ( import ) que permite a un programa tener acceso al contenido de otro archivo de programa .þPython possède une instruction spécifique appelée import qui permet à un programme d'accéder au contenu d'un autre programme .þO Python possui um comando especial , import , que permite que um programa tenha acesso ao conteúdo de outro ficheiro de programa .
This is what you will be using .þEsto es lo que estarás utilizando .þC'est ce que nous allons utiliser .þÉ isso que será utilizado .
Copy this code to Komodo Edit and save it as using-greet.py .þCopia este código en el Komodo Edit y guárdalo como usar-saludo.py .þCopiez ce code dans Komodo Edit et sauvegardez-le dans un fichier nommé utiliser-salutation.py .þCopie este código no Komodo Edit e salve-o como utilizando-cumprimento.py .
This file is your program ; greet.py is your module .þEste archivo es tu programa y saludo.py es tu módulo .þCe fichier est votre programme , salutation.py est ici un module .þEste ficheiro é o seu programa ; cumprimento.py é o seu módulo .
We have done a few things here . First , we have told Python to import ( load ) the greet.py module , which we previously created .þHemos hecho algunas cosas aquí . Primero , le dijimos a Python que cargara ( import ) el módulo saludo.py que creamos previamente .þNous faisons ici plusieurs choses : premièrement , nous demandons à l'interpréteur d ' importer ( commande import ) le module salutation.py que nous avons créé précédemment .þFizemos algumas coisas aqui . Primeiro , dissemos ao Python para importar ( carregar ) , utilizando o comando import , o módulo cumprimento.py que criamos anteriormente .
You will also notice that whereas before we were able to run the function by calling only its name : greetEntity ( `` everybody '' ) , we now need to include the module 's name followed by a dot ( .þTambién te darás cuenta que si antes hemos podido ejecutar la función llamándola solo por su nombre saludoEntidad ( `` todos '' ) , ahora tenemos que incluir el nombre del módulo seguido por un punto ( .þVous remarquerez aussi que nous ne pouvons pas appeler une fonction directement à travers son nom de cette manière : saluer ( `` Tout le monde '' ) , nous devons faire précéder celui-ci du nom du module suivi d'un point ( .þVocê perceberá que , embora antes conseguíssemos executar a função chamando-a pelo nome : cumprimentar_entidade ( `` mundo '' ) , agora precisamos incluir o nome do módulo seguido por um ponto ( .
) in front of the function name .þ) antes del nombre de la función .þ) .þ) na frente do nome da função .
In plain English this means : run the greetEntity function , which you should find in the greet.py module .þEn lenguaje llano esto significa : ejecuta la función saludoEntidad que deberás encontrar en el módulo saludo.py .þCe qui en clair signifie : lancez la fonction saluer , que vous devriez trouver dans le module salutation.py .þDe uma forma clara , isso significa : execute a função cumprimentar_entidade , que deve ser encontrada no módulo cumprimento.py .
You can run your using-greet.py program with the `` Run Python '' command that you created in Komodo Edit .þPuedes ejecutar tu programa usar-saludo.py con el comando `` Ejecutar Python '' que creaste en Komodo Edit .þVous pouvez lancer alors le programme utiliser-salutation.py avec la commande « Run Python » de Komodo Edit .þÉ possível executar o programa utilizando-cumprimento.py com o comando `` Run Python '' que você criou no Komodo Edit .
Note that you do not have to run your module…just the program that calls it .þTen en cuenta que no necesitas ejecutar tu módulo ... solamente el programa que lo llama .þNotez que vous n'avez pas à lancer vous-même le module ... mais seulement un programme qui fait appel à celui-ci .þNote que não é necessário executar o módulo… somente o programa que chama por ele .
If all went well , you should see the following in the Komodo Edit output pane :þSi todo se hizo bien , deberás ver lo siguiente en el panel de salida de Komodo Edit :þSi tout se passe bien , vous devriez voir les lignes suivantes s'afficher dans la sortie de Komodo Edit :þSe tudo correu bem , deverá ver o seguinte no painel de saída do Komodo Edit :
Make sure that you understand the difference between loading a data file ( e.g. , helloworld.txt ) and importing a program file ( e.g . greet.py ) before moving on .þAntes de seguir adelante , asegúrate de entender la diferencia entre cargar un archivo de datos ( por ejemplo : hola-mundo.txt ) e importar un archivo de programa ( por ejemplo : saludo.py ) .þAvant de poursuivre les tutoriels suivants , assurez-vous de bien avoir compris la différence entre le chargement d'un fichier de données ( ex . helloworld.txt ) et l'importation d'un programme ( e.g . salutation.py ) .þTenha certeza de que entende a diferença entre carregar um ficheiro de texto ( ex . : olamundo.txt ) e importar um ficheiro de programa ( ex . : cumprimento.py ) antes de prosseguir .
Suggested ReadingsþLecturas recomendadas :þLectures suggéréesþLeituras recomendadas
