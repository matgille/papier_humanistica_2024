<TEI xmlns="http://www.tei-c.org/ns/1.0" xml:id="manipuler-chaines-caracteres-python">
  <teiHeader>
 <fileDesc>
  <titleStmt>
   <title>Manipuler des cha&#238;nes de caract&#232;res en Python</title>
  <author type="original_author"><persName>William J. Turkel</persName><persName>Adam Crymble</persName></author><editor type="reviewers">Jim Clifford</editor><author type="translators">Camille Carette</author><editor type="translation-reviewers"><persName>Marie-Christine Boucher</persName><persName>Florian Cafiero</persName></editor><editor type="editors">Miriam Posner</editor></titleStmt>
  <publicationStmt>
   <idno type="doi">10.46430/phfr0008</idno><date type="published">07/17/2012</date><date type="translated">04/02/2020</date><p>Lesson reviewed and published in Programming Historian.</p>
  </publicationStmt>
  <sourceDesc>
  <p>Born digital, in a markdown format. Original file: <ref type="original_file" target="#manipulating-strings-in-python"/>.</p><p>There are other translations: <ref target="#manipular-strings-python #manipular-cadenas-de-caracteres-en-python"/></p></sourceDesc>
 </fileDesc>
 <profileDesc><abstract><p>Cette le&#231;on constitue une br&#232;ve introduction aux techniques de manipulation des cha&#238;nes de caract&#232;res en Python.</p></abstract><textClass><keyword xml:lang="en">python</keyword></textClass></profileDesc>
</teiHeader>
  <text xml:lang="fr">
    <body>
      <div type="2"><head>Objectifs de la le&#231;on</head>
<p>Cette le&#231;on constitue une courte introduction &#224; la manipulation des <link target="https://fr.wikipedia.org/wiki/Cha%C3%AEne_de_caract%C3%A8res">cha&#238;nes de caract&#232;res</link> en Python. Pour la plupart des t&#226;ches de traitement du langage naturel, il est crucial de savoir comment manipuler les cha&#238;nes de caract&#232;res. Si vous souhaitez mettre la le&#231;on en pratique, vous pouvez &#233;crire et ex&#233;cuter des programmes courts dans votre environnement de programmation favori ou encore ouvrir un terminal en Python pour tester le code &#224; la ligne de commande.</p>
</div>
      <div type="2"><head>Manipuler les cha&#238;nes de caract&#232;res en Python</head>
<p>Si vous avez d&#233;j&#224; &#233;t&#233; confront&#233;s &#224; un autre langage de programmation auparavant, vous avez peut-&#234;tre appris que vous aviez besoin de <emph>d&#233;clarer</emph> ou de <emph>typer</emph> vos variables avant de pouvoir y stocker des donn&#233;es. Ce n&#8217;est pas n&#233;cessaire lorsque l&#8217;on travaille avec Python. En effet, on peut simplement cr&#233;er une cha&#238;ne de caract&#232;res en mettant entre guillemets le contenu de la variable et en utilisant le signe &#233;gal (=) :</p>
<pre><code class="language-python" xml:id="code_manipuler-chaines-caracteres-python_0" type="block" corresp="code_manipuler-chaines-caracteres-python_0.txt"/></pre>
</div>
      <div type="2"><head>Les op&#233;rateurs de cha&#238;nes : additionner et multiplier</head>
<p>Une cha&#238;ne de caract&#232;res est une classe d&#8217;objets qui consiste en une s&#233;rie de caract&#232;res. Python sait d&#233;j&#224; g&#233;rer un certain nombre de types de donn&#233;es polyvalents et puissants, y compris les cha&#238;nes de caract&#232;res. L&#8217;une des fa&#231;ons de manipuler ces cha&#238;nes de caract&#232;res est d&#8217;utiliser un <emph>op&#233;rateur de cha&#238;nes</emph>. Ces op&#233;rateurs sont repr&#233;sent&#233;s par des signes que l&#8217;on associe g&#233;n&#233;ralement avec les math&#233;matiques, tels que +, -, *, / et =. Lorsqu&#8217;on les utilise avec des cha&#238;nes de caract&#232;res, ces op&#233;rateurs effectuent des actions qui sont comparables, mais non similaires, &#224; leurs &#233;quivalents math&#233;matiques.</p>
<div type="3"><head>Concat&#233;ner</head>
<p>Ce terme signifie &#8220;joindre des cha&#238;nes de caract&#232;res&#8221;. Ce processus est appel&#233; <emph>la concat&#233;nation de cha&#238;nes</emph>, et s&#8217;effectue en utilisant l&#8217;op&#233;rateur plus (+). Notez qu&#8217;il vous faut indiquer explicitement l&#224; o&#249; vous voulez que des espaces apparaissent, en les mettant eux aussi entre des guillemets simples.</p>
<p>Dans cette exemple, on attribue le contenu &#8220;Bonjour le monde!&#8221; &#224; la cha&#238;ne de caract&#232;res &#8220;message1&#8221;.</p>
<pre><code class="language-python" xml:id="code_manipuler-chaines-caracteres-python_1" type="block" corresp="code_manipuler-chaines-caracteres-python_1.txt"/></pre>
</div><div type="3"><head>Multiplier</head>
<p>Si vous voulez plusieurs copies d&#8217;une cha&#238;ne de caract&#232;res, utilisez l&#8217;op&#233;rateur de la multiplication (*). Dans cet exemple, on attribue le contenu &#8220;bonjour&#8221; trois fois &#224; la cha&#238;ne de caract&#232;res <emph>message2a</emph> et le contenu &#8220;le monde&#8221; &#224; la cha&#238;ne de caract&#232;res <emph>message2b</emph>. Puis, nous imprimons ces deux cha&#238;nes.</p>
<pre><code class="language-python" xml:id="code_manipuler-chaines-caracteres-python_2" type="block" corresp="code_manipuler-chaines-caracteres-python_2.txt"/></pre>
</div><div type="3"><head>Ajouter</head>
<p>Que faire si vous souhaitez ajouter quelque chose &#224; la fin d&#8217;une cha&#238;ne de caract&#232;res, &#224; la suite du contenu ? Il existe un op&#233;rateur sp&#233;cial con&#231;u &#224; cette fin (+=).</p>
<pre><code class="language-python" xml:id="code_manipuler-chaines-caracteres-python_3" type="block" corresp="code_manipuler-chaines-caracteres-python_3.txt"/></pre>
</div></div>
      <div type="2"><head>M&#233;thodes pour les cha&#238;nes de caract&#232;res : rechercher, modifier</head>
<p>En plus des op&#233;rateurs, Python poss&#232;de des douzaines de <emph>m&#233;thodes</emph> pr&#233;-install&#233;es qui nous permettent de manipuler les cha&#238;nes de caract&#232;res. Utilis&#233;es seules ou en combinaisons, ces m&#233;thodes peuvent appliquer &#224; peu pr&#232;s toutes les op&#233;rations imaginables aux cha&#238;nes de caract&#232;res. Vous pouvez consulter une liste de ces m&#233;thodes sur <link target="https://docs.python.org/3.8/library/stdtypes.html#string-methods">le site de Python</link>, y compris des informations sur la mani&#232;re de les utiliser correctement. Pour vous aider &#224; bien d&#233;marrer votre exploration, voici un bref aper&#231;u de quelques-unes des m&#233;thodes les plus couramment utilis&#233;es :</p>
<div type="3"><head>Longueur</head>
<p>Vous pouvez d&#233;terminer le nombre de caract&#232;res contenus dans une cha&#238;ne de caract&#232;res &#224; l'aide de <code type="inline">len</code>. Notez que l'espace blanc compte comme un caract&#232;re s&#233;par&#233;.</p>
<pre><code class="language-python" xml:id="code_manipuler-chaines-caracteres-python_4" type="block" corresp="code_manipuler-chaines-caracteres-python_4.txt"/></pre>
</div><div type="3"><head>Rechercher une sous-cha&#238;ne</head>
<p>Vous pouvez rechercher <emph>une sous-cha&#238;ne</emph> dans une cha&#238;ne de caract&#232;res et votre programme retournera la position de l'index de d&#233;part de cette sous-cha&#238;ne. Cela vous sera utile lors de nombreuses op&#233;rations plus complexes. Notez que les index sont num&#233;rot&#233;s de gauche &#224; droite et que le d&#233;compte commence &#224; la position 0 et non 1.</p>
<pre><code class="language-python" xml:id="code_manipuler-chaines-caracteres-python_5" type="block" corresp="code_manipuler-chaines-caracteres-python_5.txt"/></pre>
<p>Si la sous-cha&#238;ne n'est pas pr&#233;sente, le programme renvoie une valeur de -1.</p>
<pre><code class="language-python" xml:id="code_manipuler-chaines-caracteres-python_6" type="block" corresp="code_manipuler-chaines-caracteres-python_6.txt"/></pre>
</div><div type="3"><head>Minuscules</head>
<p>Il est parfois utile de convertir une cha&#238;ne de caract&#232;res en minuscules. Par exemple, il est plus facile pour l'ordinateur de reconna&#238;tre que "Parfois" et "parfois" sont le m&#234;me mot si nous standardisons les casses au pr&#233;alable.</p>
<pre><code class="language-python" xml:id="code_manipuler-chaines-caracteres-python_7" type="block" corresp="code_manipuler-chaines-caracteres-python_7.txt"/></pre>
<p>L'effet inverse, qui consiste &#224; transformer tous les caract&#232;res en majuscules, peut &#234;tre obtenu en changeant <code type="inline">.lower()</code> en <code type="inline">.upper().</code></p>
</div><div type="3"><head>Remplacer</head>
<p>Si vous avez besoin de remplacer une sous-cha&#238;ne &#224; l'int&#233;rieur d'une cha&#238;ne, vous pouvez le faire avec la m&#233;thode <code type="inline">replace</code>.</p>
<pre><code class="language-python" xml:id="code_manipuler-chaines-caracteres-python_8" type="block" corresp="code_manipuler-chaines-caracteres-python_8.txt"/></pre>
</div><div type="3"><head>Couper (Slice)</head>
<p>Si vous voulez couper (<code type="inline">slice</code>) les parties non d&#233;sir&#233;es au d&#233;but ou &#224; la fin d'une cha&#238;ne de caract&#232;res, vous pouvez le faire en cr&#233;ant une nouvelle cha&#238;ne &#224; l'aide de l'op&#233;rateur ':'. La m&#234;me technique vous permet &#233;galement de diviser une longue cha&#238;ne de caract&#232;res en composantes plus faciles &#224; g&#233;rer.</p>
<pre><code class="language-python" xml:id="code_manipuler-chaines-caracteres-python_9" type="block" corresp="code_manipuler-chaines-caracteres-python_9.txt"/></pre>
<p>Vous pouvez substituer des variables aux entiers utilis&#233;s dans cet exemple.</p>
<pre><code class="language-python" xml:id="code_manipuler-chaines-caracteres-python_10" type="block" corresp="code_manipuler-chaines-caracteres-python_10.txt"/></pre>
<p>Le d&#233;coupage d'une partie d'une cha&#238;ne facilite de beaucoup l'utilisation de cette m&#233;thode en conjonction avec la m&#233;thode <code type="inline">find</code>.  L'exemple suivant v&#233;rifie la pr&#233;sence de la lettre "d" dans les six premiers caract&#232;res de "Bonjour le monde" et nous dit correctement qu'elle n'est pas pr&#233;sente (-1). Cette technique est beaucoup plus utile dans des cha&#238;nes de caract&#232;res plus longues - des documents entiers par exemple. Notez que l'absence d'un entier avant les deux points signifie que nous voulons commencer au d&#233;but de la cha&#238;ne. Nous pourrions utiliser la m&#234;me technique pour dire au programme d'aller jusqu'au bout, en ne mettant aucun entier apr&#232;s les deux points. Et n'oubliez pas que l'on commence &#224; compter les positions de l'indice &#224; partir de 0 plut&#244;t que de 1.</p>
<pre><code class="language-python" xml:id="code_manipuler-chaines-caracteres-python_11" type="block" corresp="code_manipuler-chaines-caracteres-python_11.txt"/></pre>
<p>Il existe beaucoup d'autres m&#233;thodes de manipulation des cha&#238;nes, mais celles d&#233;crites ci-dessus constituent un bon d&#233;but. Notez que dans ce dernier exemple, nous utilisons des crochets au lieu de parenth&#232;ses. Cette diff&#233;rence de syntaxe signale une distinction importante. En Python, les parenth&#232;ses sont g&#233;n&#233;ralement utilis&#233;es pour passer un <emph>argument</emph> &#224; une fonction. Donc quand on voit quelque chose comme</p>
<pre><code class="language-python" xml:id="code_manipuler-chaines-caracteres-python_12" type="block" corresp="code_manipuler-chaines-caracteres-python_12.txt"/></pre>
<p>cela signifie passer la cha&#238;ne de caracteres "message" &#224; la fonction <code type="inline">len</code>, puis envoyer la valeur retourn&#233;e par cette fonction &#224; l'instruction d'impression (<code type="inline">print</code>). Si une fonction peut &#234;tre appel&#233;e sans argument, vous devez souvent inclure une paire de parenth&#232;ses vides apr&#232;s le nom de la fonction. Nous en avons aussi vu un exemple :</p>
<pre><code class="language-python" xml:id="code_manipuler-chaines-caracteres-python_13" type="block" corresp="code_manipuler-chaines-caracteres-python_13.txt"/></pre>
<p>Cette instruction demande &#224; Python d'appliquer la fonction <code type="inline">lower</code> &#224; la cha&#238;ne "message7", puis de stocker la valeur retourn&#233;e dans la cha&#238;ne <emph>message7a</emph>.</p>
<p>Les crochets ont une fonction diff&#233;rente. Si vous concevez une cha&#238;ne de caract&#232;res comme une s&#233;quence de caract&#232;res, et que vous voulez acc&#233;der &#224; une partie du contenu de la cha&#238;ne en sp&#233;cifiant son emplacement dans la s&#233;quence, alors vous avez &#233;videmment besoin d'un moyen d'indiquer &#224; Python un emplacement dans une s&#233;quence. C'est ce que font les crochets : indiquer un emplacement de d&#233;but et de fin dans une s&#233;quence, comme nous l'avons vu en utilisant la m&#233;thode <code type="inline">slice</code>.</p>
</div></div>
      <div type="2"><head>S&#233;quence d'&#233;chappement</head>
<p>Que faire lorsque vous devez inclure des guillemets dans une cha&#238;ne de caract&#232;res ? Vous ne voulez pas que l'interpr&#233;teur Python se m&#233;prenne et mette fin &#224; la cha&#238;ne lorsqu'il rencontre l'un de ces caract&#232;res. En Python, vous pouvez placer une barre oblique invers&#233;e devant un guillemet pour que ce guillemet ne termine pas la cha&#238;ne. C'est ce qu'on appelle les <emph>s&#233;quences d'&#233;chappement</emph>.</p>
<pre><code class="language-python" xml:id="code_manipuler-chaines-caracteres-python_14" type="block" corresp="code_manipuler-chaines-caracteres-python_14.txt"/></pre>
<pre><code class="language-python" xml:id="code_manipuler-chaines-caracteres-python_15" type="block" corresp="code_manipuler-chaines-caracteres-python_15.txt"/></pre>
<p>Deux autres s&#233;quences d'&#233;chappement vous permettent d'imprimer des tabulateurs et des fins de lignes :</p>
<pre><code xml:id="code_manipuler-chaines-caracteres-python_16" type="block" corresp="code_manipuler-chaines-caracteres-python_16.txt"/></pre>
</div>
      <div type="2"><head>Bibliographie</head>
<ul>
<li>
Mark Lutz, <emph><link target="http://www.worldcat.org/oclc/1061273329">Learning Python</link></emph><ul>
<li>Ch. 7: Strings <emph>(Cha&#238;nes de caract&#232;res)</emph></li>
<li>Ch. 8: Lists and Dictionaries <emph>(Listes et dictionnaires)</emph></li>
<li>Ch. 10: Introducing Python Statements <emph>(Introduction aux d&#233;clarations en Python)</emph></li>
<li>Ch. 15: Function Basics <emph>(Les fondamentaux des fonctions en Python)</emph></li>
</ul>
</li>
</ul>
</div>
      <div type="2"><head>Synchronisation de code</head>
<p>Pour suivre les le&#231;ons &#224; venir, il est important d'avoir les bons fichiers et programmes dans votre r&#233;pertoire programming-historian. &#192; la fin de chaque chapitre, vous pouvez t&#233;l&#233;charger le fichier zip de programming-historian pour vous assurer que vous avez le bon code. Notez que nous avons supprim&#233; les fichiers inutiles des le&#231;ons pr&#233;c&#233;dentes. Votre r&#233;pertoire peut contenir plus de fichiers et c'est OK !</p>
<ul>
<li>programming-historian-1 (<link target="/assets/python-lessons1.zip">zip</link>)</li>
</ul>
<p>Super ! Vous &#234;tes maintenant pr&#234;t &#224; passer &#224; <link target="/en/lessons/from-html-to-list-of-words-1">la le&#231;on suivante</link> (en anglais).</p>
</div>
    </body>
  </text>
</TEI>
