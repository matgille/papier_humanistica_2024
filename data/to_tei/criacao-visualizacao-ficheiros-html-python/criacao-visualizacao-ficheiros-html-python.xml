<TEI xmlns="http://www.tei-c.org/ns/1.0" xml:id="criacao-visualizacao-ficheiros-html-python">
    <teiHeader>
        <fileDesc>
            <titleStmt>
                <title>Criação e Visualização de Ficheiros HTML com Python</title>
                <author role="original_author">
                    <persName>William J. Turkel</persName>
                    <persName>Adam Crymble</persName>
                </author>
                <editor role="reviewers">Jim Clifford</editor>
                <author role="translators">Felipe Lamarca</author>
                <editor role="translation-reviewers">
                    <persName>Gabriela Kucuruza</persName>
                    <persName>Ana Carolina Erthal</persName>
                </editor>
                <editor role="editors">Miriam Posner</editor>
            </titleStmt>
            <publicationStmt>
                <distributor>Programming Historian</distributor>
                <date type="translated">10/31/2022</date>
                <idno type="doi">10.46430/phpt0030</idno>
                <date type="published">07/17/2012</date>
            </publicationStmt>
            <sourceDesc>
                <p>Born digital, in a markdown format. Original file: <ref type="original_file" target="#creating-and-viewing-html-files-with-python"/>.</p>
                <p>There are other translations: <ref target="#crear-y-ver-archivos-html-con-python"/>
                </p>
            </sourceDesc>
        </fileDesc>
        <profileDesc>
            <abstract>
                <p>Com esta lição aprenderá a criar ficheiros HTML com scripts Python e a usar o Python para abrir automaticamente um ficheiro HTML no Firefox.</p>
            </abstract>
            <textClass>
                <keywords>
                    <term xml:lang="en">python</term>
                    <term xml:lang="en">website</term>
                </keywords>
            </textClass>
        </profileDesc>
    </teiHeader>
    <text xml:lang="pt">
        <body>
            <div type="2">
                <head>Objetivos da Lição</head>
                <p>Esta lição usa o Python para criar e visualizar um ficheiro HTML. Se escrever programas que produzem HTML, pode utilizar qualquer navegador para ver os seus resultados. Isso é especialmente conveniente se o seu programa cria automaticamente hiperlinks ou entidades gráficas, como gráficos e diagramas.</p>
                <p>Aqui irá aprender como criar ficheiros HTML com scripts Python e como utilizar o Python para abrir um ficheiro HTML automaticamente no Firefox.</p>
            </div>
            <div type="2">
                <head>Ficheiros Necessários para esta Lição</head>
                <list type="unordered">
                    <item>
                        <code rend="inline">obo.py</code>
                    </item>
                </list>
                <p>Caso não possua esses ficheiros da lição anterior, pode fazer o <emph>download</emph> do programming-historian-5, um <ref target="/assets/python-lessons5.zip">ficheiro zip da lição anterior</ref>.</p>
            </div>
            <div type="2">
                <head>Criando HTML com Python</head>
                <p>Até aqui, aprendemos como usar o Python para fazer o <emph>download</emph> de fontes <emph>online</emph> e extrair informação delas de forma automática. Lembre-se de que o nosso objetivo final é incorporar perfeitamente a programação em nossa prática de investigação. Em linha com este objetivo, nesta lição e na próxima aprenderemos como apresentar dados de volta à forma de HTML. Isso possui algumas vantagens. Primeiro, ao armazenar a informação no nosso disco rígido como um ficheiro HTML, podemos abri-lo com o Firefox e usar o <ref target="https://www.zotero.org/">Zotero</ref>, por exemplo, para indexar e fazer anotações posteriormente. Segundo, há uma ampla gama de opções de visualização para HTML que podemos usar mais tarde.</p>
                <p>Caso ainda não tenha feito o <ref target="http://www.w3schools.com/html/default.asp">tutorial de HTML do W3 Schools</ref>, reserve alguns minutos para fazê-lo antes de continuar. Criaremos um documento HTML usando Python, então será saber o que é um documento HTML!</p>
            </div>
            <div type="2">
                <head>"Olá mundo" em HTML usando Python</head>
                <p>Uma das ideias mais poderosas na ciência da computação é que um ficheiro que parece conter código sob uma perspectiva pode ser visto como dados sob outra. É possível, em outras palavras, escrever programas que manipulam outros programas. O que faremos a seguir é criar um ficheiro HTML que diz "Olá mundo!" usando Python. Faremos isso armazenando <emph>tags</emph> HTML em uma string multilinha de Python e guardando os conteúdos em um novo ficheiro. Esse ficheiro será armazenado com uma extensão <code rend="inline">.html</code> ao invés de uma extensão <code rend="inline">.txt</code>.</p>
                <p>Tipicamente um ficheiro HTML começa com uma <ref target="http://www.w3schools.com/tags/tag_doctype.asp">declaração do tipo de documento</ref>. Vimos isso ao escrever um programa HTML "Olá mundo!" em uma lição anterior. Para facilitar a leitura do nosso código, omitiremos o <code rend="inline">doctype</code> neste exemplo. Lembre-se de que uma string multilinha é criada colocando o texto entre três aspas (veja abaixo):</p>
                <ab>
                    <code lang="language-python" xml:id="code_criacao-visualizacao-ficheiros-html-python_0" corresp="code_criacao-visualizacao-ficheiros-html-python_0.txt" rend="block"/>
                </ab>
                <p>Salve o programa acima como <code rend="inline">write-html.py</code> e execute-o. Use <code rend="inline">Ficheiro -&gt; Abrir</code> (ou <code rend="inline">Arquivo -&gt; Abrir</code>, na versão brasileira) no editor de texto de sua escolha para abrir <code rend="inline">helloworld.html</code> para verificar que seu programa de fato criou o ficheiro. O conteúdo deve se parecer com isto:</p>
                <figure>
                    <desc>Fonte HTML gerada pelo programa Python</desc>
                    <graphic url="hello-world-html.png"/>
                </figure>
                <p>Agora vá para o seu navegador Firefox e escolha <code rend="inline">Ficheiro -&gt; Nova Guia</code> (ou <code rend="inline">Arquivo -&gt; Nova aba</code>, na versão brasileira), vá para a guia e escolha <code rend="inline">Ficheiro -&gt; Abrir Ficheiro</code> (ou <code rend="inline">Arquivo -&gt; Abrir arquivo</code>, na versão brasileira). Selecione <code rend="inline">helloworld.html</code>. Deve agora ser capaz de ver a sua mensagem no navegador. Reserve um momento para pensar sobre isso: agora tem a habilidade de escrever um programa que pode criar uma página web automaticamente. Não há razão pela qual não possa escrever um programa para criar automaticamente um <emph>site</emph> inteiro, caso deseje.</p>
                <p style="alert alert-warning">
  Por questões de versionamento, é possível que o seu navegador Firefox não possua a opção de abrir um ficheiro manualmente na guia. Nesse caso, procure pelo ficheiro HTML no seu diretório, clique nele com o botão direito e selecione a opção de abri-lo com o navegador Firefox. 
</p>
            </div>
            <div type="2">
                <head>Usando o Python para Controlar o Firefox</head>
                <p>Nós criamos um ficheiro HTML automaticamente, mas depois precisamos deixar o nosso editor, ir para o Firefox e abrir o ficheiro em uma nova guia. Não seria melhor incluir essa etapa final no nosso programa Python? Digite ou copie o código abaixo e armazene-o como <code rend="inline">write-html-2.py</code>. Quando executá-lo, ele deve criar o seu ficheiro HTML e depois abri-lo automaticamente numa nova guia do Firefox. Maravilha!</p>
                <div type="3">
                    <head>Instruções para Mac</head>
                    <p>Usuários de Mac precisarão especificar a localização precisa do ficheiro <code rend="inline">.html</code> nos seus computadores. Para fazer isso, localize a pasta <code rend="inline">programming-historian</code> que criou para fazer esses tutoriais, clique com o botão direito nela e selecione "Obter Informações" (ou "<emph>Get Info</emph>").</p>
                    <p>Pode então recortar e colar a localização do ficheiro listado depois de "Onde:" (ou "<emph>Where:</emph>") e se certificar de incluir uma barra final (/) para que o computador saiba que deseja algo dentro desse diretório (e não o diretório em si).</p>
                    <ab>
                        <code lang="language-python" xml:id="code_criacao-visualizacao-ficheiros-html-python_1" corresp="code_criacao-visualizacao-ficheiros-html-python_1.txt" rend="block"/>
                    </ab>
                    <p>Caso receba um erro "Ficheiro não encontrado" (ou "<emph>File not found</emph>"), significa que não mudou o caminho para o ficheiro corretamente.</p>
                </div>
                <div type="3">
                    <head>Instruções para Windows</head>
                    <ab>
                        <code lang="language-python" xml:id="code_criacao-visualizacao-ficheiros-html-python_2" corresp="code_criacao-visualizacao-ficheiros-html-python_2.txt" rend="block"/>
                    </ab>
                    <p>***</p>
                    <p>No final, não só escreveu um programa Python que pode criar um HTML simples, mas também controlou o seu navegador Firefox utilizando Python. Na próxima lição, focaremos em apresentar os dados que coletamos na forma de um ficheiro HTML.</p>
                </div>
            </div>
            <div type="2">
                <head>Leituras Sugeridas</head>
                <list type="unordered">
                    <item>
Lutz, Learning Python<list type="unordered">
                            <item>Re-read and review Chs. 1-17</item>
                        </list>
                    </item>
                </list>
            </div>
            <div type="2">
                <head>Sincronização de Código</head>
                <p>Para acompanhar lições futuras, é importante ter os ficheiros e programas corretos no seu diretório “programming-historian”. No final de cada lição, é possível fazer o <emph>download</emph> do ficheiro zip “programming-historian” para garantir que possui o código correto. Caso esteja acompanhando com a versão para Mac / Linux, deve ter que abrir o ficheiro <code rend="inline">obo.py</code> e mudar "file:///Users/username/Desktop/programming-historian/" para o caminho até o diretório no seu próprio computador.</p>
                <list type="unordered">
                    <item>
                        <ref target="/assets/python-lessons6.zip">python-lessons6.zip</ref>
                    </item>
                </list>
            </div>
        </body>
    </text>
</TEI>
