<TEI xmlns="https://tei-c.org/ns/1-0/">
  <metadata>
  <title>Creaci&#243;n de sitios est&#225;ticos con Jekyll y GitHub Pages</title>
  <collection>lessons</collection>
  <layout>lesson</layout>
  <slug>sitios-estaticos-con-jekyll-y-github-pages</slug>
  <date>2016-04-18</date>
  <translation_date>2021-03-01</translation_date>
  <authors>Amanda Visconti</authors>
  <reviewers>Paige Morgan,Jamie Howe</reviewers>
  <editors>Fred Gibbs</editors>
  <translator>HD CAICYT Lab team,Gimena del Rio Riande,Nidia Hern&#225;ndez,Romina De Le&#243;n,Gabriel Calarco,Raffaele Viglianti</translator>
  <translation-editor>Joshua G. Ortiz Baco</translation-editor>
  <translation-reviewer>Kahlila Chaar-P&#233;rez,Mathilda Shepard</translation-reviewer>
  <original>building-static-sites-with-jekyll-github-pages</original>
  <review-ticket>https://github.com/programminghistorian/ph-submissions/issues/303</review-ticket>
  <difficulty>1</difficulty>
  <activity>presenting</activity>
  <topics>website,data-management</topics>
  <abstract>Esta lecci&#243;n te ayudar&#225; a crear un sitio web seguro completamente gratuito, f&#225;cil de mantener y sobre el que tendr&#225;s control total, como un blog acad&#233;mico, un sitio web de proyectos o un portafolio en l&#237;nea.</abstract>
  <avatar_alt>Una ilustraci&#243;n del Dr. Jekyll transform&#225;ndose en Mr. Hyde</avatar_alt>
  <doi>10.46430/phes0050</doi>
</metadata>
  <text>
    <body><p><hi rend="bold">Esta lecci&#243;n es para ti</hi> si deseas tener un sitio web de proyectos totalmente gratuito, seguro, f&#225;cil de actualizar y de preservar sobre el que tengas control total, como un blog acad&#233;mico, un sitio web de proyecto, o un portfolio en l&#237;nea.</p>
<p><hi rend="bold">Al final de esta lecci&#243;n</hi>, tendr&#225;s un sitio web b&#225;sico en funcionamiento donde podr&#225;s publicar contenido que otras personas podr&#225;n visitar -&#161;se ver&#225; <link target="https://amandavisconti.github.io/JekyllDemo/">as&#237;</link>!- y tambi&#233;n tendr&#225;s algunos recursos para explorar, si deseas personalizar a&#250;n m&#225;s el sitio.</p>
<p><hi rend="bold">Requisitos:</hi> una computadora (Mac/Windows/Linux funcionan, aunque esta lecci&#243;n no cubre algunos aspectos del uso de Linux), que permita la descarga e instalaci&#243;n de software y conexi&#243;n a Internet que soporte la descarga de software. Seg&#250;n los usuarios, se necesitan entre 1 y 3 horas para completar toda la lecci&#243;n.</p>
<p><hi rend="bold">Nivel de dificultad:</hi> Intermedio (esta lecci&#243;n no incluye el uso de l&#237;nea de comandos y git, pero te ofrece todo lo necesario para que la completes).</p>
<div n="2"><head>Contenidos</head>
<p>{:.no_toc}</p>
<ul>
<li>TOC
{:toc}</li>
</ul>
</div><div n="2"><head>&#191;Qu&#233; son los sitios est&#225;ticos, Jekyll, etc. y por qu&#233; deber&#237;an importarme? <a id="section0"/></head>
<p>Este tutorial se basa en la <link target="https://jekyllrb.com/docs/home/">Documentaci&#243;n oficial de Jekyll</link> escrita por la comunidad de Jekyll. Revisa la secci&#243;n <link target="#section9-3">"Leer m&#225;s"</link> al final de la lecci&#243;n si deseas profundizar m&#225;s sobre estos temas.</p>
<div n="3"><head>Sitios din&#225;micos, sitios est&#225;ticos y Jekyll <a id="section0-1"/></head>
<p>Tanto los <emph>sitios web din&#225;micos</emph>, como los que son creados y administrados por gestores de contenidos tales como <link target="https://www.drupal.com/">Drupal</link>, <link target="https://wordpress.org/">WordPress</link> y <link target="https://omeka.org/">Omeka</link> extraen informaci&#243;n de una base de datos para completar el contenido de una p&#225;gina web. Cuando buscamos un libro en Amazon.com, por ejemplo, la p&#225;gina de resultados de b&#250;squeda no existe como una p&#225;gina HTML completa; en cambio, Amazon.com tiene una plantilla para la p&#225;gina de resultados de b&#250;squeda, que incluye elementos que comparten todas las p&#225;ginas de resultados (como el men&#250; principal y el logotipo de Amazon) y consulta una base de datos para insertar en esa plantilla los resultados de la b&#250;squeda que nosotros realizamos.</p>
<p>Los <emph>sitios web est&#225;ticos</emph> no usan una base de datos para almacenar informaci&#243;n; por el contrario, toda la informaci&#243;n que se muestra en cada p&#225;gina web ya est&#225; contenida en tu correspondiente archivo HTML. Las p&#225;ginas HTML que componen un sitio est&#225;tico se pueden escribir completamente a mano o se puede delegar parte de este trabajo usando una herramienta como Jekyll.</p>
<p><emph>Jekyll</emph> es un software que nos ayuda a "generar" o crear un <emph>sitio web est&#225;tico</emph> (Jekyll muchas veces es caracterizado como un "generador de sitios est&#225;ticos"). Jekyll utiliza plantillas de p&#225;gina para aquellos elementos como men&#250;s principales y pies de p&#225;gina que normalmente se repiten en todas las p&#225;ginas que componen un sitio y por ende consumen mucho tiempo si escribimos manualmente el HTML para incluirlos en cada p&#225;gina web. Con Jekyll, estas plantillas se combinan con otros archivos con informaci&#243;n espec&#237;fica (por ejemplo, un archivo para cada post de un blog) para generar p&#225;ginas HTML completas para los visitantes de un sitio. Jekyll no necesita consultar bases de datos ni crear una nueva p&#225;gina HTML (o completar una parcial) cuando los usuarios visitan una p&#225;gina web, sino que ya cuenta con las p&#225;ginas HTML completas y solo las actualiza cuando/si alguna vez cambian.</p>
<figure><desc>C&#243;digo de una p&#225;gina de Jekyll en formato md</desc><graphic url="sitios-estaticos-con-jekyll-y-github-pages_1.png"/></figure>
<figure><desc>C&#243;digo de la misma p&#225;gina de Jekyll pero en formato html, tal como puede verse en el explorador</desc><graphic url="sitios-estaticos-con-jekyll-y-github-pages_2.png"/></figure>
<p>Hay que tener en cuenta que cuando alguien se refiere a un "sitio web de Jekyll", en realidad se refiere a un sitio web est&#225;tico (HTML puro) que se ha creado utilizando Jekyll. Jekyll es un software que crea sitios web. Jekyll no est&#225; "ejecutando" el sitio en vivo, sino que es un "generador de sitios est&#225;ticos": es una herramienta que crea los archivos del sitio est&#225;tico que luego son alojados en un servidor web, como se hace con cualquier otro sitio web HTML.</p>
<p>Dado que los sitios est&#225;ticos no son m&#225;s que archivos de texto (sin una base de datos que complique las cosas), es posible <emph>versionarlos</emph> f&#225;cilmente, es decir, usar una herramienta para llevar un registro de las diferentes versiones del sitio a lo largo del tiempo rastreando los cambios en los archivos de texto que lo componen. El control de versiones es muy &#250;til cuando deseamos combinar ambas versiones (por ejemplo, dos estudiantes escriben una publicaci&#243;n de blog juntos y deseamos combinar sus dos versiones) o cuando queremos comparar archivos para buscar diferencias entre ellos (por ejemplo, "&#191;C&#243;mo se describ&#237;a el proyecto en la p&#225;gina 'Acerca de' original?"). El control de versiones es muy &#250;til cuando se trabaja en equipo (por ejemplo, permite combinar y rastrear el trabajo de diferentes personas), pero tambi&#233;n es &#250;til al crear o ejecutar un sitio web por nuestra propia cuenta.</p>
<p>Puedes leer m&#225;s acerca de <link target="http://jekyllrb.com/docs/home/">Jekyll</link> o <link target="https://davidwalsh.name/introduction-static-site-generators">generadores de sitios est&#225;ticos</link> (en ingl&#233;s).</p>
</div><div n="3"><head>GitHub &amp; GitHub Pages <a id="section0-2"/></head>
<p><emph><link target="https://pages.github.com/">GitHub Pages</link></emph> es un espacio gratuito para almacenar los archivos que ejecutan un sitio web y alojar ese sitio para que las personas lo visiten (solo funciona para tipos particulares de sitios web, como sitios HTML b&#225;sicos o sitios Jekyll; no aloja bases de datos).</p>
<p><emph><link target="https://github.com/">GitHub</link></emph> es una plataforma visual para utilizar <emph><link target="https://git-scm.com/documentation">git</link></emph>, un sistema de <emph>versionado</emph> o, en otras palabras, de registro de cambios realizados en los archivos (c&#243;digo y documentos de texto, entre otros) a trav&#233;s del tiempo (como ya explicamos <link target="#section0-1">m&#225;s arriba</link>). Si tienes curiosidad, puedes explorar este <link target="https://guides.github.com/activities/hello-world/">minitutorial de GitHub</link> (en ingl&#233;s).</p>
</div><div n="3"><head>&#191;Por qu&#233; usar sitios est&#225;ticos?<a id="section0-3"/></head>
<p>Opciones como <link target="https://www.drupal.com/">Drupal</link>, <link target="https://wordpress.org/">WordPress</link> y <link target="https://omeka.org/">Omeka</link> son &#250;ltiles para la creaci&#243;n de sitios web complejos e interactivos como Amazon o una edici&#243;n digital interactiva de una novela, pero para muchos blogs, sitios web de proyectos y portafolios en l&#237;nea, un sitio web est&#225;tico (como un sitio web creado con Jekyll) puede hacer todo lo que se necesita al mismo tiempo que proporciona algunas ventajas:</p>
<ul>
<li>
<p><hi rend="bold">Mantenimiento:</hi> Las actualizaciones y el mantenimiento necesitan realizarse con mucha menos frecuencia (menos de una vez al a&#241;o).</p>
</li>
<li>
<p><hi rend="bold">Preservaci&#243;n:</hi> Al no emplear base de datos, los archivos de texto que componen tu sitio son todo lo que necesitas guardar para preservar y replicarlo. Resulta sencillo hacer un respaldo del sitio o enviarlo a un repositorio institucional.</p>
</li>
<li>
<p><hi rend="bold">Aprendizaje:</hi> Debido a la ausencia de base de datos y a que no hay una gran cantidad de archivos de c&#243;digo que brinden funciones que quiz&#225;s ni siquiera necesites, hay muchos menos componentes en tu sitio web; es m&#225;s f&#225;cil revisarlos y saber lo que hace cada uno. Es mucho m&#225;s f&#225;cil convertirse en un usuario de Jekyll b&#225;sico y avanzado.</p>
</li>
<li>
<p><hi rend="bold">M&#225;s personalizaci&#243;n</hi>: Dado que aprender a dominar tu sitio web es f&#225;cil, cosas que definitivamente querr&#225;s hacer, como cambiar el aspecto (el "tema") de un sitio creado por Jekyll, resultan mucho m&#225;s sencillas que alterar el aspecto de un sitio en WordPress o Drupal.</p>
</li>
<li>
<p><hi rend="bold">Alojamiento gratuito:</hi> Si bien muchas herramientas de sitios web como Drupal, WordPress y Omeka son gratuitas, alojarlas (pagar a alguien para que muestre los archivos de tu sitio web a los visitantes del sitio) puede costar dinero.</p>
</li>
<li>
<p><hi rend="bold">Control de versiones:</hi> Hospedar en GitHub Pages significa que tu sitio est&#225; vinculado a la interfaz visual de GitHub para el control de versiones de git, por lo que puede realizarse un seguimiento de los cambios en tu sitio y, si fuera necesario, volver al estado anterior de cualquier publicaci&#243;n de blog, o p&#225;gina. Esto incluye archivos cargados que tal vez desees almacenar en el sitio, como programas de estudio y publicaciones antiguas (el control de versiones se explic&#243; <link target="#section0-1">con m&#225;s detalle anteriormente</link>).</p>
</li>
<li>
<p><hi rend="bold">Seguridad:</hi> No hay una base de datos a la que haya que proteger de posibles ataques maliciosos.</p>
</li>
<li>
<p><hi rend="bold">Velocidad:</hi> Los archivos m&#237;nimos del sitio web y la inexistencia de una base de datos para consultar resultan en un tiempo de carga de p&#225;gina m&#225;s r&#225;pida.</p>
</li>
</ul>
<p>La creaci&#243;n de un sitio web est&#225;tico con Jekyll ofrece a&#250;n m&#225;s ventajas, sin perder las de un sitio web est&#225;tico HTML codificado a mano:</p>
<ul>
<li>
<p><hi rend="bold">Aprendizaje:</hi> Es m&#225;s f&#225;cil comenzar a personalizar tu sitio y escribir tu contenido, ya que no necesitar&#225;s aprender o usar HTML.</p>
</li>
<li>
<p><hi rend="bold">Creado para bloguear:</hi> Jekyll fue creado para permitir publicaciones de blog, por lo que es f&#225;cil bloguear (agregar contenido nuevo, ordenado por fecha) y realizar tareas relacionadas, como mostrar un archivo de todas las publicaciones de blog por mes, o incluir un enlace a las tres publicaciones de blog m&#225;s recientes al final de cada publicaci&#243;n.</p>
</li>
<li>
<p><hi rend="bold">La plantilla automatiza las tareas repetitivas:</hi> Jekyll facilita la automatizaci&#243;n de las tareas repetitivas del sitio web a trav&#233;s de su sistema de "plantillas": puedes crear contenido que, por ejemplo, debe aparecer en el encabezado y pie de cada p&#225;gina (por ejemplo, el logotipo o el men&#250; principal), o repetir informaci&#243;n en cada publicaci&#243;n de blog (por ejemplo, nombre del autor y fecha de publicaci&#243;n). Esta informaci&#243;n de la plantilla se repetir&#225; autom&#225;ticamente en las p&#225;ginas web que desees, en lugar de obligarte a reescribir manualmente esa informaci&#243;n. Esto no solo ahorra mucho tiempo de copiar y pegar si alguna vez deseas cambiar algo que aparece en cada p&#225;gina de tu sitio web (por ejemplo, un nuevo logotipo o un nuevo elemento en el men&#250; principal), ya que si lo cambias una vez en una plantilla, lo cambiar&#225;s en cada lugar que aparece en tu sitio web.</p>
</li>
</ul>
</div></div><div n="2"><head>Antes de la instalaci&#243;n <a id="section1"/></head>
<p>&#161;Estamos listos, manos a la obra! En el resto de esta lecci&#243;n, vamos a instalar algunos programas en nuestras computadoras, usar la l&#237;nea de comandos para instalar algunas cosas que solo se pueden instalar de esa manera, ver y personalizar una versi&#243;n privada de tu sitio web y finalmente hacer que tu sitio web sea accesible p&#250;blicamente en la web. Si tienes problemas en alg&#250;n momento de esta lecci&#243;n, consulta la <link target="#section1-9">secci&#243;n de ayuda sobre c&#243;mo hacer preguntas o informar problemas</link></p>
<p>En esta secci&#243;n vamos a asegurarnos de tener todo lo necesario para crear un sitio web est&#225;tico con Jekyll y GitHub Pages. Para eso, vamos a abordar:</p>
<ul>
<li><link target="#section1-0">qu&#233; sistema operativo es posible usar (es decir, Mac / Windows / Linux)</link></li>
<li><link target="#section1-1">crear una cuenta de GitHub</link></li>
<li><link target="#section1-3">por qu&#233; es necesario usar un "editor de texto" para trabajar en nuestro sitio web</link></li>
<li><link target="#section1-4">c&#243;mo usar la l&#237;nea de comandos</link></li>
</ul>
<p>Todos los elementos que vamos a instalar son herramientas de desarrollo web est&#225;ndar. Se trata de herramientas confiables, por lo que no es indispensable saber exactamente qu&#233; hace cada una de ellas. Brindaremos una breve explicaci&#243;n de los elementos que hay que comprender en profundidad y dejaremos enlaces en caso de desear saber m&#225;s sobre lo que se est&#225; instalando.</p>
<div n="3"><head>Sistemas operativos <a id="section1-0"/></head>
<p>Este tutorial est&#225; destinado a usuarios de Windows y Mac. Jekyll tambi&#233;n funciona en Linux; sin embargo, para fines pedag&#243;gicos, este tutorial utiliza el software GitHub Desktop (disponible para Windows y Mac &#250;nicamente); los usuarios de Linux tienen que usar <link target="https://git-scm.com/docs/gittutorial">git</link> para ello ((algo que este tutorial no aborda)).</p>
<p>Jekyll no es oficialmente compatible con Windows, lo que significa que la documentaci&#243;n oficial de Jekyll (las p&#225;ginas que gu&#237;an a trav&#233;s de la configuraci&#243;n y que explican su funcionamiento) no aborda el uso de Windows. Este tutorial se basa en <link target="https://davidburela.wordpress.com/2015/11/28/easily-install-jekyll-on-windows-with-3-command-prompt-entries-and-chocolatey/">las instrucciones de Windows de David Burela</link> para las partes de la secci&#243;n <link target="#section2">Instalaci&#243;n de dependencias</link> en las que los usuarios de Windows deben hacer algo diferente; sin embargo, como parte de esta traducci&#243;n al espa&#241;ol hemos revisado el proceso de instalaci&#243;n en Windows.</p>
</div><div n="3"><head>Cuenta de usuario de GitHub <a id="section1-1"/></head>
<p>La cuenta de usuario de GitHub nos permite alojar nuestro sitio web (ponerlo a disposici&#243;n para que otros lo visiten) de forma gratuita en esa plataforma. Como beneficio adicional, tambi&#233;n nos permite llevar un registro de las versiones de nuestro sitio y tu escritura a medida que crece o cambia con el tiempo.</p>
<ol>
<li>Visita <link target="https://github.com/">GitHub.com</link> y haz clic en el bot&#243;n verde "Sign up" (Registrarse).</li>
<li>En la p&#225;gina siguiente, ingresa el nombre de usuario deseado. El nombre de usuario es visible para otros usuarios, nos identifica en GitHub y tambi&#233;n es parte de la URL de nuestro sitio. Por ejemplo, si el nombre de usuario de GitHub es <emph>hdcaicyt</emph>, la URL del sitio ser&#225; <link target="http://hdcaicyt.github.io/">http://hdcaicyt.github.io/</link>. (Ten en cuenta que uno tambi&#233;n puede comprar su propio nombre de dominio y usarlo para este sitio, pero eso no se tratar&#225; en este tutorial). Escribe una direcci&#243;n de correo electr&#243;nico de uso habitual y a&#241;ade una contrase&#241;a que contenga al menos un n&#250;mero y una letra min&#250;scula.</li>
<li>En el recuadro "Verify your account", presiona el bot&#243;n "Verify" (Verificar). Usa las flechas para poner la imagen en el sentido correcto. Finalmente, haz clic en "Select a plan" (Seleccionar un plan).</li>
<li>En la p&#225;gina siguiente, haz clic en el bot&#243;n "Choose Free" (Seleccionar gratis).</li>
<li>Baja hasta el final de la siguiente p&#225;gina y haz clic en "Complete Setup" (Completar configuraci&#243;n).</li>
<li>Ve a tu servicio de email y abre el correo de GitHub (si no aparece en la bandeja de entrada, b&#250;scalo en correo no deseado) y haz clic en el bot&#243;n "Verify email address" (Verificar direcci&#243;n de email).</li>
<li><emph>Opcional</emph>: puedes visitar <link target="https://github.com/settings/profile">https://github.com/settings/profile</link> para agregar un nombre completo (puede ser tu nombre real, nombre de usuario de GitHub u otra cosa) y m&#225;s informaci&#243;n de perfil p&#250;blico, si lo deseas.</li>
</ol>
</div><div n="3"><head>Aplicaci&#243;n GitHub Desktop <a id="section1-2"/></head>
<p>La aplicaci&#243;n GitHub Desktop facilita la actualizaci&#243;n del sitio web luego de haberlo configurado. En lugar de usar la l&#237;nea de comandos cada vez que queramos actualizar nuestro sitio, es posible usar este herramienta visual.</p>
<ol>
<li>Visita el <link target="https://desktop.github.com/">sitio de GitHub Desktop</link> y haz clic en el bot&#243;n "Download" para descargar GitHub Desktop en tu computadora (Mac y Windows solamente; los usuarios de Linux pueden usar git solo a trav&#233;s de la l&#237;nea de comandos).</li>
<li>Una vez que el archivo se haya descargado, haz doble clic en &#233;l y sigue las siguientes instrucciones de instalaci&#243;n.</li>
<li>Ingresa el nombre de usuario y la contrase&#241;a para la cuenta de GitHub que creaste en el punto anterior y haz clic en "Continuar".</li>
<li>Ingresa el nombre y el correo electr&#243;nico a los que deseas asociar tu sitio (probablemente tu nombre p&#250;blico y tu email de trabajo).</li>
<li>En la misma p&#225;gina, haz clic en el bot&#243;n "Instalar herramientas de l&#237;nea de comandos" e ingresa el nombre de usuario y contrase&#241;a de tu computadora, si te lo solicita (luego haz clic en el bot&#243;n "Instalar ayudante" en el indicador). Cuando recibas un mensaje de que todas las herramientas de l&#237;nea de comandos se han instalado correctamente, haz clic en continuar.</li>
<li>La &#250;ltima p&#225;gina te preguntar&#225; "&#191;Qu&#233; repositorios deseas usar?". Ign&#243;rala y haz clic en el bot&#243;n "Listo".</li>
<li><emph>Opcional:</emph> puedes hacer el tutorial de uso de GitHub Desktop si lo deseas, pero en esta lecci&#243;n cubriremos todo lo que necesitas saber sobre GitHub).</li>
</ol>
</div><div n="3"><head>Editor de texto <a id="section1-3"/></head>
<p>Es necesario descargar e instalar un editor de texto para realizar peque&#241;as personalizaciones al c&#243;digo de nuestro sitio Jekyll. Algunas buenas opciones gratuitas incluyen <link target="https://www.jedit.org">jEdit</link>, <link target="https://atom.io/">Atom</link>, <link target="https://www.sublimetext.com/3">SublimeText</link>, <link target="https://notepad-plus-plus.org/">Notepad ++</link> para Windows o <link target="http://www.barebones.com/products/bbedit">BBedit</link> para Mac. Los procesadores de texto, como Microsoft Word o WordPad, no son una buena opci&#243;n porque es f&#225;cil olvidar c&#243;mo formatear y guardar el archivo; es posible agregar accidentalmente formatos y caracteres extra y/o invisibles que pueden generar problemas en el sitio. Por eso es mejor usar programas que puedan guardar lo que escribimos como texto plano (por ejemplo, HTML o Markdown).</p>
<p><emph>Opcional:</emph> Consulta la secci&#243;n <link target="#section5-2">"Creaci&#243;n en Markdown"</link> m&#225;s abajo, para m&#225;s informaci&#243;n sobre un programa de edici&#243;n espec&#237;fico en Markdown, que tambi&#233;n puedes instalar cuando ya estemos en la etapa de crear p&#225;ginas web y/o publicaciones (posts) de blog.</p>
</div><div n="3"><head>L&#237;nea de comandos <a id="section1-4"/></head>
<p>La l&#237;nea de comandos puede ser definida como una forma de interactuar con la computadora mediante texto: permite escribir comandos para llevar a cabo acciones sencillas (como "mostrar una lista de los archivos en este directorio" o "cambiar qui&#233;n tiene permiso para acceder a este archivo"), as&#237; como para realizar acciones m&#225;s complejas. No obstante, existen buenas alternativas visuales para efectuar acciones en la computadora (por ejemplo, la aplicaci&#243;n GitHub Desktop <link target="#section1-2">que instalamos arriba</link>) y otras veces tendremos que usar la l&#237;nea de comandos para indicarle qu&#233; hacer a la computadora. Si deseas m&#225;s informaci&#243;n de la que se proporciona en este tutorial, <link target="/es/">The Programming Historian</link> tiene una <link target="/es/lecciones/introduccion-a-bash">lecci&#243;n que explora en profundidad la l&#237;nea de comandos</link>, pero aqu&#237; cubriremos todo lo necesario para completar la creaci&#243;n de nuestro sitio web y solo usaremos la l&#237;nea de comandos cuando sea necesario o m&#225;s sencillo que una interfaz visual.</p>
<p>Mientras que la l&#237;nea de comandos usa comandos de texto, la mayor&#237;a de los usuarios utilizan una "interfaz gr&#225;fica de usuario" (tambi&#233;n conocida como GUI, "graphical user interface"). Cualquier programa en el que las interacciones usuario-computadora se dan a trav&#233;s de una interfaz visual que contiene &#237;conos, im&#225;genes, funciones de clic con el mouse, etc. es una GUI. &#191;Por qu&#233; usar&#237;amos la l&#237;nea de comandos si existen las GUI? Muchas veces es m&#225;s simple y r&#225;pido escribir (o cortar y pegar de un tutorial) una serie de comandos en la l&#237;nea de comandos que hacer lo mismo usando una GUI. Otras veces, hay cosas para las cuales nadie ha creado una GUI y solo es posible hacerlas a trav&#233;s de la l&#237;nea de comandos.</p>
<p>El programa de l&#237;nea de comandos est&#225;ndar se llama "Terminal" en Mac (ubicado en <emph>Aplicaciones &gt; Utilidades</emph>) y "Cmd" (o "S&#237;mbolo del sistema"), "Windows Power Shell" o "Git Bash" en Windows (estas son tres opciones diferentes que difieren cada una en el tipo de comandos que aceptan).</p>
<p>A continuaci&#243;n, se muestra c&#243;mo se ve una ventana de l&#237;nea de comandos en Windows (usando Cmd). Ver&#225;s algo como <emph>C:\Users\Gabriel Calarco&gt;</emph>. Ese texto se llama "prompt" ("orden" o "solicitud", porque solicita que el usuario ingrese comandos obligatoriamente para poder continuar). En esta captura de pantalla, <emph>C:</emph> es el nombre de la unidad de disco y <emph>Gabriel Calarco</emph> es la cuenta de usuario actualmente conectada (el prompt ser&#225; diferente en tu computadora; mostrar&#225; tu nombre de usuario).</p>
<figure><desc>Prompt de la l&#237;nea de comandos en Windows.</desc><graphic url="sitios-estaticos-con-jekyll-y-github-pages_3.png"/></figure>
<p>La l&#237;nea de comandos en sistemas Unix (Mac y Linux) es ligeramente diferente:</p>
<figure><desc>Captura de pantalla de la l&#237;nea de comandos.</desc><graphic url="building-static-sites-with-jekyll-github-pages-0.png"/></figure>
<p>Siempre que en este tutorial pidamos abrir una ventana de l&#237;nea de comandos e ingresar comandos, ten en cuenta lo siguiente:</p>
<ol>
<li>
<p><hi rend="bold">Los comandos que debes escribir (o copiar/pegar) en la l&#237;nea de comandos tienen el siguiente formato:</hi> <code type="inline">ejemplo de formato de c&#243;digo</code>. Cada fragmento de c&#243;digo formateado debe copiarse y pegarse en la l&#237;nea de comandos, seguido de "Enter".</p>
</li>
<li>
<p><hi rend="bold">Debes dejar que los procesos de instalaci&#243;n se ejecuten <emph>completamente</emph> antes de ingresar nuevos comandos.</hi> A veces, escribir un comando y presionar "Enter" produce un resultado instant&#225;neo; otras veces, una gran cantidad de texto comenzar&#225; a llenar la ventana de la l&#237;nea de comandos o parecer&#225; que la l&#237;nea de comandos no est&#225; haciendo nada pero algo est&#225; sucediendo detr&#225;s de escena, como descargar un archivo. Por eso es importante que <hi rend="bold">al escribir un comando y presionar Enter, esperemos que ese comando termine por completo <emph>antes de escribir otra cosa</emph></hi>, de lo contrario, podr&#237;amos detener un proceso por la mitad y generar problemas.
{0}. &#191;C&#243;mo saber cu&#225;ndo se ha completado un comando? Cuando la l&#237;nea de comandos emite nuevamente el [prompt] (por ejemplo, <emph>Macbook-Air:~DrJekyll$</emph> en la computadora de la autora de este tutorial). La captura de pantalla a continuaci&#243;n muestra un ejemplo de ingreso de un comando, seguido de un texto que muestra lo que estaba sucediendo mientras se procesaba ese comando (y a veces ped&#237;a hacer algo, como ingresar la contrase&#241;a) y finalmente la reaparici&#243;n del prompt para hacer saber que ya se puede escribir algo m&#225;s.</p>
</li>
</ol>
<figure><desc>Captura de pantalla de la l&#237;nea de comandos.</desc><graphic url="building-static-sites-with-jekyll-github-pages-4.png"/></figure>
<pre><code xml:id="code_sitios-estaticos-con-jekyll-y-github-pages_0" type="block" corresp="code_sitios-estaticos-con-jekyll-y-github-pages_0.txt"></code></pre>
<ol start="3">
<li>Algo muy &#250;til cuando escribimos los mismos comandos muchas veces o queremos recordar algo que escribimos antes: podemos presionar <hi rend="bold">&#8593;</hi> (flecha hacia arriba) en la l&#237;nea de comandos para desplazarnos por los comandos recientemente escritos y presionar "Enter" despu&#233;s de que aparezca el que deseamos usar.</li>
</ol>
</div></div><div n="2"><head>Instalaci&#243;n de dependencias <a id="section2"/></head>
<p>A continuaci&#243;n, vamos a instalar algunas dependencias de software (es decir, programas de los que depende Jekyll para poder trabajar) usando la l&#237;nea de comandos ya que no hay una interfaz visual para hacerlo. Esta secci&#243;n se divide en instrucciones para Mac e instrucciones para Windows, as&#237; que puedes ir a la secci&#243;n de <link target="#sectionMac">instalaci&#243;n de dependencias en Mac</link> si est&#225;s usando Mac, o a la secci&#243;n de <link target="#sectionwindows">instalaci&#243;n de dependencias en Windows</link> si est&#225;s usando Windows.</p>
<div n="3"><head>En Mac <a id="sectionMac"/></head>
<p>Si est&#225;s utilizando una computadora Mac, sigue las instrucciones que se encuentran a continuaci&#243;n.</p>
<p>Abre una ventana de l&#237;nea de comandos (<emph>Aplicaciones &gt; Utilidades &gt; Terminal</emph>) e ingresa el c&#243;digo que se muestra en los pasos a continuaci&#243;n (<code type="inline">el c&#243;digo es el texto que aparece formateado as&#237;</code>) siguiendo <link target="#section1-4">las sugerencias de uso de la l&#237;nea de comandos detalladas m&#225;s arriba</link>.</p>
</div><div n="3"><head>Herramientas de l&#237;nea de comandos <a id="section2-1"/></head>
<p>Primero vamos a instalar las "herramientas de l&#237;nea de comandos" de Mac para poder usar <link target="http://brew.sh/">Homebrew</link> (que instalaremos a continuaci&#243;n). Homebrew permite descargar e instalar desde la l&#237;nea de comandos software de c&#243;digo abierto (es un "administrador de paquetes"), lo que facilitar&#225; la instalaci&#243;n de Ruby (el lenguaje en el que se basa Jekyll).</p>
<p>En el Terminal, pega el siguiente c&#243;digo y presiona Enter:</p>
<p><code type="inline">xcode-select --install</code></p>
<p>Va a aparecer un mensaje como el siguiente, seguido de una ventana emergente:</p>
<figure><desc>Captura de pantalla de la ventana emergente.</desc><graphic url="building-static-sites-with-jekyll-github-pages-1.png"/></figure>
<figure><desc>Captura de pantalla de la ventana emergente para instalar.</desc><graphic url="building-static-sites-with-jekyll-github-pages-1.png"/></figure>
<p>En la ventana emergente, haz clic en "Install".</p>
<p>Una vez que termine la instalaci&#243;n, va a aparecer un mensaje de instalaci&#243;n exitosa:</p>
<figure><desc>Captura de pantalla de la ventana emergente luego de la instalaci&#243;n exitosa.</desc><graphic url="building-static-sites-with-jekyll-github-pages-2.5.png"/></figure>
</div><div n="3"><head>Homebrew <a id="section2-2"/></head>
<p>Al terminar la instalaci&#243;n de las herramientas de la l&#237;nea de comandos, regresa a la ventana de la l&#237;nea de comandos y copia el siguiente texto para instalar <link target="http://brew.sh/">Homebrew</link>:</p>
<pre><code xml:id="code_sitios-estaticos-con-jekyll-y-github-pages_1" type="block" corresp="code_sitios-estaticos-con-jekyll-y-github-pages_1.txt"></code></pre>
<p>Presiona "Enter" cuando sea necesario, e ingresa la contrase&#241;a de tu computadora cuando se solicite. A modo de referencia, mostramos una captura de pantalla del comando ingresado en la l&#237;nea de comandos de la autora del tutorial, seguido de todo el texto que apareci&#243; (incluido el mensaje para presionar "Enter" e ingresar la contrase&#241;a).</p>
<figure><desc>Captura de pantalla del proceso de instalaci&#243;n de Homebrew.</desc><graphic url="building-static-sites-with-jekyll-github-pages-4.png"/></figure>
</div><div n="3"><head>Ruby y Ruby Gems <a id="section2-3"/></head>
<p>Jekyll est&#225; construido a partir del <link target="https://es.wikipedia.org/wiki/Ruby">lenguaje de programaci&#243;n Ruby</link>. <link target="https://rubygems.org/">Ruby Gems</link> es un administrador de paquetes que facilita la configuraci&#243;n de programas Ruby tales como Jekyll (Ruby Gems agrega algunas cosas para simplificar las instalaciones de Ruby).</p>
<p>En la l&#237;nea de comandos, ingresa:</p>
<p><code type="inline">brew install ruby</code></p>
<p>Espera hasta que el prompt vuelva a aparecer para ingresar el siguiente comando:</p>
<p><code type="inline">gem install rubygems-update</code></p>
<p>En caso de recibir un error de permisos luego de instalar Ruby, incluye la direcci&#243;n de Gems en tu sistema. Prueba lo siguiente:</p>
<p><code type="inline">echo '# Install Ruby Gems to ~/gems' &gt;&gt; ~/.bashrc</code>
<code type="inline">echo 'export GEM_HOME=$HOME/gems' &gt;&gt; ~/.bashrc</code>
<code type="inline">echo 'export PATH=$HOME/gems/bin:$PATH' &gt;&gt; ~/.bashrc</code> seguido de <code type="inline">source ~/.bashrc</code>.</p>
<div class="alert alert-warning">
Algunas personas que utilizan macOS Catalina y macOS Big Sur han reportado dificultades para instalar Ruby y Ruby Gems. Si bien esta lecci&#243;n fue publicada antes de la aparici&#243;n de esos sistemas operativos, el c&#243;digo compartido aqu&#237; ha sido adaptado para ofrecer una posible soluci&#243;n.
</div> 
</div><div n="3"><head>NodeJS <a id="section2-4"/></head>
<p><link target="https://nodejs.org/en/">NodeJS</link> (o Node.js) es una plataforma de desarrollo (espec&#237;ficamente, es un "entorno de ejecuci&#243;n") que, por ejemplo, ayuda a que Javascript se ejecute m&#225;s r&#225;pido.</p>
<p>En la l&#237;nea de comandos, ingresa:</p>
<p><code type="inline">brew install node</code></p>
</div><div n="3"><head>Jekyll <a id="section2-5"/></head>
<p><link target="https://jekyllrb.com/">Jekyll</link> es el programa que crea nuestro sitio web, simplificando ciertas tareas comunes, como usar la misma plantilla (el mismo logotipo, men&#250;, informaci&#243;n del autor, etc.) en todas las p&#225;ginas de nuestro blog. Puedes ver m&#225;s informaci&#243;n sobre Jekyll en <link target="#section0-1">Sitios din&#225;micos, sitios est&#225;ticos &amp; Jekyll</link> y en <link target="#section0-3">&#191;Por qu&#233; usar sitios est&#225;ticos?</link>, m&#225;s arriba.</p>
<p>En la l&#237;nea de comandos, ingresa:</p>
<p><code type="inline">gem install jekyll</code></p>
<p><hi rend="bold">&#161;Felicitaciones, hemos terminado de instalar todo lo necesario para crear nuestro sitio web! Omite los siguientes pasos (que son solo para usuarios de Windows).</hi></p>
</div><div n="3"><head>En Windows <a id="sectionWindows"/></head>
<p>En esta secci&#243;n, las instrucciones para usuarios de Windows difieren de las de los usuarios de Mac. Debes hacer estos pasos &#250;nicamente si est&#225;s utilizando Windows.</p>
<ol>
<li>
<p>Antes que nada, necesitamos una herramienta de l&#237;nea de comandos que reconozca los mismos comandos que las computadoras Mac y Linux (es decir, los sistemas operativos Unix). Visita <link target="https://git-scm.com/downloads">https://git-scm.com/downloads</link> y haz clic en el enlace Windows. Una vez que hayas terminado la descarga, haz doble clic en el archivo descargado y sigue los pasos para instalar Git Bash (deja todas las opciones como est&#225;n).</p>
</li>
<li>
<p>Abre Cmd (abre el Men&#250; de inicio y busca "Cmd" y aparecer&#225; una aplicaci&#243;n que puedes abrir). Otra forma sencilla de abrir el Cmd en Windows, es hacer clic derecho sobre el bot&#243;n de inicio que se encuentra en la barra de tareas y seleccionar la opci&#243;n "Ejecutar", lo que abrir&#225; una ventana emergente en la que debes escribir "cmd" y presionar "Aceptar".</p>
</li>
</ol>
<figure><desc>Ejecutar Cmd.</desc><graphic url="sitios-estaticos-con-jekyll-y-github-pages_4.png"/></figure>
<ol start="3">
<li>En primer lugar debes instalar Ruby. Ve a <link target="https://rubyinstaller.org/downloads/">https://rubyinstaller.org/downloads/</link> y descarga la versi&#243;n m&#225;s completa, que es <code type="inline">Ruby+Devkit 2.6.6-1 (x64)</code> (la tercera de las opciones de la columna WITH DEVKIT). Una vez instalado, la consola se abrir&#225; autom&#225;ticamente y te pedir&#225; que indiques qu&#233; componentes deseas instalar, presiona &#8220;Enter&#8221; para instalar todo. Este proceso se repetir&#225; dos veces. La segunda vez la consola se cerrar&#225; autom&#225;ticamente.</li>
</ol>
<p>Para comprobar que la instalaci&#243;n de Ruby se realiz&#243; correctamente, vuelve a abrir la consola y escribe:</p>
<p><code type="inline">ruby -v</code></p>
<ol start="4">
<li>A continauci&#243;n instalaremos Jekyll a trav&#233;s de la consola, para eso debes escribir los siguientes comandos, uno por uno, haciendo &#8220;Enter&#8221; y esperando hasta que se descarguen todas las "gemas" de Jekyll. El primer comando a ejecutar es:</li>
</ol>
<p><code type="inline">gem install jekyll</code></p>
<p>Este proceso puede demorar un buen rato. La &#250;ltima frase que debe aparecer en la consola es &#8220;26 gems installed&#8221;. Una vez que la instalaci&#243;n se haya completado volver&#225; a aparecer el prompt.</p>
<ol start="5">
<li>Finalmente, para comprobar que Jekyll se haya instalado correctamente, escribe el siguiente comando y presiona &#8220;Enter&#8221;:</li>
</ol>
<p><code type="inline">jekyll -v</code></p>
<p>Si recibes la respuesta &#8220;jekyll x.x.x&#8221; (la &#250;ltima versi&#243;n de Jekyll actualmente es la 4.1.1, pero este n&#250;mero puede variar), es que Jekyll se instal&#243; correctamente.</p>
<p><hi rend="bold">&#161;Felicitaciones, hemos terminado de instalar todo lo necesario para crear nuestro sitio web! De aqu&#237; en adelante, las instrucciones son iguales para Windows y Mac.</hi></p>
</div></div><div n="2"><head>Configuraci&#243;n de Jekyll <a id="section3"/></head>
<p>Ya hemos instalado todo lo necesario para crear un sitio web. En esta secci&#243;n utilizaremos Jekyll para generar una nueva carpeta con los archivos que conforman el sitio web. Tambi&#233;n ubicaremos esta carpeta en un lugar accesible para la aplicaci&#243;n GitHub Desktop para que est&#233;n en el lugar correcto cuando deseemos publicarlos como un sitio web p&#250;blico m&#225;s adelante en la lecci&#243;n.</p>
<ol>
<li>Es necesario conocer la ruta de la carpeta GitHub creada por la instalaci&#243;n de GitHub Desktop (la ruta es el texto que indica la ubicaci&#243;n de cierta carpeta o archivo en el &#225;rbol de carpetas de una computadora, por ejemplo  /Desktop/MyRecipes/Spaghetti.doc). Si no conoces la ruta de la carpeta GitHub, haz clic en el campo de b&#250;squeda del Men&#250; de inicio (en Windows).</li>
</ol>
<figure><desc>En Windows puedes encontrar la carpeta con los archivos de tu repositorio de GitHub seleccionando la pesta&#241;a Repository del men&#250; superior de GitHub Desktop y en el recuadro que se despliega al seleccionar \"show in explorer\".</desc><graphic url="sitios-estaticos-con-jekyll-y-github-pages_5.png"/></figure>
<p>En Mac, presiona "&#8984; + espacio" y aparecer&#225; un cuadro de b&#250;squeda en el medio de la pantalla; escribe "GitHub", luego haz doble clic en la opci&#243;n "GitHub" que aparece debajo de "Folders" (Carpetas) para abrir la carpeta GitHub en Finder.</p>
<p>Ten en cuenta que en algunas computadoras esta carpeta est&#225; etiquetada como "GitHub para Mac" y puede que no aparezca en una b&#250;squeda. Si los pasos anteriores no ubicaron una carpeta de GitHub, ve a Biblioteca &gt; Soporte de aplicaciones en Finder y verifica si la carpeta "GitHub para Mac" est&#225; all&#237;.</p>
   <figure><desc>Captura de pantalla de la carpeta GitHub.</desc><graphic url="building-static-sites-with-jekyll-github-pages-6.png"/></figure>
<p>Haz clic derecho en la carpeta "GitHub" y elige "Copiar GitHub". La ruta de la carpeta GitHub ha sido copiada.</p>
<ol start="2">
<li>En la l&#237;nea de comandos, escribe <code type="inline">cd</code>, seguido de espacio, seguido de la ruta a la carpeta GitHub (&#8984;-v para pegar la ruta copiada en el paso previo). En la computadora de la autora (logeada como <emph>DrJekyll</emph>), esto se ve de la siguiente manera:</li>
</ol>
<figure><desc>Captura de pantalla de la linea de comandos.</desc><graphic url="building-static-sites-with-jekyll-github-pages-7.png"/></figure>
<p>El comando <emph>cd</emph> (<hi rend="bold">c</hi>hange <hi rend="bold">d</hi>irectory) le indica a la computadora que ubique la ruta indicada, en este caso, la ruta a la carpeta GitHub creada por la instalaci&#243;n de GitHub Desktop.</p>
<ol start="3">
<li>
<p>En la l&#237;nea de comandos, escribe el siguiente comando seguido de "Enter":</p>
<p><code type="inline">gem install jekyll bundler</code></p>
<p>Es necesario esperar a que vuelva a aparecer el prompt para continuar con el siguiente paso.</p>
</li>
<li>
<p>La URL p&#250;blica de tu sitio tendr&#225; la siguiente forma: <link target="http://amandavisconti.github.io/JekyllDemo/">http://amandavisconti.github.io/JekyllDemo/</link> (<emph>amandavisconti</emph> es el usuario de GitHub de la autora y <emph>JekyllDemo</emph> el nombre del sitio que ingresamos en este paso (<emph>es posible pagar y usar tu propia <link target="#section7-2">URL personalizada</link>, pero no lo cubriremos en este tutorial</emph>). <hi rend="bold">Los sitios en may&#250;sculas y min&#250;sculas <emph>no</emph> dirigen al mismo sitio web</hi>, as&#237; que a diferencia del ejemplo <hi rend="bold">JekyllDemo</hi> es recomendable elegir un nombre todo en min&#250;sculas para asegurarse de que la gente lo escriba correctamente.</p>
<p>En la l&#237;nea de comandos, escribe lo siguiente (reemplaza <emph>JekyllDemo</emph> con el nombre que desees para tu sitio):</p>
<p><code type="inline">jekyll new JekyllDemo</code></p>
<p>Este comando le indica a <emph>jekyll</emph> que cree un <emph>nuevo</emph> (new) sitio instalando los archivos necesarios en la carpeta llamada <emph>JekyllDemo</emph>. <hi rend="bold">De ahora en adelante, llamaremos "carpeta del sitio web" a la carpeta creada en este paso (por ej., <emph>JekyllDemo</emph>).</hi></p>
</li>
<li>
<p>En la l&#237;nea de comandos, escribe lo siguiente para ir a la carpeta del sitio web (en el resto del tutorial, reemplaza <emph>JekyllDemo</emph> por el nombre elegido en el paso previo):</p>
<p><code type="inline">cd JekyllDemo</code></p>
<p>Si miras en la carpeta <emph>GitHub &gt; JekyllDemo</emph> en el explorador de archivos, ver&#225;s una serie de archivos nuevos -los archivos que ejecutar&#225;n tu sitio web- que han sido instalados (<link target="#section4-2">m&#225;s abajo</link> explicaremos qu&#233; hace cada uno):</p>
<figure><desc>Captura de pantalla de la carpeta creada.</desc><graphic url="building-static-sites-with-jekyll-github-pages-9.png"/></figure>
</li>
</ol>
</div><div n="2"><head>Ejecutar un sitio web localmente <a id="section3a"/></head>
<p>Esta secci&#243;n describe c&#243;mo ejecutar un sitio web <hi rend="bold">localmente</hi>. Esto significa que podr&#225;s ver c&#243;mo se ve tu sitio web en un navegador, pero &#250;nicamente en tu computadora (a eso se refiere lo de "localmente"). Trabajar en una versi&#243;n local de un sitio web quiere decir que el sitio es privado, nadie puede verlo todav&#237;a (el sitio no es p&#250;blico, nadie puede escribir la URL y verlo en su computadora).</p>
<p>Esto te permite experimentar todo lo que desees y publicar el sitio al mundo cuando est&#233; listo. Adem&#225;s, una vez que el sitio est&#233; publicado, puedes seguir experimentando localmente con nuevos contenidos, dise&#241;os, etc. y agregar estos cambios una vez que est&#233;s conforme con c&#243;mo se ven en el sitio local.</p>
<ol>
<li>
<p>En la l&#237;nea de comandos, escribe  </p>
<p><code type="inline">bundle exec jekyll serve --watch</code></p>
<p>Este es el comando que debes ejecutar cada vez que quieras visualizar tu sitio localmente.</p>
<p><emph>jekyll serve</emph> le indica a la computadora que ejecute Jekyll localmente.</p>
<p><emph>--watch</emph> precedido de <emph>bundle exec</emph> le indica a Jekyll que busque cambios en los archivos del sitio web (por ejemplo, nuevos posts o p&#225;ginas) y que los muestre al actualizar el navegador. <hi rend="bold">Una excepci&#243;n</hi> es el archivo <code type="inline">_config.yml</code>, que ser&#225; explicado en detalle en la pr&#243;xima secci&#243;n (los cambios realizados en este archivo solo se muestran luego de detener y reiniciar Jekyll).</p>
</li>
<li>
<p>Luego de escribir el comando previo, aparecer&#225; en el terminal un proceso que no se detiene. &#191;Recuerdas que te contamos que si escrib&#237;as algo en la l&#237;nea de comandos mientras este todav&#237;a est&#225; ejecutando el comando previo se pueden ocasionar problemas? Ahora Jekyll est&#225; corriendo en esta l&#237;nea de comandos, de manera que si deseas ejecutar comandos mientras visualizas tu sitio local, deber&#225;s abrir una nueva ventana de l&#237;nea de comandos (ver la secci&#243;n acerca del uso de la <link target="#section1-4">l&#237;nea de comandos</link>)</p>
</li>
</ol>
<figure><desc>Captura de pantalla de el terminal ejecutando localmente el sitio.</desc><graphic url="building-static-sites-with-jekyll-github-pages-10.png"/></figure>
<ol start="3">
<li>
<p>Para detener la ejecuci&#243;n local de nuestro sitio, debemos presionar <hi rend="bold">control-c</hi> (esto libera la l&#237;nea de comandos para usarla nuevamente). Basta con ingresar <code type="inline">bundle exec jekyll serve --watch</code> nuevamente para volver a ejecutar el sitio localmente.</p>
</li>
<li>
<p>Para visualizar el sitio que se est&#225; ejecutando localmente, visita <hi rend="bold">localhost:4000</hi> en tu navegador. Ver&#225;s un sitio web Jekyll b&#225;sico con texto predefinido:</p>
</li>
</ol>
<figure><desc>Vista del sitio web en el navegador</desc><graphic url="building-static-sites-with-jekyll-github-pages-11.png"/></figure>
<div n="3"><head>Mini ayudamemoria <a id="section3a-1"/></head>
<ul>
<li>
<p>Escribe <code type="inline">bundle exec jekyll serve --watch</code> en la l&#237;nea de comandos para ejecutar el sitio web localmente. Visita <hi rend="bold">localhost:4000</hi> en un navegador para visualizar el sitio localmente. En la pr&#243;xima secci&#243;n haremos modificaciones que nos obligar&#225;n a visitar <hi rend="bold">localhost:4000/JekyllDemo/</hi> para poder visualizar el sitio (ingresando el nombre de la carpeta de tu sitio web en lugar de <emph>JekyllDemo</emph> y asegur&#225;ndote de incluir la barra final <hi rend="bold">/</hi>).</p>
</li>
<li>
<p>Presiona <hi rend="bold">control-c</hi> en la l&#237;nea de comandos para detener la ejecuci&#243;n local del sitio web.</p>
</li>
<li>
<p>Cuando hagas cambios en los archivos del sitio web mientras este se est&#225; ejecutando, aseg&#250;rate de guardar los archivos y refrescar la p&#225;gina (F5 o &#8984;+R) en el navegador para poder ver las modificaciones. Sin embargo, si realizas cambios en <code type="inline">_config.yml</code>, deber&#225;s detener la ejecuci&#243;n del sitio y reiniciarla para poder verlos aplicados.</p>
</li>
<li>
<p>&#191;Escribes, copias o pegas mucho <code type="inline">bundle exec jekyll serve --watch</code>? Puedes presionar la tecla <hi rend="bold">&#8593;</hi> (flecha hacia arriba) en la l&#237;nea de comandos para hacer desfilar los comandos ingresados recientemente. Presiona "Enter" cuando aparezca el comando que deseas ejecutar.</p>
</li>
</ul>
</div></div><div n="2"><head>Modificar la configuraci&#243;n del sitio <a id="section4"/></head>
<p>Ya tenemos un sitio web b&#225;sico privado, accesible &#250;nicamente en nuestra computadora. En esta secci&#243;n, vamos a personalizar el sitio cambiando el t&#237;tulo y el autor. Tambi&#233;n vamos a dar un panorama de lo que hacen los diferentes archivos del sitio web.</p>
<div n="3"><head>Configuraci&#243;n b&#225;sica del sitio con _config.yml <a id="section4-1"/></head>
<ol>
<li>Abre la carpeta de tu sitio web en el explorador de archivos. El sitio de la autora del tutorial se encuentra en <code type="inline">/Users/DrJekyll/GitHub/JekyllDemo</code> (<emph>DrJekyll</emph> es el nombre de usuario de la autora y <emph>JekyllDemo</emph> es el nombre de la carpeta del sitio web de este tutorial). Visita la <link target="#section3">secci&#243;n "Configuraci&#243;n de Jekyll"</link> si necesitas ayuda para encontrar la carpeta de tu sitio web.</li>
</ol>
<figure><desc>Captura de pantalla de la carpeta que contiene los archivos del sitio web.</desc><graphic url="building-static-sites-with-jekyll-github-pages-18.png"/></figure>
<ol start="2">
<li>Comenzaremos por personalizar el archivo de configuraci&#243;n principal <code type="inline">_config.yml</code>. Deber&#225;s abrir este archivo y los dem&#225;s archivos del sitio web usando un editor de texto (por ej., Notepad++ en Windows o BBedit en Mac).</li>
</ol>
<figure><desc>En Windows, al hacer clic derecho sobre el archivo .yml puede aparecer directamente la opci&#243;n de editar el documento con Notepad++; en caso contrario debe elegirse la opci&#243;n abrir con y seleccionar el editor de texto de una lista de programas.</desc><graphic url="sitios-estaticos-con-jekyll-y-github-pages_6.png"/></figure>
<figure><desc>El archivo _config.yml</desc><graphic url="building-static-sites-with-jekyll-github-pages-15.png"/></figure>
<p>El archivo <code type="inline">_config.yml</code> es un archivo "destinado a configuraciones que afectan a todo tu blog, valores que se espera que configures una sola vez y rara vez necesites volver editar m&#225;s tarde" (como dice en el archivo). <code type="inline">_config.yml</code> es donde se puede definir el nombre del sitio web y compartir informaci&#243;n como la direcci&#243;n de email que queremos asociar al sitio y otras configuraciones b&#225;sicas que desees que est&#233;n disponibles en todo el sitio web (cuentas de redes sociales, por ejemplo).</p>
<p>La extensi&#243;n <code type="inline">.yml</code> refiere a c&#243;mo fue escrito el archivo usando <link target="https://es.wikipedia.org/wiki/YAML">YAML</link> (acr&#243;nimo de <emph>YAML Ain't Markup Language</emph>, "YAML no es un lenguaje de marcado"). YAML es un modo de escribir datos que es a la vez f&#225;cil de escribir y de leer para los humanos y f&#225;cil de interpretar para las m&#225;quinas. No es necesario profundizar en YAML aqu&#237;, pero es importante dejar el formato del archivo <code type="inline">_config.yml</code> en su estado original aunque modifiquemos el contenido (por ej., el t&#237;tulo del sitio debe quedar en una l&#237;nea diferente del email).</p>
<ol start="3">
<li>
<p>Puedes cambiar el texto en este archivo, guardarlo y luego ver tu sitio web local en un navegador para ver los cambios. <hi rend="bold">Es necesario tener en cuenta que los cambios en <code type="inline">_config.yml</code></hi>, a diferencia del resto de los archivos del sitio web, no se mostrar&#225;n si se realizan mientras el sitio web se est&#225; ejecutando. Para ver los cambios implementados en este archivo en particular, debes realizarlos mientras el sitio web no se est&#225; ejecutando <emph>o</emph> despu&#233;s de realizar cambios en <code type="inline">_config.yml</code>, detener y luego ejecutar el sitio de vuelta. (Los cambios en el archivo <code type="inline">_config.yml</code> quedan fuera de la capacidad de refrescar el sitio porque este archivo se puede usar para declarar la estructura de los enlaces del sitio y alterarlos mientras el sitio se est&#225; ejecutando podr&#237;a provocar da&#241;os.)</p>
<p>Si se produce alg&#250;n error, hacer peque&#241;os cambios en los archivos del sitio (comenzar por uno solo), guardar y refrescar el navegador para visualizar los efectos en el sitio permite identificar la causa con m&#225;s claridad.</p>
<ul>
<li>
<p>Las l&#237;neas que comienzan con el signo <hi rend="bold">#</hi> son <emph>comentarios</emph>: los comentarios no son interpretados como c&#243;digo sino que sirven para dejar notas sobre c&#243;mo hacer algo o sobre modificaciones realizadas en el c&#243;digo.</p>
</li>
<li>
<p>Es posible borrar los comentarios sin consecuencias para el sitio web (por ejemplo, puedes borrar las l&#237;neas comentadas 1-6 en <code type="inline">_config.yml</code> si no deseas ver esa informaci&#243;n acerca del uso de Jekyll).</p>
</li>
</ul>
</li>
<li>
<p>Modifica el archivo <code type="inline">_config.yml</code> siguiendo estas instrucciones:</p>
<ul>
<li><hi rend="bold">title</hi>: el t&#237;tulo de tu sitio web como deseas que aparezca en el encabezado del sitio web.</li>
<li><hi rend="bold">email</hi>: tu direcci&#243;n de email.</li>
<li><hi rend="bold">description</hi>: la descripci&#243;n del sitio web que ser&#225; usada por los motores de b&#250;squeda y que ser&#225; utilizada por RSS.</li>
<li><hi rend="bold">baseurl</hi>: completa entre las comillas con una barra oblicua <hi rend="bold">/</hi> seguida del nombre de la carpeta de tu sitio web (por ej., "/JekyllDemo") para que el sitio tome la URL correcta.</li>
<li><hi rend="bold">url</hi>: reemplaza "http://yourdomain.com" por "localhost:4000" para que el navegador tome la versi&#243;n local de tu sitio en la URL correcta.</li>
<li><hi rend="bold">twitter_username</hi>: tu nombre de usuario de Twitter (no incluir @).</li>
<li><hi rend="bold">github_username</hi>: tu nombre de usuario de GitHub.</li>
</ul>
<p>Los cambios realizados en las l&#237;neas <emph>baseurl</emph> y <emph>url</emph> permitir&#225;n que tu sitio se ejecute desde los mismos archivos, tanto localmente en tu computadora como en vivo en la web, pero <hi rend="bold">al hacer esto ha cambiado la URL en donde puedes visualizar tu sitio localmente</hi>. De ahora en adelante, en lugar de ser localhost:4000, es <code type="inline">localhost:4000/JekyllDemo/</code> (debes cambiar <emph>JekyllDemo</emph> por el nombre de la carpeta de tu sitio web y no olvides incluir la &#250;ltima barra oblicua <hi rend="bold">/</hi>)</p>
<p>En la captura de pantalla que est&#225; debajo, la autora ha borrado las l&#237;neas comentadas 1-6 y el comentario que explicaba lo que hace "description" (no es obligatorio, es solo para demostrar que es posible borrar los comentarios). Tambi&#233;n modific&#243; el resto del archivo seg&#250;n los cambios antes mencionados:</p>
</li>
</ol>
<figure><desc>El archivo \_config.yml modificado</desc><graphic url="building-static-sites-with-jekyll-github-pages-16.png"/></figure>
<ol start="5">
<li>Guarda el archivo y ejecuta el sitio web (o detenlo y vuelve a ejecutarlo si estaba en ejecuci&#243;n) y luego visita <code type="inline">localhost:4000/JekyllDemo/</code> en tu navegador (cambiando <emph>JekyllDemo</emph> por el nombre de la carpeta de tu sitio web e incluyendo la barra oblicua final) para ver localmente los cambios en tu sitio:</li>
</ol>
<figure><desc>Ejecuci&#243;n local del sitio web</desc><graphic url="building-static-sites-with-jekyll-github-pages-17.png"/></figure>
</div><div n="3"><head>&#191;D&#243;nde est&#225; (y qu&#233; es) cada cosa? <a id="section4-2"/></head>
<p>Para tener una idea de c&#243;mo funciona el sitio y con qu&#233; archivos se puede experimentar para hacer cosas m&#225;s avanzadas, aqu&#237; hay algunas notas sobre lo que hace cada carpeta o archivo de tu sitio web. Recuerda siempre abrir y editar cualquier archivo con un editor de texto (por ejemplo, Notepad++) y no con un procesador de textos (no utilices Microsoft Word ni nada que permita agregar formato como cursiva y negrita). Es muy importante no usar Word o procesadores de texto porque estos programas agregan caracteres invisibles que si se guardan en los archivos de nuestro sitio web pueden da&#241;arlo. Si ya deseas comenzar a agregar contenido a tu sitio y hacerlo p&#250;blico, puedes <link target="#section5">saltar a la siguiente secci&#243;n</link>.</p>
<figure><desc>Carpeta con los archivos de nuestro sitio</desc><graphic url="building-static-sites-with-jekyll-github-pages-18.png"/></figure>
<ul>
<li><hi rend="bold">_config.yml</hi> fue explicado <link target="#section4-1">m&#225;s arriba</link>; contiene informaci&#243;n b&#225;sica de la configuraci&#243;n del sitio, como el t&#237;tulo y otras posibilidades que no abordaremos aqu&#237; (por ej., c&#243;mo estructurar los links)</li>
<li>la carpeta <hi rend="bold">_includes</hi> contiene archivos que son incluidos en todas o varias p&#225;ginas (por ej., el c&#243;digo para que el encabezado del sitio tenga el t&#237;tulo y el men&#250; principal en todas las p&#225;ginas del sitio)</li>
<li>la carpeta <hi rend="bold">_layouts</hi> contiene c&#243;digo que controla c&#243;mo se ven las p&#225;ginas de nuestro sitio web (default.html), as&#237; como tambi&#233;n modificaciones de ese c&#243;digo para darle un estilo m&#225;s espec&#237;fico a las entradas (post.html) y las p&#225;ginas (page.html)</li>
<li>la carpeta <hi rend="bold">_posts</hi> contiene los archivos que representan cada una de las entradas de nuestro sitio web. Si creamos un nuevo archivo en esta carpeta aparecer&#225; una nueva entrada de blog en el sitio web en orden cronol&#243;gico inverso (de la m&#225;s reciente a la m&#225;s vieja). Detallaremos c&#243;mo crear entradas de blog en la <link target="#section5-2">pr&#243;xima secci&#243;n</link></li>
<li>la carpeta <hi rend="bold">_sass</hi> contiene archivos SCSS que controlan el dise&#241;o visual del sitio web</li>
<li>la carpeta <hi rend="bold">_site</hi> almacena las p&#225;ginas HTML que aparecen en Internet (por ej., nuestras entradas de blog ser&#225;n escritas como archivos Markdown pero Jekyll las convertir&#225; a HTML para mostrarlas en Internet)</li>
<li><hi rend="bold">about.md</hi> es un ejemplo de <emph>p&#225;gina de Jekyll</emph>. Ya se encuentra linkeada en el encabezado de nuestro sitio web y podemos cambiar el contenido de esta p&#225;gina abriendo el archivo about.md y modificando el texto. Detallaremos c&#243;mo crear nuevas p&#225;ginas en la <link target="#section5-3">pr&#243;xima secci&#243;n</link></li>
<li>la carpeta <hi rend="bold">css</hi> contiene CSS obtenido a partir del SCSS que controla el dise&#241;o visual del sitio</li>
<li><hi rend="bold">feed.xml</hi> permite que el p&#250;blico siga el feed RSS de las entradas de nuestro blog</li>
<li><hi rend="bold">index.html</hi> controla la estructura de la p&#225;gina de inicio del sitio</li>
</ul>
</div></div><div n="2"><head>Redacci&#243;n de p&#225;ginas y entradas de blog <a id="section5"/></head>
<p>Esta secci&#243;n describir&#225; c&#243;mo crear p&#225;ginas o entradas de blog en tu sitio web.</p>
<p><hi rend="bold">P&#225;ginas</hi> y <hi rend="bold">entradas de blog</hi> son dos tipos de contenido escrito, pero con estilos diferentes. Las p&#225;ginas (como "Acerca de") no est&#225;n organizadas ni se muestran cronol&#243;gicamente; sin embargo, pueden ser incluidas en el men&#250; principal de tu sitio web. Las entradas de blog est&#225;n pensadas para ser utilizadas como contenido organizado por fecha de publicaci&#243;n. Las URLs para p&#225;ginas y entradas tambi&#233;n son diferentes por defecto (pero t&#250; puedes cambiar eso): las URLs de p&#225;gina se ven como <code type="inline">MySite.com/about/</code>, mientras que las URLs de entradas se ven como <code type="inline">MySite.com/2016/02/29/my-post-title.html</code>.</p>
<h4>Escritura en Markdown <a id="section5-1"/></h4>
<p>Markdown es un lenguaje de marcado para dar formato a tus escritos para que puedan ser le&#237;dos en la web: es un conjunto de s&#237;mbolos, f&#225;ciles de recordar, que muestran d&#243;nde debe a&#241;adirse el formato del texto (por ejemplo, un # delante del texto significa que se le da formato como encabezado, mientras que un * significa que tendr&#225; formato como elemento de lista con vi&#241;etas). Para Jekyll en particular, Markdown permite escribir p&#225;ginas web y entradas de blog de una manera c&#243;moda para los autores (por ejemplo, no es necesario buscar/a&#241;adir etiquetas HTML mientras se intenta escribir un ensayo), y que el escrito aparezca con un buen formato en la web (es decir, convertido de texto a HTML).</p>
<p>En esta lecci&#243;n no cubriremos Markdown; si no est&#225;s familiarizado con &#233;l, puedes crear entradas y p&#225;ginas sin formato (es decir, sin negrita / cursiva, encabezados, listas enumeradas o vi&#241;etas). Pero es sencillo aprender a agregarlos: aqu&#237; hay una gu&#237;a de <link target="http://kramdown.gettalong.org/quickref.html">referencias</link> de markdown en ingl&#233;s, tambi&#233;n puedes consultar esta gu&#237;a en <link target="https://docs.github.com/es/get-started/writing-on-github/getting-started-with-writing-and-formatting-on-github/basic-writing-and-formatting-syntax">espa&#241;ol</link>, as&#237; como la lecci&#243;n en <link target="/es/lecciones/introduccion-a-markdown">Programming Historian de Sarah Simpkin sobre el c&#243;mo y porque escribir con Markdown</link>. Consulta estos enlaces si quieres dar formato al texto (cursiva, negrita, encabezados, listas enumeradas o vi&#241;etas), a&#241;adir hiperv&#237;nculos, incrustar im&#225;genes u otros archivos.</p>
<p>Aseg&#250;rate que la gu&#237;a de referencias de Markdown que consultes sea similar a "<link target="http://kramdown.gettalong.org/quickref.html">kramdown</link>", porque es lo que admite GitHub Pages (donde alojaremos nuestro sitio web). (Hay <link target="https://github.com/jgm/CommonMark/wiki/Markdown-Flavors">varios "tipos" de Markdown</link> con sutiles diferencias en lo que respecta a s&#237;mbolos, pero en su mayor&#237;a los que se usan m&#225;s frecuentemente, como los que crean el formato de encabezados, son iguales. Por lo tanto, puedes utilizar una hoja de referencia Markdown que no especifique que se trate de kramdown, pero si recibes errores en tu sitio web usando s&#237;mbolos que no est&#225;n incluidos en kramdown, este podr&#237;a ser el motivo).</p>
<p>Si te interesa un editor de Markdown, puedes utilizar uno como <link target="http://www.typora.io/">Typora</link> (OS X y Windows; de descarga gratuita), que te permitir&#225; utilizar atajos de teclado (por ejemplo, resaltar texto y presionar cmd-B o Ctrl-B para ponerlo en negrita) y/o hacer que se muestre tal y c&#243;mo se ver&#225; en la web (ver los encabezados con el estilo de los encabezados, en lugar del texto normal con un # delante de ellos).</p>
<div n="3"><head>Creaci&#243;n de p&#225;ginas <a id="section5-3"/></head>
<ol>
<li>
<p>Para ver una p&#225;gina existente en tu sitio web (creada por defecto en tu sitio web de Jekyll <link target="#section3">con el resto de los archivos</link>), navega hasta la carpeta de tu sitio web y abre el archivo <code type="inline">about.md</code> en un editor de texto (por ej. TextWrangler) o en un editor de Markdown (p. ej. Typora). All&#237; ver&#225;s el archivo creado como "Acerca de (About)". Puedes hacer clic en el enlace "Acerca de", situado en la parte superior derecha de la p&#225;gina web, y podr&#225;s observar c&#243;mo aparece la p&#225;gina web que crea el archivo en un navegador.</p>
</li>
<li>
<p>El material entre guiones --- se llama "front matter" (<emph>al abrir el archivo en un editor de Markdown este puede aparecer sobre un fondo gris en lugar de entre guiones</emph>). Este apartado le dice a tu sitio si el contenido posterior debe formatearse como p&#225;gina o entrada de blog, el t&#237;tulo de la entrada, la fecha y la hora en que fue publicada, y cualquier categor&#237;a que quieras que aparezca en la entrada o la p&#225;gina.</p>
<p>Puedes realizar cambios en el texto preliminar (front matter) de una p&#225;gina:</p>
<ul>
<li><hi rend="bold">layout:</hi> Mant&#233;n esto tal como est&#225; (deber&#237;a decir "page").</li>
<li><hi rend="bold">title:</hi> C&#225;mbialo al t&#237;tulo deseado (a diferencia de las entradas, no hay comillas alrededor del t&#237;tulo). En la siguiente captura de pantalla, se ha agregado una p&#225;gina con el t&#237;tulo "Resume".</li>
<li><hi rend="bold">permalink:</hi> Cambia el texto entre las dos barras diagonales por la palabra (o frase, &#161;pero necesitar&#225;s usar guiones y no espacios!) que desees que contin&#250;e la URL principal de tu sitio para llegar a la p&#225;gina. Por ejemplo, <hi rend="bold">enlace permanente:/about/</hi> ubica la p&#225;gina en <code type="inline">localhost:4000/yourwebsitefoldername/about/</code>.</li>
</ul>
</li>
<li>
<p>El espacio debajo del segundo gui&#243;n del texto preliminar (o debajo del recuadro gris si usa un editor Markdown) es donde debes escribir el contenido de tu p&#225;gina, usando <link target="#section5-1">el formato Markdown descrito anteriormente</link></p>
</li>
<li>
<p>Para crear una nueva p&#225;gina adem&#225;s de la existente "Acerca de (About)" (que puede ser personalizada o eliminada), crea una copia del archivo <code type="inline">about.md</code> en la misma carpeta (la principal del sitio web) y cambia el nombre al t&#237;tulo que desees, utilizando guiones en lugar de espacios (por ejemplo, <code type="inline">resume.md</code> o <code type="inline">contact-me.md</code>). Tambi&#233;n cambia el t&#237;tulo, el enlace permanente en el texto preliminar del archivo y el contenido. La nueva p&#225;gina debe aparecer autom&#225;ticamente en el men&#250; principal en el encabezado del sitio:</p>
</li>
</ol>
<figure><desc>La nueva p&#225;gina en nuestro sitio aparece en el men&#250;</desc><graphic url="building-static-sites-with-jekyll-github-pages-22.png"/></figure>
<p>Como referencia, puedes consultar <link target="http://amandavisconti.github.io/JekyllDemo/resume/">un ejemplo de p&#225;gina</link> en mi sitio de demostraci&#243;n, o ver <link target="https://raw.githubusercontent.com/amandavisconti/JekyllDemo/gh-pages/resume.md">el archivo que est&#225; detr&#225;s de esa p&#225;gina</link>.</p>
</div><div n="3"><head>Creaci&#243;n de entradas <a id="section5-2"/></head>
<ol>
<li>En Finder (en macOS, en Windows en <emph>Explorador de archivos</emph>), navega hasta la carpeta de tu sitio web (por ejemplo, <emph>JekyllDemo</emph>) y luego dentro de ella, ingresa a la carpeta <code type="inline">_posts</code>. Abre el archivo que se encuentra all&#237; con un editor de texto (p. ej. TextWrangler) o un editor de Markdown (por ej. Typora). El archivo se llamar&#225; algo as&#237; como <code type="inline">2016-02-28-welcome-to-jekyll.markdown</code> (la fecha coincidir&#225; con la de la creaci&#243;n del sitio de Jekyll).</li>
</ol>
<figure><desc>Un ejemplo de post abierto en un editor de textos</desc><graphic url="building-static-sites-with-jekyll-github-pages-19.png"/></figure>
<p>Al igual que en las p&#225;ginas, el material entre las l&#237;neas --- de las entradas se llama texto preliminar (al abrir el archivo en un editor de Markdown este puede aparecer sobre un fondo gris en lugar de entre guiones). Este apartado le dice a tu sitio si debe formatear el contenido posterior como p&#225;gina o entrada de blog, el t&#237;tulo de la entrada, la fecha y la hora en que fue publicada, y cualquier categor&#237;a que quieras que aparezca en la entrada o la p&#225;gina.</p>
<ol start="2">
<li>
<p>Vamos a escribir una segunda entrada para que tengas una noci&#243;n de la apariencia de m&#250;ltiples entradas en tu sitio. Cierra el archivo <code type="inline">20xx-xx-xx-welcome-to-jekyll.markdown</code> que estaba abierto, luego haz clic con el bot&#243;n derecho del mouse en ese archivo en Finder (en macOS) y elige "Duplicar" (en Windows ser&#237;a copiar y pegar). Un segundo archivo llamado <code type="inline">20xx-xx-xx-welcome-to-jekyll copy.markdown</code> aparecer&#225; en en la carpeta _sites.</p>
</li>
<li>
<p>Haz clic una vez en el archivo <code type="inline">20xx-xx-xx-welcome-to-jekyll copy.markdown</code> para poder editar el nombre del mismo, y luego modif&#237;calo para que muestre la fecha de hoy y contenga un t&#237;tulo diferente, como <code type="inline">2016-02-29-a-post-about-my-research.markdown</code> (utiliza guiones entre las palabras, y <hi rend="bold">no utilices espacios</hi>).</p>
</li>
<li>
<p>Ahora abre este &#250;ltimo archivo en tu editor de texto o de Markdown y personaliza lo siguiente:</p>
<ul>
<li><hi rend="bold">layout:</hi> Mant&#233;n esto tal como est&#225;, no modifiques nada (deber&#237;a decir <emph>post</emph>).</li>
<li><hi rend="bold">title:</hi> Cambia "Welcome to Jekyll!" a cualquier t&#237;tulo que desees para tu nueva entrada (manteniendo las comillas alrededor del t&#237;tulo). La norma es hacer que el t&#237;tulo sea igual que las palabras en el nombre del archivo (excepto con espacios a&#241;adidos y may&#250;sculas). As&#237; es como aparecer&#225; el t&#237;tulo en la p&#225;gina web de la publicaci&#243;n.</li>
<li><hi rend="bold">date:</hi> Cambia esto cuando desees que la publicaci&#243;n muestre fecha y hora de publicaci&#243;n, asegur&#225;ndote que coincida con la fecha que forma parte del nombre del archivo. (La fecha <emph>y</emph> hora deben ser pasadas, para que tu publicaci&#243;n aparezca).</li>
<li><hi rend="bold">categories:</hi> Elimina, por ahora, las palabras "jekyll update (actualizaci&#243;n de jekyll)", y no agregues aqu&#237; nada m&#225;s, ya que el tema actual no las utiliza y desordena las URL de las publicaciones. (<emph>Otros temas pueden usar este campo para ordenar las publicaciones de blog por categor&#237;as</emph>.)</li>
<li><hi rend="bold">El espacio debajo del segundo --- (o debajo del recuadro gris si usa un editor Markdown)</hi> es donde debes escribir el contenido de tu post, usando <link target="#section5-1">el formato Markdown descrito anteriormente</link></li>
</ul>
<p>Despu&#233;s de guardar el archivo, deber&#237;as poder ver tu segunda entrada en la p&#225;gina principal de tu sitio, y al hacer clic en el enlace, deber&#237;a ir a la p&#225;gina de la entrada:</p>
</li>
</ol>
<figure><desc>La nueva entrada ahora aparece en la p&#225;gina principal</desc><graphic url="building-static-sites-with-jekyll-github-pages-20.png"/></figure>
<figure><desc>La nueva p&#225;gina web</desc><graphic url="building-static-sites-with-jekyll-github-pages-21.png"/></figure>
<p>Ten en cuenta que <hi rend="bold">la URL de la publicaci&#243;n</hi> es la URL de tu sitio web local (por ejemplo, <code type="inline">localhost:4000/JekyllDemo/</code>) seguido del a&#241;o/mes/fecha de publicaci&#243;n, del t&#237;tulo tal como est&#225; escrito en tu archivo y finaliza con .html (por ejemplo, <code type="inline">localhost:4000/JekyllDemo/2016/02/29/a-post-about-my-research.html</code>). Jekyll convierte el archivo Markdown que creaste en la carpeta _posts en esta p&#225;gina web HTML.</p>
<p><hi rend="bold">Eliminar un archivo</hi> de la carpeta <code type="inline">_posts</code> lo elimina de tu sitio web (puedes intentarlo con la publicaci&#243;n de muestra "Welcome to Jekyll!!").</p>
<p><hi rend="bold">Para crear nuevos posts</hi>, duplica un archivo existente. Recuerda cambiar el texto preliminar, el contenido dentro de la entrada, as&#237; como el nombre del archivo (fecha y t&#237;tulo).</p>
<p>Como referencia, puedes consultar <link target="https://amandavisconti.github.io/JekyllDemo/2016/11/12/a-post-about-my-research.html">el siguiente ejemplo de entrada</link> en mi sitio de demostraci&#243;n, o acceder al <link target="http://raw.githubusercontent.com/amandavisconti/JekyllDemo/gh-pages/_posts/2016-02-29-a-post-about-my-research.markdown">c&#243;digo que ejecuta esa entrada</link>.</p>
</div></div><div n="2"><head>"Hosting" en GitHub Pages <a id="section6"/></head>
<p>Ahora que ya sabes c&#243;mo a&#241;adir p&#225;ginas y publicaciones, en esta secci&#243;n moveremos tu sitio local a la web, para que otros puedan visitarlo.* <hi rend="bold">En este punto, estaremos haciendo una versi&#243;n p&#250;blica de tu sitio</hi> *(tanto para motores de b&#250;squeda como para cualquiera que conozca o encuentre casualmente el enlace).</p>
<p><link target="#section1-2">Anteriormente en esta lecci&#243;n,</link> instalamos la aplicaci&#243;n GitHub Desktop. Ahora la utilizaremos para mover los archivos de tu sitio a un servidor que los presentar&#225; como p&#225;ginas web (GitHub Pages), que el p&#250;blico podr&#225; visitar en l&#237;nea. Esta ser&#225; la primera vez en la que subiremos todos los archivos de tu sitio a la web. En el futuro, utilizar&#225;s esta aplicaci&#243;n siempre que hayas realizado cambios en los archivos de tu sitio local y desees que esos cambios se vean reflejados en la versi&#243;n p&#250;blica del sitio (al final de esta secci&#243;n encontrar&#225;s una <link target="#section8">gu&#237;a</link> con informaci&#243;n &#250;til para realizar esta tarea).</p>
<ol>
<li>
<p>Abre la aplicaci&#243;n GitHub Desktop y haz clic en el signo &#8220;+&#8221; (Mac) o en la pesta&#241;a &#8220;File&#8221; (Windows) que se encuentra en la esquina superior izquierda. Despu&#233;s, haz clic en la opci&#243;n &#8220;Add&#8221; (o &#8220;Add local repository&#8230;&#8221;) que aparece en el men&#250; desplegable.</p>
</li>
<li>
<p>Haz clic en el bot&#243;n "Choose&#8230;" y selecciona la carpeta (<emph>JekyllDemo</emph> en nuestro ejemplo) que contiene los archivos de tu sitio local (si est&#225;s utilizando Mac y te resulta imposible encontrar esta carpeta, es posible que sea porque se halla oculta; <link target="http://www.macobserver.com/tmo/article/mavericks-easily-make-user-library-folder-visible">usa estas indicaciones</link> para hacerla visible y que, de esta forma, GitHub Desktop pueda ingresar a ella).</p>
</li>
<li>
<p>Luego, haz clic en el bot&#243;n "Create &amp; Add Repository" (Mac) o "Add Repository" (Windows). Ahora aparecer&#225; una lista de los archivos en los que has realizado cambios (ya sean adiciones o sustracciones de archivos o en ellos) desde la &#250;ltima vez en la que copiaste el c&#243;digo de tu sitio a GitHub (en el caso de que todav&#237;a no hayas realizado este proceso, todos los archivos del repositorio aparecer&#225;n listados como nuevas adiciones).</p>
</li>
<li>
<p>Completa el primer campo con una descripci&#243;n de los cambios que hayas realizado en tu sitio desde la &#250;ltima vez en que hayas subido tus archivos a GitHub (ten en cuenta que el espacio es limitado). Para este primer caso, un comentario breve como &#8220;Mi primer commit&#8221; ser&#225; suficiente; en el futuro, es posible que desees ser m&#225;s descriptivo para ayudarte a localizar cu&#225;ndo fue realizado un determinado cambio; por ejemplo, escribiendo &#8220;Se a&#241;ade nueva p&#225;gina de contacto&#8221;.</p>
<p>Puedes utilizar el &#225;rea de texto m&#225;s grande que se encuentra debajo, si deseas escribir un mensaje m&#225;s largo (<emph>opcional</emph>).</p>
</li>
</ol>
<figure><desc>Captura de pantalla de GitHub Desktop en Windows. En la columna izquierda se pueden observar los cambios realizados, los campos de textos para completar y el bot&#243;n azul que confirma el commit.</desc><graphic url="sitios-estaticos-con-jekyll-y-github-pages_7.png"/></figure>
<ol start="5">
<li>En la secci&#243;n superior de la ventana de GitHub Desktop, haz clic en el tercer &#237;cono desde la izquierda (el mensaje &#8220;Add a branch&#8221; deber&#237;a aparecer si colocas el cursor encima de &#233;l) (Mac), o en el recuadro &#8220;current branch&#8221; y luego el bot&#243;n &#8220;New branch&#8221; (Windows). Luego, escribe <emph>gh-pages</emph> en el campo &#8220;Name&#8221; y haz clic en el bot&#243;n &#8220;Create branch&#8221;.</li>
</ol>
<figure><desc>Captura de pantalla de GitHub Desktop en Windows.</desc><graphic url="sitios-estaticos-con-jekyll-y-github-pages_8.png"/></figure>
<p><emph>A partir de este punto el proceso para publicar nuestro sitio en GitHub Pages difiere entre Windows y Mac</emph></p>
<p><hi rend="bold">Para usuarios de Mac</hi></p>
<ol start="6">
<li>Haz clic en el bot&#243;n &#8220;Commit to gh-pages&#8221; en la secci&#243;n inferior izquierda de la ventana de la aplicaci&#243;n.</li>
</ol>
<figure><desc>Haz clic en el bot&#243;n _Commit to gh-pages_</desc><graphic url="building-static-sites-with-jekyll-github-pages-25.png"/></figure>
<ol start="7">
<li>Haz clic en el bot&#243;n &#8220;Publish&#8221; en la secci&#243;n superior derecha.</li>
</ol>
<figure><desc>Haz clic en el bot&#243;n _Publish_</desc><graphic url="building-static-sites-with-jekyll-github-pages-26.png"/></figure>
<ol start="8">
<li>En la ventana emergente, deja todo como est&#225; y haz clic en el bot&#243;n &#8220;Publish repository&#8221; en la secci&#243;n inferior derecha (puede que tu ventana no muestre las opciones relativas a repositorios privados que se muestran en la captura de pantalla).</li>
</ol>
<figure><desc>La ventana emergente</desc><graphic url="building-static-sites-with-jekyll-github-pages-27.png"/></figure>
<ol start="9">
<li>Haz clic en el bot&#243;n &#8220;Sync&#8221; que se encuentra en la secci&#243;n superior derecha.</li>
</ol>
<figure><desc>Haz clic en el bot&#243;n _sync_</desc><graphic url="building-static-sites-with-jekyll-github-pages-28.png"/></figure>
<p><hi rend="bold">Para usuarios de Windows</hi></p>
<ol start="6">
<li>Haz clic en el bot&#243;n &#8220;Publish repository&#8221; que aparece destacado en azul.</li>
</ol>
<figure><desc>Captura de pantalla de GitHub Desktop en Windows.</desc><graphic url="sitios-estaticos-con-jekyll-y-github-pages_9.png"/></figure>
<ol start="7">
<li>
<p>Haz clic en el bot&#243;n &#8220;View on GitHub&#8221; que aparece en la parte central de la ventana, en tercer lugar.</p>
</li>
<li>
<p>Ya en GitHub, debes cambiar las opciones de privacidad de tu repositorio para hacerlo p&#250;blico. Para esto, accede a la secci&#243;n de &#8220;Settings&#8221; y baja hasta el recuadro titulado &#8220;Danger Zone&#8221;. Haz clic en el bot&#243;n &#8220;Change visibility&#8221; y selecciona la opci&#243;n &#8220;Make public&#8221;.</p>
</li>
</ol>
<figure><desc>Ubicaci&#243;n de la opciones (settings) del repositorio en GitHub.</desc><graphic url="sitios-estaticos-con-jekyll-y-github-pages_10.png"/></figure>
<figure><desc>\"Danger zone\" de las opciones de GitHub.</desc><graphic url="sitios-estaticos-con-jekyll-y-github-pages_11.png"/></figure>
<ol start="9">
<li>Arriba del recuadro de Danger Zone se encuentran las opciones de GitHub Pages. All&#237; debes cambiar la opci&#243;n &#8220;Source&#8221; y seleccionar la rama (branch) &#8220;gh-pages&#8221;.</li>
</ol>
<figure><desc>Secci&#243;n de GitHub Pages en las opciones de GitHub.</desc><graphic url="sitios-estaticos-con-jekyll-y-github-pages_12.png"/></figure>
<p><hi rend="bold">Para Mac y Windows</hi></p>
<ol start="10">
<li>Ahora ya puedes visitar tu sitio web (&#161;y compartir el enlace para que otros lo exploren!). La URL sigue la estructura de tu nombre de usuario de GitHub PUNTO github.io BARRA nombre de tu sitio web BARRA. (por ejemplo, la URL del sitio de ejemplo de la autora es <link target="https://amandavisconti.github.io/JekyllDemo/">amandavisconti.github.io/JekyllDemo/</link>).</li>
</ol>
</div><div n="2"><head>Poni&#233;ndonos elegantes <a id="section7"/></head>
<p>Esta lecci&#243;n no cubre el trabajo avanzado para personalizar la apariencia de tu sitio web ni la adici&#243;n de nuevas funcionalidades; sin embargo, aqu&#237; compartimos algo de informaci&#243;n para que puedas comenzar a investigar por tu cuenta.</p>
<div n="3"><head>Dise&#241;o visual <a id="section7-1"/></head>
<p>El dise&#241;o visual de un sitio web es referido usualmente como el <emph>tema</emph> (aunque propiamente, un tema es el conjunto de c&#243;digo y archivos de imagen que generan un cambio importante en la apariencia de un sitio web).</p>
<p>Puedes personalizar el tema de tu sitio realizando cambios en los archivos que se encuentran en las carpetas <code type="inline">_sass</code> y <code type="inline">css</code>. (lamentablemente, en sus versiones m&#225;s recientes, Jekyll comenz&#243; a usar SASS en lugar de CSS, lo que hace que sea m&#225;s dif&#237;cil aprender a personalizarlas para los no-dise&#241;adores). Tambi&#233;n puedes a&#241;adir (y luego personalizar, si lo deseas) un tema creado por alguien m&#225;s, a los que puedes acceder realizando una b&#250;squeda con el t&#233;rmino "Jekyll themes" en alguno de los siguientes recursos:  </p>
<ul>
<li>Tema <link target="https://github.com/minicomp/ed/">"Ed" para ediciones digitales m&#237;nimas</link>, de Alex Gil  (gratis)</li>
<li>Tema <link target="https://github.com/emory-libraries-ecds/digitaledition-jekylltheme">"Digital Edition"</link>, de Rebecca Sutton Koese (gratis)</li>
<li>El directorio de <link target="http://jekyllthemes.org/">Jekyll Themes</link> (gratis)</li>
<li><link target="http://jekyllthemes.io/">JekyllThemes.io</link> (gratis y pago)</li>
</ul>
</div><div n="3"><head>Funcionalidad <a id="section7-2"/></head>
<ul>
<li>
<p>Los <link target="http://jekyllrb.com/docs/plugins/">plugins de Jekyll</link> te permiten a&#241;adir peque&#241;os segmentos de c&#243;digo que permiten sumar funcionalidades a tu sitio, tales como <link target="https://github.com/PascalW/jekyll_indextank">realizar b&#250;squedas de texto</link>, <link target="https://github.com/yihangho/emoji-for-jekyll">permitir el uso de emojis</link>, o <link target="https://gist.github.com/ilkka/710577">crear nubes de palabras</link>.</p>
</li>
<li>
<p>Si deseas alojar tu sitio en GitHub Pages, como lo hicimos en esta lecci&#243;n, solo podr&#225;s utilizar los plugins de Jekyll que ya est&#225;n incluidos en las <emph>gems</emph> de GitHub Pages que instalamos (aqu&#237; tienes una <link target="https://pages.github.com/versions/">lista completa de lo que hemos instalado</link>, cuando a&#241;adimos la <emph>gem</emph> de GitHub Pages a nuestro Gemfile).</p>
</li>
<li>
<p>Si decides alojar tu sitio de Jekyll en otro servidor que no sea GitHub Pages, puedes utilizar cualquier plugin de Jekyll (las instrucciones para alojar tu sitio var&#237;an entre diferentes proveedores de hosting web y no las desarrollaremos en esta lecci&#243;n, pero <link target="http://jekyllrb.com/docs/plugins/">aqu&#237;</link> tienes una p&#225;gina que explica c&#243;mo instalar plugins, una vez que poseas tu sitio con hosting propio). Puedes realizar una b&#250;squeda utilizando &#8220;Jekyll plugin&#8221; y a&#241;adir la funcionalidad que necesites para explorar si hay una herramienta apropiada disponible, o revisar la <link target="http://jekyllrb.com/docs/plugins/">documentaci&#243;n sobre plugins</link> en el sitio oficial de Jekyll.</p>
</li>
<li>
<p>Tambi&#233;n puedes mantener GitHub Pages como hosting gratuito para tu sitio, pero darle un <hi rend="bold">nombre de dominio personalizado</hi> (los dominios pueden ser adquiridos por un costo razonable -que suele rondar los 10 d&#243;lares anuales- a trav&#233;s de un registrador de dominios como <link target="https://www.nearlyfreespeech.net/services/domains">NearlyFreeSpeech.net</link>). Por ejemplo, el blog de la autora de este tutorial, <link target="http://literaturegeek.com/">LiteratureGeek.com</link>, fue hecho con Jekyll y est&#225; alojado en GitHub Pages, al igual que el sitio que creaste en esta lecci&#243;n, pero utiliza un dominio personalizado que la autora compr&#243; y configur&#243; para que condujera a su sitio web. Las instrucciones para establecer un dominio personalizado pueden ser encontradas <link target="https://help.github.com/articles/using-a-custom-domain-with-github-pages/">aqu&#237;</link>.   </p>
</li>
</ul>
<div class="alert alert-warning">
Si configuras un dominio personalizado para tu sitio web alojado en GitHub Pages, aseg&#250;rate de leer y seguir los pasos de <link target="https://docs.github.com/es/pages/configuring-a-custom-domain-for-your-github-pages-site/verifying-your-custom-domain-for-github-pages">la documentaci&#243;n de GitHub</link> para verificar tu dominio y evitar el uso de registros DNS comod&#237;n, para prevenir as&#237; un fallo de seguridad conocido.
</div>
<ul>
<li>Adem&#225;s, puedes <hi rend="bold">migrar un blog existente</hi> desde otras plataformas, incluyendo WordPress, Blogger, Drupal y Tumblr, para lo cual debes seguir el enlace que se encuentra en el sector derecho de <link target="https://import.jekyllrb.com/docs/home/">esta p&#225;gina</link>. Cuando migres un sitio, aseg&#250;rate de tener una copia de seguridad de tu sitio original, en caso de que necesites realizar m&#225;s de un intento para que las publicaciones del sitio queden en la misma URL que antes (y que de esta forma el sitio se mantenga en los resultados de los buscadores y en los marcadores).</li>
</ul>
</div></div><div n="2"><head>Gu&#237;a <a id="section8"/></head>
<p><hi rend="bold">Para realizar pruebas en el sitio de forma local</hi> (nuevos plugins, temas, o explorar c&#243;mo luce una nueva publicaci&#243;n):</p>
<ul>
<li><emph>Correr el sitio en forma local</emph>: Escribe <code type="inline">bundle exec jekyll serve --watch</code> en la l&#237;nea de comandos.</li>
<li><emph>Visitar el sitio local</emph>: Abrir <hi rend="bold">localhost:4000/yourwebfoldername/</hi> en un explorador (por ejemplo: <emph>localhost:4000/JekyllDemo/</emph>). &#161;No olvides la barra inclinada al final!</li>
<li><emph>Ver los cambios en el sitio local a medida que los vas realizando</emph>: Para visualizar los cambios en los archivos mientras el sitio est&#225; abierto en el explorador, debes guardar los archivos modificados y refrescar la p&#225;gina en el explorador; a menos que el cambio se haya realizado en el archivo <code type="inline">_config.yml</code>, en cuyo caso debes cerrar el sitio en el navegador y luego volver a entrar para ver los cambios.</li>
<li><emph>Detener el sitio local</emph>: Presiona <hi rend="bold">control-c</hi> en la l&#237;nea de comandos.</li>
</ul>
<p><hi rend="bold">Para trasladar los cambios que realizaste en tu sitio local a la versi&#243;n en l&#237;nea</hi>:</p>
<ul>
<li>Abre GitHub Desktop y escribe una breve descripci&#243;n de los cambios realizados (de forma opcional, tambi&#233;n puedes escribir una descripci&#243;n m&#225;s larga en el segundo cuadro de texto).</li>
<li>Haz clic en el bot&#243;n &#8220;commit&#8221; que se encuentra debajo del recuadro de texto.</li>
<li>Una vez que el commit haya finalizado, haz clic en el bot&#243;n &#8220;Sync&#8221; en la secci&#243;n superior derecha de la pantalla (Mac) o en el bot&#243;n &#8220;Push origin&#8221; que aparece destacado en azul (Windows).</li>
<li>Espera un poco a que GitHub reciba los cambios (usualmente entre 10 a 90 segundos) y refresca tu sitio online para ver los cambios all&#237; reflejados.</li>
</ul>
</div><div n="2"><head>Ayuda, cr&#233;ditos y lecturas <a id="section9"/></head>
<div n="3"><head>Ayuda <a id="section9-1"/></head>
<p>Si encuentras alg&#250;n problema, <link target="https://jekyllrb.com/docs/troubleshooting/">Jekyll tiene una p&#225;gina para problemas, conocidos como troubleshooting</link>, que te puede ayudar. Si est&#225;s trabajando en la l&#237;nea de comandos y recibes un mensaje de error, no te olvides de buscar m&#225;s acerca del error en la web. M&#225;s all&#225; de los motores de b&#250;squeda tradicionales, <link target="http://stackexchange.com/">el sitio StackExchange</link> es un buen lugar para encontrar preguntas y respuestas de gente que tuvo este tipo de problemas.</p>
</div><div n="3"><head>Creditos <a id="section9-2"/></head>
<p>Gracias a Fred Gibbs, editor del <emph>Programming Historian</emph> por editar, debatir y revisar la lecci&#243;n original. A Paige Morgan por revisar la lecci&#243;n; a Scott Weingart y sus estudiantes por poner en pr&#225;ctica y testear esta lecci&#243;n en Windows; a Tod Robbins y Matthew Lincoln por sugerencias en <link target="https://digitalhumanities.slack.com">DH Slack</link> sobre lo que deber&#237;a ense&#241;ar esta lecci&#243;n. Asimismo, agradecemos a Marc Bria por su revisi&#243;n y sugerencias con respecto a la traducci&#243;n de esta lecci&#243;n al espa&#241;ol.</p>
</div><div n="3"><head>Lecturas <a id="section9-3"/></head>
<p>Puedes visitar estos sitios para m&#225;s documentaci&#243;n, inspiraci&#243;n y para aprender m&#225;s sobre Jekyll:</p>
<ul>
<li><link target="https://jekyllrb.com/docs/home/">Documentaci&#243;n oficial de Jekyll</link></li>
<li>Jekyll tiene links a recursos "no oficiales" sobre su funcionamiento en Windows: <link target="http://jekyll-windows.juthilo.com/">https://jekyll-windows.juthilo.com/</link> y <link target="https://davidburela.wordpress.com/2015/11/28/easily-install-jekyll-on-windows-with-3-command-prompt-entries-and-chocolatey/">https://davidburela.wordpress.com/2015/11/28/easily-install-jekyll-on-windows-with-3-command-prompt-entries-and-chocolatey/</link></li>
<li><link target="https://help.github.com/articles/using-jekyll-with-pages/">https://help.github.com/articles/using-jekyll-with-pages/</link></li>
<li>Amanda Visconti, <link target="https://literaturegeek.com/2015/12/08/WhyJekyllGitHub">"Introducing Static Sites for Digital Humanities Projects (why &amp; what are Jekyll, GitHub, etc.?)"</link></li>
<li>Alex Gil, <link target="https://chronicle.com/blogs/profhacker/jekyll1/60913">"How (and Why) to Generate a Static Website Using Jekyll, Part 1"</link></li>
<li>Eduardo Bou&#231;as, <link target="https://davidwalsh.name/introduction-static-site-generators">"An Introduction to Static Site Generators"</link></li>
<li><link target="https://ben.balter.com/jekyll-style-guide/">Gu&#237;a de estilo de Jekyll</link></li>
<li><link target="https://prose.io/">Prose</link>: editor de contenido (creado en Jekyll)</li>
<li><link target="https://digitalhumanities.slack.com">&#218;nete al Slack sobre humanidades digitales</link> (cualquiera puede sumarse; no se necesita saber sobre humanidades digitales) y s&#250;mate a los debates acerca de Jekyll y otras plataformas de publicaci&#243;n en el canal #publishing.</li>
</ul>
</div></div></body>
  </text>
</TEI>
