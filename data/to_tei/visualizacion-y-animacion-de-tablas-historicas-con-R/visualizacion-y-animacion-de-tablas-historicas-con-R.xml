<TEI xmlns="https://tei-c.org/ns/1-0/">
  <metadata>
  <title>Visualizaci&#243;n y animaci&#243;n de tablas hist&#243;ricas con R
</title>
  <collection>lessons</collection>
  <layout>lesson</layout>
  <slug>visualizacion-y-animacion-de-tablas-historicas-con-R</slug>
  <date>2021-06-28</date>
  <authors>Marcelo Raimundo</authors>
  <reviewers>Jennifer Isasi,Basthian Medina</reviewers>
  <editors>Riva Quiroga</editors>
  <review-ticket>https://github.com/programminghistorian/ph-submissions/issues/330</review-ticket>
  <difficulty>2</difficulty>
  <activity>analyzing</activity>
  <topics>distant-reading,r,data-visualization</topics>
  <abstract>En esta lecci&#243;n aprender&#225;s a visualizar y animar temporalmente datos hist&#243;ricos almacenados en forma de tabla.</abstract>
  <avatar_alt>Una mano llevando una botella.</avatar_alt>
  <doi>10.46430/phes0052</doi>
</metadata>
  <text>
    <body>
      <div n="2"><head>Contenidos</head>
<p>{:.no_toc}</p>
<ul>
<li>TOC
{:toc}</li>
</ul>
<div n="1"><head>Resumen</head>
<p>Esta lecci&#243;n te mostrar&#225; c&#243;mo cruzar, graficar y animar un conjunto de datos hist&#243;ricos. Aprender&#225;s a importar en <emph>RStudio</emph> una tabla disponible en una hoja de c&#225;lculo y a utilizar funciones que te permitan transformar esos datos para representarlos como una tabla de contingencia. Tambi&#233;n sabr&#225;s c&#243;mo utilizar funciones de nuevas librer&#237;as que te permitir&#225;n visualizar tus datos cruzados en forma gr&#225;fica e inclusive llegar a animarlos en perspectiva temporal.  </p>
</div><div n="1"><head>Objetivos</head>
<p>En esta lecci&#243;n aprender&#225;s a:</p>
<ol>
<li>Ordenar y transformar tablas hist&#243;ricas para realizar an&#225;lisis exploratorios</li>
<li>Generar gr&#225;ficos est&#225;ticos y animados para visualizar datos hist&#243;ricos</li>
</ol>
</div><div n="1"><head>Introducci&#243;n</head>
<p>Es indudable que en una disciplina como la historia predomina el tratamiento cualitativo de los documentos y fuentes que el pasado nos ha legado. Pero, como ha se&#241;alado Roderick Floud, &#8220;aunque estemos b&#225;sicamente m&#225;s interesados en las cuestiones &#8216;cualitativas&#8217; que en las &#8216;cuantitativas&#8217;, ambas est&#225;n inextricablemente unidas&#8221;<ref type="footnotemark" target="#1"/>. Es decir, no compiten, no se reemplazan, sino que se complementan. Una forma de combinar ambas metodolog&#237;as, es a trav&#233;s de la b&#250;squeda de regularidades o patrones ocultos o, a la inversa, de anomal&#237;as. Esto permite acercar a quienes hacen investigaci&#243;n hist&#243;rica a un mejor conocimiento de las coordenadas en las que situar sus interpretaciones. Si esa comprensi&#243;n global de los datos puede visualizarse gr&#225;ficamente, posibilita &#8220;que el investigador descubra f&#225;cilmente relaciones, similitudes y diferencias entre sus casos&#8221;. Desde que escribi&#243; Floud -a mediados de los a&#241;os setenta- la tecnolog&#237;a inform&#225;tica y la programaci&#243;n han avanzado de tal manera que hacen muy f&#225;cil el cruce entre perspectivas metodol&#243;gicas. De esta manera, si un trabajo hist&#243;rico cualitativo apunta a profundizar aspectos de fen&#243;menos que sucedieron en el pasado, uno cuantitativo te permitir&#225; saber con qu&#233; frecuencia sucedieron, observar patrones y anomal&#237;as, y a establecer relaciones temporales entre las diferentes categor&#237;as de an&#225;lisis existentes.</p>
<p>Quien se propone hacer un an&#225;lisis hist&#243;rico cuantitativo debe partir de un ejercicio de codificaci&#243;n de las fuentes documentales que el pasado nos ha legado y plasmarlas en una matriz de datos. Es decir, esto demanda un proceso de conversi&#243;n de nuestras fuentes de informaci&#243;n, para transformar los datos textuales (palabras) en datos simb&#243;licos operables digitalmente (n&#250;meros). Lo anterior consta de varios pasos: 1) <emph>clasificar</emph> los documentos a los que se ha accedido de forma que permitan su puesta en com&#250;n seg&#250;n criterios determinados, 2) <emph>categorizar</emph> descriptiva, interpretativa o anal&#237;ticamente, con ideas, categor&#237;as o conceptos el contenido de las fuentes, 3) <emph>codificar</emph>, poniendo a las distintas expresiones particulares de cada caso un s&#237;mbolo (n&#250;meros, palabras), 4) <emph>tabular</emph>, es decir, representar los casos organizados en forma de una matriz en un soporte inform&#225;tico, habitualmente una hoja de c&#225;lculo.</p>
<p>En esta lecci&#243;n te mostraremos una de las tantas formas en que se pueden analizar cuantitativamente archivos que re&#250;nen informaci&#243;n sistem&#225;tica y seriada (como son casos de productores de documentaci&#243;n permanente como el Estado, empresas o la prensa) utilizando el lenguaje de programaci&#243;n R. El objetivo es que adquieras conocimientos que te permitan efectuar un an&#225;lisis exploratorio de datos, trabajando principalmente la distribuci&#243;n de frecuencias de distintas variables a trav&#233;s de tablas de contingencia, para luego visualizarlas, generar gr&#225;ficos y, finalmente, crear una animaci&#243;n de los mismos en perspectiva temporal.</p>
</div><div n="1"><head>Requisitos</head>
<p>Esta lecci&#243;n requiere que cuentes con nociones b&#225;sicas de R, que tratan las lecciones <link target="/es/lecciones/datos-tabulares-en-r">Datos tabulares en R</link> de Trayn Dewar y <link target="/es/lecciones/administracion-de-datos-en-r">Administraci&#243;n de datos en R</link> de Nabeel Siddiqui.</p>
<p>Adem&#225;s de R, deber&#225;s tener instalado el entorno de desarrollo [RStudio]
(<link target="https://www.rstudio.com/products/rstudio/download/#download)">https://www.rstudio.com/products/rstudio/download/#download)</link>. Si no lo tienes a&#250;n, <link target="https://www.youtube.com/watch?v=Nmu4WPdJBRo">en este video</link> encontrar&#225;s una gu&#237;a sobre c&#243;mo descargarlo e instalarlo.</p>
</div><div n="1"><head>Los datos explorados</head>
<p>El conjunto de datos que aqu&#237; se presenta servir&#225; para que veas c&#243;mo R te puede ayudar a analizar din&#225;micas de la violencia pol&#237;tica en Argentina a finales de la d&#233;cada de los a&#241;os cincuenta, a partir de documentos policiales de espionaje. Habitualmente estos archivos de inteligencia se han utilizado para el estudio hist&#243;rico de casos particulares, pero rara vez se ha apuntado a lograr grados de agregaci&#243;n que permitan hacer comparaciones entre distintos casos. Contar con algunos elementos b&#225;sicos de programaci&#243;n facilita dar pasos en esa direcci&#243;n.</p>
<p>La fuente que te proponemos codificar es un legajo muy especial del archivo de la ex Direcci&#243;n de Inteligencia de la Polic&#237;a de Buenos Aires (Argentina). Contiene varios informes de inteligencia que contabilizan "actos terroristas" durante los a&#241;os del per&#237;odo de conflictividad pol&#237;tica y social que se conoce en la historia argentina como "Resistencia peronista"<ref type="footnotemark" target="#2"/>. En la Figura 1 se presenta una imagen escaneada de uno de los legajos. Lo interesante es que la informaci&#243;n cruda se presenta de una manera que facilita su tabulaci&#243;n.</p>
<figure><desc>Figura 1. Imagen de un legajo con datos sobre atentados</desc><graphic url="visualizacion-y-animacion-de-tablas-historicas-con-R1.jpg"/></figure>
<p>Este documento fue transformado en un conjunto de datos procesables cuantitativamente. Se construy&#243; una tabla a partir informaci&#243;n sobre algunas localidades de la provincia de Buenos Aires en 1959, a&#241;o en el que el n&#250;mero de "actos terroristas" o atentados fue muy alto. Los datos representan los valores de ciertas variables de an&#225;lisis comunes a todos los registros, como son la <emph>ciudad</emph> (d&#243;nde) y la <emph>fecha</emph> del atentado (cu&#225;ndo). Desde la informaci&#243;n descriptiva de la polic&#237;a (atributos del atentado), fue posible generar variables como: <emph>objeto</emph> utilizado en el atentado (con qu&#233; elemento se realiz&#243;), <emph>sitio</emph> (lugar/espacio) y <emph>objetivo</emph> (contra qui&#233;n). Con esta categorizaci&#243;n, buscamos ahorrar un paso, ya que la tabla sigue los preceptos de "datos ordenados" (<emph>tidy data</emph>): cada variable forma una columna, cada observaci&#243;n forma una fila, cada valor tiene su propia celda, cada tipo de unidad observacional forma una tabla<ref type="footnotemark" target="#3"/>.</p>
<table>
<thead>
<tr>
<th align="center">fecha</th>
<th align="center">ciudad</th>
<th align="center">objeto</th>
<th align="center">sitio</th>
<th align="center">objetivo</th>
</tr>
</thead>
<tbody>
<tr>
<td align="center">18/01/1959</td>
<td align="center">La Plata</td>
<td align="center">bomba</td>
<td align="center">sede</td>
<td align="center">institucion extranjera</td>
</tr>
<tr>
<td align="center">19/01/1959</td>
<td align="center">La Plata</td>
<td align="center">petardo</td>
<td align="center">vias ffcc</td>
<td align="center">ferrocarril</td>
</tr>
<tr>
<td align="center">19/01/1959</td>
<td align="center">Matanza</td>
<td align="center">bomba</td>
<td align="center">vias ffcc</td>
<td align="center">ferrocarril</td>
</tr>
<tr>
<td align="center">20/01/1959</td>
<td align="center">Avellaneda</td>
<td align="center">molotov</td>
<td align="center">comercio</td>
<td align="center">comercio</td>
</tr>
<tr>
<td align="center">20/01/1959</td>
<td align="center">Avellaneda</td>
<td align="center">bomba</td>
<td align="center">vias ffcc</td>
<td align="center">ferrocarril</td>
</tr>
<tr>
<td align="center">20/01/1959</td>
<td align="center">Lomas</td>
<td align="center">bomba</td>
<td align="center">vias ffcc</td>
<td align="center">ferrocarril</td>
</tr>
<tr>
<td align="center">20/01/1959</td>
<td align="center">Matanza</td>
<td align="center">bomba</td>
<td align="center">vias ffcc</td>
<td align="center">ferrocarril</td>
</tr>
</tbody></table><p>Para esta lecci&#243;n utilizaremos la tabla correspondiente a los atentados en cinco ciudades de Argentina durante 1959, la que se encuentra disponible en el archivo <link target="/assets/visualizacion-y-animacion-de-tablas-historicas-con-R/atentados1959.xlsx">atentados1959.xlsx</link></p>
</div><div n="1"><head>Tratamiento y limpieza de los datos con R</head>
<p>En esta secci&#243;n te mostraremos c&#243;mo cargar los datos en RStudio para comenzar a procesarlos. No esperes que est&#233; todo listo para trabajar una vez importada la hoja de c&#225;lculo; siempre ser&#225; necesaria una adecuaci&#243;n de tus datos para que R pueda interpretarlos. En lo que ata&#241;e a este caso, por ejemplo, luego de importarlos deber&#225;s asignarle un tipo a las variables, convertirlas, hacer algunas modificaciones en los datos y luego ordenarlos temporalmente.</p>
<p>El primer paso ser&#225; importarlos desde su formato de hoja de c&#225;lculo al entorno de RStudio. Para poder hacerlo, primero deber&#225;s instalar el paquete que te dar&#225; los recursos necesarios: <link target="https://readxl.tidyverse.org/">readxl</link><ref type="footnotemark" target="#4"/>. Este paquete es parte de la colecci&#243;n de paquetes conocida como <link target="https://www.tidyverse.org/">Tidyverse</link><ref type="footnotemark" target="#5"/>, una de las m&#225;s utilizados para el tipo de an&#225;lisis que te proponemos, ya que permite realizar f&#225;cilmente tareas tales como leer, transformar, tratar, manipular, organizar y visualizar distinto tipo de datos. Adem&#225;s de <emph>readxl</emph>, contiene varios de los paquetes que necesitar&#225;s m&#225;s adelante.</p>
<pre><code class="language-R" xml:id="code_visualizacion-y-animacion-de-tablas-historicas-con-R_0" type="block" corresp="code_visualizacion-y-animacion-de-tablas-historicas-con-R_0.txt"></code></pre>
<p>A continuaci&#243;n, debes cargar tanto el paquete <emph>readxl</emph> como el paquete <emph>tidyverse</emph>. Si bien el paquete <emph>readxl</emph> est&#225; contenido dentro de este &#250;ltimo, es necesario cargarlo de forma independiente.</p>
<pre><code class="language-R" xml:id="code_visualizacion-y-animacion-de-tablas-historicas-con-R_1" type="block" corresp="code_visualizacion-y-animacion-de-tablas-historicas-con-R_1.txt"></code></pre>
<p>Ahora est&#225;s en condiciones de importar el dataset, usando la funci&#243;n <code type="inline">read_excel()</code>. Esta funci&#243;n toma como argumento el nombre del archivo donde almacenaste la hoja de c&#225;lculo, suponiendo que est&#225; en tu directorio actual de trabajo. Si no estuviese en tu directorio de trabajo, deber&#225;s indicar toda la ruta del archivo.
El contenido del archivo lo asignaremos a un nuevo objeto que llamaremos <code type="inline">at59</code>:</p>
<pre><code class="language-R" xml:id="code_visualizacion-y-animacion-de-tablas-historicas-con-R_2" type="block" corresp="code_visualizacion-y-animacion-de-tablas-historicas-con-R_2.txt"></code></pre>
<p>Es fundamental entender en qu&#233; forma fue almacenada la informaci&#243;n. En R todo es un objeto y, dependiendo de las caracter&#237;sticas de los datos importados, corresponder&#225; a una determinada estructura de datos. R maneja varias estructuras que se diferencian por tener distinta cantidad de dimensiones y por si pueden guardar o no datos de diverso tipo. La m&#225;s conocida es el <emph>vector</emph>, que es una colecci&#243;n de una dimensi&#243;n de datos de igual tipo. Otra estructura es la <emph>matriz</emph>, que es similar al vector, pero permite trabajar en dos dimensiones.</p>
<p>Adem&#225;s, R cuenta con una forma particular de estructura de datos, la cual tiene dos dimensiones y nos da la posibilidad de contener datos de distinto tipo (enteros junto a fechas, caracteres, etc&#233;tera). Esta estructura es denominada <emph>data frame</emph>, y se compone por filas y columnas; cada fila corresponde a una observaci&#243;n o registro, mientras que cada columna es un vector que representa una variable de an&#225;lisis. El <emph>data frame</emph> es una de las estructuras m&#225;s utilizadas en <emph>R</emph> y los datos que importamos de hojas de c&#225;lculo se almacenar&#225;n de esta manera. Es importante tener en cuenta que muchas de las funciones del Tidyverse (como <code type="inline">read_excel()</code>) devuelven un tipo particular de <emph>data frame</emph> llamado <emph>tibble</emph>. La principal diferencia entre ambos tipos es la forma en que los datos se muestran en la consola. Los <emph>tibble</emph>, por ejemplo, muestran debajo del nombre de cada variable a qu&#233; tipo corresponde. Esto lo podr&#225;s apreciar al usar la funci&#243;n <code type="inline">head()</code>, que muestra los primeros seis registros de <code type="inline">at59</code>. Ah&#237; se puede observar que la fecha est&#225; en formato <emph>datetime</emph> (fecha y hora) y el resto de las columnas son de tipo <emph>character</emph> (caracter).</p>
<pre><code class="language-R" xml:id="code_visualizacion-y-animacion-de-tablas-historicas-con-R_3" type="block" corresp="code_visualizacion-y-animacion-de-tablas-historicas-con-R_3.txt"></code></pre>
<p>Con la tabla ya cargada en <emph>RStudio</emph> puedes empezar el tratamimiento de los datos para poder trabajar con ellos. As&#237;, por ejemplo, podemos partir reemplazando determinados valores de la estructura de datos para corregir o cambiar contenidos masivamente. Para tal efecto, utilizaremos la funci&#243;n <code type="inline">ifelse()</code>, la que te permite seleccionar elementos de una estructura de datos seg&#250;n se cumpla o no alguna condici&#243;n. Esta funci&#243;n aprovecha la vectorializaci&#243;n del lenguaje R y permite que, al aplicar una funci&#243;n a un objeto, esta lo haga sobre todos sus elementos. As&#237;, se evita la necesidad de utilizar bucles (<code type="inline">for</code> o <code type="inline">while</code>, por ejemplo) para recorrer las filas. Lo recomendable es que hagas estas operaciones sobre los datos antes de realizar alguna conversi&#243;n sobre su tipo.</p>
<p>Sup&#243;n que deseas reemplazar todos los casos donde el <emph>objeto</emph> figura como &#8216;bomba&#8217;, por el t&#233;rmino &#8216;explosivo&#8217;. Para tal efecto puedes utilizar la funci&#243;n <code type="inline">ifelse()</code> pas&#225;ndole solo tres argumentos. Primero se indica la condici&#243;n a cumplir, en este caso, los valores &#8216;bomba&#8217; de la columna <emph>objeto</emph> de <emph>at59</emph>, que es seleccionada con el s&#237;mbolo <code type="inline">$</code>. El segundo argumento corresponde a lo que la funci&#243;n asignar&#225; en el caso de que la condici&#243;n se cumpla: lo reemplazar&#225; por &#8216;explosivo&#8217;. El tercer argumento es el valor asignado en el caso negativo. En este caso mantendr&#225;s el valor original:</p>
<pre><code class="language-R" xml:id="code_visualizacion-y-animacion-de-tablas-historicas-con-R_4" type="block" corresp="code_visualizacion-y-animacion-de-tablas-historicas-con-R_4.txt"></code></pre>
<p>Si te llegases a arrepentir de los cambios, puedes hacer la misma operaci&#243;n pero a la inversa:</p>
<pre><code class="language-R" xml:id="code_visualizacion-y-animacion-de-tablas-historicas-con-R_5" type="block" corresp="code_visualizacion-y-animacion-de-tablas-historicas-con-R_5.txt"></code></pre>
<p>A continuaci&#243;n, ser&#237;a conveniente transformar los <emph>tipos</emph> de variables. En este caso, los cambios te permitir&#225;n aprovechar mejor las funciones de visualizaci&#243;n. Primero, como no interesa que las fechas tengan adem&#225;s la hora, puedes adecuar esa variable utilizando la funci&#243;n <code type="inline">as.Date()</code> sobre la columna <emph>fecha</emph>. Segundo, puedes transformar el resto de las variables de an&#225;lisis a <emph>factores</emph>, que es el tipo de dato que brinda <emph>R</emph> para trabajar con <emph>variables categ&#243;ricas</emph>, es decir, aquellas que representan un conjunto fijo y conocido de valores posibles. A continuaci&#243;n deber&#237;as hacer algo id&#233;ntico con cada una las cuatro columnas restantes (<emph>ciudad</emph>, <emph>objeto</emph>, <emph>sitio</emph> y <emph>objetivo</emph>) y aplicarles la funci&#243;n <code type="inline">factor()</code>. En principio, esto implicar&#237;a escribir cinco sentencias (una por cada variable): <code type="inline">variable &lt;- factor(variable)</code>. Si te interesa practicar escritura de c&#243;digo prolijo, uno de sus preceptos apunta a evitar la repetici&#243;n de sentencias si no son necesarias y aprovechar el potencial que brinda el lenguaje que estemos utilizando para resolverlo. En el caso de R puedes hacerlo utilizando funciones que permiten aplicar de manera generalizada otras funciones a una estructura de datos.</p>
<p>Entre diversas opciones, te invitamos a usar a <code type="inline">map_df()</code> del paquete <emph>purrr</emph><ref type="footnotemark" target="#6"/>, que es tambi&#233;n parte del Tidyverse. <code type="inline">map_df()</code> te permite asignar una funci&#243;n -que en este caso ser&#225; para cambiar el tipo de datos- a diversos elementos de un <emph>data frame</emph> y almacenar el resultado en un objeto de esta misma clase. Como argumentos de la funci&#243;n, se indica en primer t&#233;rmino el nombre de las columnas -en un formato vectorizado con <code type="inline">c()</code>- y luego la funci&#243;n que quieres aplicar a dichas columnas.
Para unir el c&#243;digo de ambas transformaciones en una solo una sentencia, puedes utlizar la funci&#243;n <code type="inline">tibble()</code>. Esto te dar&#225; como resultado un <emph>tibble</emph> con las columnas convertidas y organizadas tal como estaban originalmente:</p>
<pre><code class="language-R" xml:id="code_visualizacion-y-animacion-de-tablas-historicas-con-R_6" type="block" corresp="code_visualizacion-y-animacion-de-tablas-historicas-con-R_6.txt"></code></pre>
<p>Para finalizar esta etapa de limpieza y transformaci&#243;n de los datos, es necesario ordenarlos cronol&#243;gicamente. Para ello dispones de la funci&#243;n <code type="inline">arrange()</code>, del paquete <emph>dplyr</emph><ref type="footnotemark" target="#7"/>, tambien parte del Tidyverse, que te permitir&#225; reordenar las filas del <emph>data frame</emph>. Por defecto lo hace de forma ascendente, aunque, al igual que la mayor&#237;a de las funciones en R, es parametrizable y nos permite variaciones. En este caso, el orden ascendente es pertinente, as&#237; que no podr&#225;s utilizar la funci&#243;n directamente. El primer argumento es tu objeto de datos y el segundo la variable que se utilizar&#225; como criterio ordenador. Si lo haces por fecha deber&#225;s ingresar:</p>
<pre><code class="language-R" xml:id="code_visualizacion-y-animacion-de-tablas-historicas-con-R_7" type="block" corresp="code_visualizacion-y-animacion-de-tablas-historicas-con-R_7.txt"></code></pre>
<p>Con <code type="inline">head()</code> podr&#225;s apreciar c&#243;mo qued&#243; reorganizado y listo tu conjunto de datos para que comiences, ahora, s&#237; a analizarlo.</p>
<pre><code class="language-R" xml:id="code_visualizacion-y-animacion-de-tablas-historicas-con-R_8" type="block" corresp="code_visualizacion-y-animacion-de-tablas-historicas-con-R_8.txt"></code></pre>
</div><div n="1"><head>Explorando los datos</head>
<p>A continuaci&#243;n realizaremos un an&#225;lisis exploratorio b&#225;sico de nuestros datos hist&#243;ricos, con el fin de encontrar relaciones entre los casos de atentados incluidos en el dataset. La idea de este tipo de metodolog&#237;a es identificar las principales caracter&#237;sticas de un conjunto de datos (patrones, diferencias, tendencias, anomal&#237;as, discontinuidades y distribuciones) con el objetivo de conocer su variabilidad. Al representar dicha variabilidad de manera num&#233;rica, y sobre todo en forma de gr&#225;ficos y visualizaciones, el an&#225;lisis exploratorio de datos se transforma en un medio para desarrollar nuevas perspectivas anal&#237;ticas, preguntas o hip&#243;tesis: con una breve mirada podemos estar al tanto de concentraciones de datos, valores at&#237;picos, saltos, etc&#233;tera.</p>
<p>Con nuestra base de datos vamos a trabajar con una de las formas primarias en que se manifiesta la variabilidad en la informaci&#243;n: la distribuci&#243;n de frecuencias. Lo haremos en modo bivariado, es decir, veremos c&#243;mo se pueden construir tablas de contingencia que contabilicen los casos resultantes del cruce de dos variables dentro del conjunto de los atentados efectuados durante 1959.</p>
<p>Para tal efecto, cuentas con una sencilla funci&#243;n denominada <code type="inline">table()</code>, que toma variables tipo factor como par&#225;metros y regresa la frecuencia de aparici&#243;n de las categor&#237;as de la variable. Un aspecto interesante de esta funci&#243;n es que tambi&#233;n te permite pasarle una sola columna como argumento. Por ejemplo, si quieres saber cu&#225;ntos atentados hay por ciudad puedes conocer la cifra con la sentencia:</p>
<pre><code class="language-R" xml:id="code_visualizacion-y-animacion-de-tablas-historicas-con-R_9" type="block" corresp="code_visualizacion-y-animacion-de-tablas-historicas-con-R_9.txt"></code></pre>
<p>Si quieres empezar a probar las capacidades gr&#225;ficas que te da R base, puedes transformar esa tabla de una dimensi&#243;n en un gr&#225;fico de barras, con una funci&#243;n llamada <code type="inline">barplot()</code>:</p>
<pre><code class="language-R" xml:id="code_visualizacion-y-animacion-de-tablas-historicas-con-R_10" type="block" corresp="code_visualizacion-y-animacion-de-tablas-historicas-con-R_10.txt"></code></pre>
<p>El gr&#225;fico resultante (Figura 2) aparecer&#225; en la pesta&#241;a <emph>Plots</emph> de la ventana de utilidades.</p>
<figure><desc>Figura 2. Gr&#225;fico de barras que muestra la frecuencia de atentados por ciudad. En este caso, Avellaneda y La Plata concentran la mayor cantidad de atentados.</desc><graphic url="visualizacion-y-animacion-de-tablas-historicas-con-R2.png"/></figure>
<p>Para analizar posibles relaciones entre variables y categor&#237;as, puedes confeccionar una tabla de contingencia. Para ello, a la funci&#243;n <code type="inline">table()</code> debes aplicas como argumento las dos columnas que te interesa cruzar. Por ejemplo, si quieres saber con qu&#233; tipo de elementos u objetos se efectuaron los atentados, seg&#250;n la ciudad de ocurrencia del hecho, deber&#237;as ingresar a la consola:</p>
<pre><code class="language-R" xml:id="code_visualizacion-y-animacion-de-tablas-historicas-con-R_11" type="block" corresp="code_visualizacion-y-animacion-de-tablas-historicas-con-R_11.txt"></code></pre>
<p>Obtendr&#225;s como resultado la siguiente tabla:</p>
<pre><code class="language-R" xml:id="code_visualizacion-y-animacion-de-tablas-historicas-con-R_12" type="block" corresp="code_visualizacion-y-animacion-de-tablas-historicas-con-R_12.txt"></code></pre>
<p>Existen muchas formas de hacer m&#225;s amigable la visualizaci&#243;n de tablas de contingencia utilizando paquetes disponibles en CRAN. Una que, sin ser complicada, te dar&#225; unos cuadros mejorados est&#233;ticamente es <link target="https://cran.r-project.org/web/packages/kableExtra/vignettes/awesome_table_in_html.html">kableExtra</link><ref type="footnotemark" target="#8"/>. El procedimiento tiene dos partes. Primero, debes darle formato html a la tabla con la funci&#243;n <code type="inline">kable()</code> y almacenarla en una variable (por ejemplo <code type="inline">at59k</code>). Luego,  debes usar ese objeto como argumento de la funci&#243;n <code type="inline">kable_styling()</code>, lo que te permitir&#225; visualizar la tabla y manejar varios atributos de estilo, tales como el tama&#241;o y color de la fuente tipogr&#225;fica. Dicho esto, prueba instalar, cargar y probar ese paquete, y aprovechar de agregar un t&#237;tulo a tu tabla con el argumento <code type="inline">caption</code>:</p>
<pre><code class="language-R" xml:id="code_visualizacion-y-animacion-de-tablas-historicas-con-R_13" type="block" corresp="code_visualizacion-y-animacion-de-tablas-historicas-con-R_13.txt"></code></pre>
<p>El resultado aparecer&#225; en <emph>Viewer</emph> y tendr&#225;s la posibilidad de guardarlo como imagen o como c&#243;digo html, por medio de la pesta&#241;a <emph>Export</emph>.</p>
<figure><desc>Figura 3. La misma tabla de contingencia creada anteriormente, pero con el formato dado por el paquete kableExtra.</desc><graphic url="visualizacion-y-animacion-de-tablas-historicas-con-R3.png"/></figure>
</div><div n="1"><head>Visualizando tablas con ggplot2</head>
<p>Como te hemos mostrado con las tablas generadas en esta lecci&#243;n, R se destaca por su capacidad para ilustrar conjuntos de datos. El paquete <link target="https://ggplot2.tidyverse.org/">ggplot2</link><ref type="footnotemark" target="#9"/> es uno de los m&#225;s usados para hacer gr&#225;ficas por quienes utilizan este lenguaje de programaci&#243;n. Tiene una l&#243;gica inspirada en la denominada gram&#225;tica de los gr&#225;ficos (<emph>grammar of graphics</emph>)<ref type="footnotemark" target="#10"/>, la que consiste en el uso de capas o <emph>layers</emph>, que se ajustan seg&#250;n determinados par&#225;metros. Un gr&#225;fico es la combinaci&#243;n de las capas, donde cada una cumple una funci&#243;n determinada sobre los datos, sus aspectos est&#233;ticos (tama&#241;o, forma, color, etc.), los objetos geom&#233;tricos que van a representar los datos (puntos, l&#237;neas, pol&#237;gonos, &#225;reas, etc.). Estas tres capas (datos, par&#225;metros est&#233;ticos y representaci&#243;n geom&#233;trica) son esenciales, es decir, no pueden faltar. Opcionalmente, es posible modificar los valores por defecto de otras capas, que te permitir&#225;n facetar los datos en subgrupos, modificar el tipo de coordenadas, usar funciones estad&#237;sticas y modificar la apariencia general del gr&#225;fico. El paquete <emph>ggplot2</emph> est&#225; incluido en el Tidyverse y se carga cuando ejecutas <code type="inline">library(tidyverse)</code>, por lo tanto, no necesitas realizar ninguna instalaci&#243;n adicional.</p>
<p>En t&#233;rminos abstractos, una sentencia b&#225;sica de esta gram&#225;tica de gr&#225;ficos tiene la siguiente estructura: <code type="inline">ggplot(datos, variables) + funci&#243;n geom&#233;trica</code>. Los datos corresponden al objeto de datos que contiene las variables que queremos visualizar y que para <emph>ggplot2</emph> debe estar en formato <emph>data frame</emph>. Las variables se interpretan aqu&#237; como los par&#225;metros est&#233;ticos (<code type="inline">aes</code>) en que ser&#225;n representadas las columnas elegidas (por ejemplo, posici&#243;n en los ejes x e y, tama&#241;o, color). La funci&#243;n geom&#233;trica (<code type="inline">geom</code>) nos permite elegir el objeto visual con el que se representar&#225;n los datos. Como es una l&#243;gica de capas, el signo <code type="inline">+</code> permite ir agregando todas las que consideres necesarias para que tu gr&#225;fico incluya los elementos que consideres relevante.</p>
<p>Si deseas ver gr&#225;ficamente la tabla de contingencia que construiste anteriormente, puedes empezar haciendo la equivalencia de un atentado = un punto en el plano, a lo que corresponder&#237;a la sentencia m&#237;nima:</p>
<pre><code class="language-R" xml:id="code_visualizacion-y-animacion-de-tablas-historicas-con-R_14" type="block" corresp="code_visualizacion-y-animacion-de-tablas-historicas-con-R_14.txt"></code></pre>
<p>Con el c&#243;digo anterior obtendr&#225;s un resultado similar al de la Figura 4.</p>
<figure><desc>Figura 4. Gr&#225;fico de puntos que muestra el cruce de las variables objeto y ciudad.</desc><graphic url="visualizacion-y-animacion-de-tablas-historicas-con-R4.png"/></figure>
<p>Sin embargo, debe reconocerse que la acumulaci&#243;n de puntos, uno sobre otro, en una misma coordenada (fen&#243;meno conocido como <emph>overplotting</emph>), da como resultado una visualizaci&#243;n muy poco aprovechable, ya que, a diferencia de la tabla, no logra representar las frecuencias. Solo muestra la existencia de cruces de variables, no cu&#225;ntas veces ocurren. En casos como este, es recomendable reemplazar la funci&#243;n <code type="inline">geom_point()</code> por otra que contabilice el n&#250;mero de ocurrencias de cada combinaci&#243;n, para obtener una imagen que te d&#233; una pista r&#225;pida sobre las variaciones en la frecuencia de los atentados. Para ello est&#225; disponible <code type="inline">geom_count()</code>, que adem&#225;s del efecto visual, a&#241;ade al gr&#225;fico una escala de frecuencias.</p>
<p>Si te interesa, adem&#225;s, enriquecer la visualizaci&#243;n mediante la adici&#243;n de etiquetas al gr&#225;fico (ponerle un t&#237;tulo, cambiar los nombres de las variables en los ejes, etc&#233;tera), puedes agregar una capa adicional con la funci&#243;n <code type="inline">labs()</code>. Incluso, puedes cambiar la apariencia general si agregas una capa con alguna de las variantes que te proveen las funciones <code type="inline">theme_()</code>, que permiten controlar los elementos del gr&#225;fico que no son datos. Obtendr&#225;s un resultado similar al de la Figura 5.</p>
<pre><code class="language-R" xml:id="code_visualizacion-y-animacion-de-tablas-historicas-con-R_15" type="block" corresp="code_visualizacion-y-animacion-de-tablas-historicas-con-R_15.txt"></code></pre>
<figure><desc>Figura 5. Gr&#225;fico de puntos que representa la frecuencia de atentados, seg&#250;n objeto y ciudad. El tama&#241;o de los puntos depende del recuento de combinaciones entre objeto del atentado y ciudad. Se advierte que las ciudades de Avellaneda y La Plata concentran la mayor cantidad de atentados, y que en la mayor&#237;a de estos se utilizaron explosivos.</desc><graphic url="visualizacion-y-animacion-de-tablas-historicas-con-R5.png"/></figure>
<p>Para almacenar el gr&#225;fico en un archivo, cuentas con la funci&#243;n <code type="inline">ggsave()</code>, que guardar&#225; tu imagen en tu directorio de trabajo:</p>
<pre><code class="language-R" xml:id="code_visualizacion-y-animacion-de-tablas-historicas-con-R_16" type="block" corresp="code_visualizacion-y-animacion-de-tablas-historicas-con-R_16.txt"></code></pre>
<p>Otra forma de aprovechar las ventajas de visualizaci&#243;n que te da R y evitar la superposici&#243;n de puntos, es utilizando la propiedad <emph>jitter</emph>, que afecta la posici&#243;n de los mismos. La funci&#243;n gr&#225;fica <code type="inline">geom_jitter()</code> te permite agregar una peque&#241;a variaci&#243;n aleatoria a la ubicaci&#243;n de cada punto; esto es muy &#250;til si trabajas posiciones discretas y conjuntos de datos peque&#241;os. Para explorar otras capacidades est&#233;ticas, prueba, por ejemplo, aplicar como par&#225;metro que el color de los puntos sea diferente seg&#250;n la ciudad, mediante el argumento <code type="inline">colour</code>. Como el argumento debe estar en formato num&#233;rico, debes convertirlo con <code type="inline">as.numeric()</code>. Adem&#225;s de establecer la coloraci&#243;n, tienes la posibilidad de manipular el tama&#241;o de los puntos mediante el argumento <code type="inline">size</code>, su transparencia con <code type="inline">alpha</code> y la distancia interpuntos vertical u horizontal con <code type="inline">width</code> o <code type="inline">height</code>. Obtendr&#225;s un gr&#225;fico similar al de la Figura 6.</p>
<pre><code class="language-R" xml:id="code_visualizacion-y-animacion-de-tablas-historicas-con-R_17" type="block" corresp="code_visualizacion-y-animacion-de-tablas-historicas-con-R_17.txt"></code></pre>
<figure><desc>Figura 6. Gr&#225;fico que resulta de aplicar la funci&#243;n geom_jitter(). Permite visualizar la misma tendencia que el gr&#225;fico anterior (mayor cantidad de explosivos en Avellaneda y La Plata), pero asignando un punto por cada combinaci&#243;n objeto/ciudad evitando su superposici&#243;n.</desc><graphic url="visualizacion-y-animacion-de-tablas-historicas-con-R6.png"/></figure>
</div><div n="1"><head>Animando la visualizaci&#243;n de los datos con gganimate</head>
<p>Si bien existen distintos paquetes para animar visualizaciones en R, te invitamos a hacerlo con <link target="https://gganimate.com/">gganimate</link><ref type="footnotemark" target="#11"/>, que es una extensi&#243;n del paquete <emph>ggplot2</emph> que te permitir&#225; crear una animaci&#243;n a partir de un gr&#225;fico <emph>ggplot</emph> y ver de forma din&#225;mica c&#243;mo tus datos evolucionan seg&#250;n estados o en el tiempo. Las funciones centrales de <emph>gganimate</emph> son las para transiciones (<code type="inline">transition_*()</code>), que permiten especificar c&#243;mo los datos deben interpretarse en t&#233;rminos de la su animaci&#243;n, es decir, seg&#250;n qu&#233; criterio se crear&#225;n los cuadros (<emph>frames</emph>) que se animar&#225;n.</p>
<p>Para instalar y activar el paquete puedes utilizar el c&#243;digo que se presenta a continuaci&#243;n. Si est&#225;s trabajando en Mac, te sugerimos instalar tambi&#233;n la &#250;ltima versi&#243;n del paquete <emph>gifski</emph>. Algunas personas han reportado problemas al generar las animaciones cuando utilizan una versi&#243;n anterior a la 0.8.6.</p>
<pre><code class="language-R" xml:id="code_visualizacion-y-animacion-de-tablas-historicas-con-R_18" type="block" corresp="code_visualizacion-y-animacion-de-tablas-historicas-con-R_18.txt"></code></pre>
<p>Si deseas generar una animaci&#243;n que represente la ocurrencia de atentados seg&#250;n una progresi&#243;n temporal, la funci&#243;n indicada es <code type="inline">transiton_time()</code>. El procedimiento es muy sencillo; al c&#243;digo que escribiste para hacer el gr&#225;fico le sumas esta funci&#243;n, poniendo como argumento la variable temporal, en este caso, <emph>fecha</emph>. Sin embargo, con el fin de realizar una visualizaci&#243;n m&#225;s clara de tus datos, es conveniente que al c&#243;digo le agregues un par de elementos.</p>
<p>Por un lado, como en <emph>gganimate</emph> la animaci&#243;n resultante es un conjunto de im&#225;genes (instant&#225;neas) desplegadas en serie consecutiva, cada nuevo <emph>frame</emph> -si no le indicas lo contrario- al mostrarse oculta el anterior y s&#243;lo lograr&#225;s ver puntos parpadeando. Para manejar esto, cuentas con el grupo de funciones <emph>shadow</emph>, que te deja elegir c&#243;mo se muestran los datos que ya no se corresponden con los del <emph>frame</emph> actual. En el caso de este gr&#225;fico, para que permanezcan todos los datos anteriores de fondo, es necesario utilizar <code type="inline">shadow_mark(past = TRUE)</code>, que te permite dejar visibles los cuadros ya mostrados.
Por otra parte, como puede ser bastante dif&#237;cil entender una animaci&#243;n sin ninguna indicaci&#243;n sobre el significado de cada punto temporal, <emph>gganimate</emph> te proporciona un conjunto de variables para cada fotograma (<emph>frame variables</emph>), los cuales puedes insertar en las etiquetas de los gr&#225;ficos utilizando la sintaxis propia del paquete <emph>glue</emph>, que utiliza los s&#237;mbolos <code type="inline">{}</code>. Con ello dispondr&#225;s de una serie de metadatos, seg&#250;n la variante de transici&#243;n que ensayes. Para <code type="inline">transition_time()</code> cuentas con <code type="inline">{frame_time}</code>, que te retornar&#225; el valor del argumento que procesa la funci&#243;n durante el fotograma en curso, es decir, te permitir&#225; ir viendo la fecha correspondiente. El c&#243;digo quedar&#237;a de esta manera:</p>
<pre><code class="language-R" xml:id="code_visualizacion-y-animacion-de-tablas-historicas-con-R_19" type="block" corresp="code_visualizacion-y-animacion-de-tablas-historicas-con-R_19.txt"></code></pre>
<p>Al ingresar el c&#243;digo directamente en la consola, comienza el proceso de generaci&#243;n de la animaci&#243;n, denominado <emph>rendering</emph>. Este proceso tiene una duraci&#243;n relativa, dependiendo del volumen de los datos y de tu procesado. En este caso s&#243;lo deber&#237;a tomar unos segundos, durante los cuales podr&#225;s ver una barra de progreso que te indicar&#225; cu&#225;nto falta. Cuando concluya, en la pesta&#241;a <emph>Viewer</emph> de la ventana de utilidades podr&#225;s observar la animaci&#243;n. Si presionas el &#237;cono <emph>Show in new window</emph>, se abrir&#225; un <emph>gif</emph> en tu navegador asociado por defecto, desde donde podr&#225;s almacenarlo. En caso de que te interese continuar practicando con la consola, tambi&#233;n puedes almacenarlo con la funci&#243;n <code type="inline">anim_save()</code>, que guarda la &#250;ltima animaci&#243;n realizada en tu directorio de trabajo:</p>
<pre><code class="language-R" xml:id="code_visualizacion-y-animacion-de-tablas-historicas-con-R_20" type="block" corresp="code_visualizacion-y-animacion-de-tablas-historicas-con-R_20.txt"></code></pre>
<p>Para poder explorar m&#225;s posibilidades del paquete <emph>gganimate</emph>, la sugerencia es que asignes el bloque de c&#243;digo para generar el gr&#225;fico a un objeto. Esto te dar&#225; la posibilidad de manejar par&#225;metros como la velocidad y las pausas en la animaci&#243;n por medio de la funci&#243;n <code type="inline">animate()</code>. Con ella podr&#225;s ajustar tambi&#233;n la cantidad total de <emph>frames</emph>, la duraci&#243;n total y los <emph>frames</emph> por segundo. Para ensayarlo, dale a <code type="inline">fps</code> un par&#225;metro de 5 cuadros por segundo y a&#241;ade una pausa final de 15 segundos con <code type="inline">end_pause</code>. Con ello obtendr&#225;s una animaci&#243;n similar a la Figura 7.</p>
<pre><code class="language-R" xml:id="code_visualizacion-y-animacion-de-tablas-historicas-con-R_21" type="block" corresp="code_visualizacion-y-animacion-de-tablas-historicas-con-R_21.txt"></code></pre>
<figure><desc>Figura 7. Versi&#243;n animada del gr&#225;fico creado con la funci&#243;n geom_jitter.</desc><graphic url="visualizacion-y-animacion-de-tablas-historicas-con-R7.gif"/></figure>
<p>A esta altura y con estos resultados, puedes considerar que has realizado un an&#225;lisis exploratorio de tus datos y est&#225;s en condiciones de plantear hip&#243;tesis al respecto. En el caso trabajado, y si te dedicas a la historia de las luchas sociales y pol&#237;ticas en Argentina contempor&#225;nea, las tablas de contingencia y los gr&#225;ficos est&#225;ticos trabajadas en esta lecci&#243;n, por ejemplo, te permiten encontrar similitudes entre Avellaneda y La Plata, tanto entre las frecuencias de los atentados, como en su tipo (en t&#233;rminos del objeto utilizado). Adem&#225;s, disponemos del ritmo temporal (intensidad) de los mismos, lo que te invita a enfocar sobre posibles patrones o relaciones de corte m&#225;s hist&#243;rico, entre casos que no suelen estar conectados en las investigaciones, por su diferente estructura socio-econ&#243;mica para la &#233;poca.</p>
</div><div n="1"><head>Conclusi&#243;n</head>
<p>Esta lecci&#243;n busc&#243; darte una idea general de las diversas tareas que deber&#237;as seguir para preparar y llevar adelante un primer an&#225;lisis exploratorio de datos sobre alguna serie de documentos hist&#243;ricos. Este procedimiento te permite realizar c&#225;lculos b&#225;sicos con esos datos y analizarlos visualmente para pensar, generar preguntas e hipotetizar a partir de ellos.</p>
<p>En esta lecci&#243;n te hemos ofrecido solo un punto de partida para el an&#225;lisis de tus tablas hist&#243;ricas. Como desaf&#237;o, y a partir de lo que aprendiste en este tutorial, te proponemos que contin&#250;es probando otros cruces de variables. Finalmente, te invitamos a que te animes a descubrir por ti mismo la potencia de <emph>ggplot</emph> y <emph>gganimate</emph>, explorando <link target="https://gganimate.com/index.html">la documentaci&#243;n</link> de este &#250;ltimo paquete para conocer otras opciones disponibles.</p>
</div><div n="1"><head>Notas</head>
<p><note id="1"> Roderick Floud, <emph>M&#233;todos cuantitativos para historiadores</emph> (Madrid: Alianza, 1983).</note></p>
<p><note id="2"> Puedes encontrar una detallada referencia del archivo en el sitio de la Comisi&#243;n Provincial por la Memoria de la provincia de Buenos Aires: <link target="https://www.comisionporlamemoria.org/extra/archivo/cuadroclasificacion/">https://www.comisionporlamemoria.org/extra/archivo/cuadroclasificacion/</link></note></p>
<p><note id="3">Los fundamentos y significado de la noci&#243;n de "datos ordenados" puedes encontrarlos en: Hadley Wickham, "Tidy Data", <emph>Journal of Statistical Software</emph>, Volume 59, Issue 10, 2019,https://www.jstatsoft.org/index.php/jss/article/view/v059i10/v59i10.pdf)</note></p>
<p><note id="4"> Hadley Wickham and Jennifer Bryan, "readxl: Read Excel Files. R package version 1.3.1", 2019, <link target="https://CRAN.R-project.org/package=readxl">https://CRAN.R-project.org/package=readxl</link></note></p>
<p><note id="5"> Hadley Wickham et al.,"Welcome to the tidyverse", <emph>Journal of Open Source Software</emph>, 4(43), 1686 (2019): 1-5, <link target="https://doi.org/10.21105/joss.01686">https://doi.org/10.21105/joss.01686</link></note></p>
<p><note id="6"> Lionel Henry and Hadley Wickham, "purrr: Functional Programming Tools. R package version 0.3.4", 2020, <link target="https://CRAN.R-project.org/package=purrr">https://CRAN.R-project.org/package=purrr</link></note></p>
<p><note id="7"> Hadley Wickham, Romain Fran&#231;ois, Lionel Henry and Kirill M&#252;ller, "dplyr: A Grammar of Data Manipulation. R package version 1.0.6", CRAN R Project, 2021, <link target="https://CRAN.R-project.org/package=dplyr">https://CRAN.R-project.org/package=dplyr</link></note></p>
<p><note id="8"> Hao Zhu, "kableExtra: Construct Complex Table with 'kable' and Pipe Syntax. R package version 1.3.2", 2021, <link target="https://CRAN.R-project.org/package=kableExtra">https://CRAN.R-project.org/package=kableExtra</link></note></p>
<p><note id="9"> Hadley Wickham, "ggplot2: Create Elegant Data Visualisations Using the Grammar of Graphics", Springer-Verlag New York, 2016, <link target="https://ggplot2.tidyverse.org">https://ggplot2.tidyverse.org</link></note></p>
<p><note id="10"> El referente del concepto es Leland Wilkinson, con su obra <emph>The Grammar of Graphics</emph>, de la que puedes consultar algunas p&#225;ginas en: <link target="https://www.springer.com/gp/book/9780387245447">https://www.springer.com/gp/book/9780387245447</link></note></p>
<p><note id="11"> Thomas Lin Pedersen and David Robinson, "gganimate: A Grammar of Animated Graphics. R package version 1.0.7", 2020, <link target="https://CRAN.R-project.org/package=gganimate">https://CRAN.R-project.org/package=gganimate</link></note></p>
</div></div>
    </body>
  </text>
</TEI>
