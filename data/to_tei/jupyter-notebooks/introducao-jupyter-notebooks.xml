<TEI xmlns="https://tei-c.org/ns/1-0/">
  <metadata>
  <title>Introdu&#231;&#227;o ao Jupyter Notebook</title>
  <slug>introducao-jupyter-notebooks</slug>
  <original>jupyter-notebooks</original>
  <layout>lesson</layout>
  <collection>lessons</collection>
  <date>2019-12-08</date>
  <translation_date>2023-06-02</translation_date>
  <authors>Quinn Dombrowski,Tassie Gniady,David Kloster</authors>
  <reviewers>Patrick Burns,Jeri Wieringa</reviewers>
  <editors>Brandon Walsh</editors>
  <translator>V&#226;nia Rosa</translator>
  <translation-editor>Jimmy Medeiros</translation-editor>
  <translation-reviewer>Juliana Marques,Caio Mello</translation-reviewer>
  <review-ticket>https://github.com/programminghistorian/ph-submissions/issues/431</review-ticket>
  <difficulty>1</difficulty>
  <activity>presenting</activity>
  <topics>python,website</topics>
  <abstract>Jupyter Notebook fornece um ambiente onde voc&#234; pode trabalhar com facilidade o seu c&#243;digo na linguagem Python. Esta li&#231;&#227;o descreve como instalar o software Jupyter Notebook, como executar e criar ficheiros para o Jupyter Notebook.</abstract>
  <avatar_alt>O planeta J&#250;piter</avatar_alt>
  <doi>10.46430/phpt0043</doi>
</metadata>
  <text>
    <body>
      <div n="2"><head>Introdu&#231;&#227;o</head>
<p>Quando a computa&#231;&#227;o &#233; uma parte intr&#237;nseca de sua pr&#225;tica de pesquisa, como voc&#234; publica um argumento acad&#234;mico de forma que torne o c&#243;digo t&#227;o acess&#237;vel e leg&#237;vel como a prosa que o acompanha? Na &#225;rea das humanidades, a publica&#231;&#227;o de uma pesquisa assume principalmente a forma de prosa escrita, artigo ou monografia. Embora as editoras estejam cada vez mais abertas &#224; inclus&#227;o de c&#243;digos suplementares ou outros materiais, tal arranjo inerentemente os relega a um estatuto secund&#225;rio relativo ao texto escrito.</p>
<p>E se voc&#234; pudesse publicar sua pesquisa em um formato que desse um peso equilibrado entre a prosa e o c&#243;digo? A realidade das atuais diretrizes de publica&#231;&#227;o acad&#234;mica significa que a separa&#231;&#227;o for&#231;osa do seu c&#243;digo e da argumenta&#231;&#227;o pode ser uma necessidade, e sua reunifica&#231;&#227;o pode ser imposs&#237;vel sem que se navegue por numerosos obst&#225;culos. Atualmente o c&#243;digo &#233; tipicamente publicado em separado no GitHub ou em outro reposit&#243;rio, caso no qual os leitores t&#234;m que procurar uma nota de rodap&#233; no texto para descobrir quais scripts est&#227;o sendo referenciados, encontrar a URL do reposit&#243;rio, acessar a URL, procurar os scripts, baix&#225;-los e tamb&#233;m os ficheiro(s) de dados associados, e ent&#227;o executar os c&#243;digos. No entanto, se voc&#234; tiver os direitos e permiss&#245;es necess&#225;rios para republicar o texto de sua pesquisa em outro formato, o Jupyter Notebook fornece um ambiente onde c&#243;digo e prosa podem ser justapostos e apresentados com igual peso e valor.</p>
<p>Os Jupyter Notebooks t&#234;m visto uma ado&#231;&#227;o entusi&#225;stica na comunidade de ci&#234;ncia de dados, a ponto de cada vez mais substituir o Microsoft Word como um ambiente padr&#227;o de escrita da pesquisa. Dentro da literatura de humanidades digitais, pode-se encontrar refer&#234;ncia a Jupyter Notebooks (separados do iPython, ou Python interativo, notebooks em 2014) desde 2015.</p>
<p>Os Jupyter Notebooks tamb&#233;m ganharam for&#231;a nas humanidades digitais como uma ferramenta pedag&#243;gica. Diversos tutoriais do Programming Historian, como <link target="/en/lessons/text-mining-with-extracted-features">Minera&#231;&#227;o de texto em Python atrav&#233;s do leitor de recursos HTRC</link>, e <link target="/pt/licoes/extrair-paginas-ilustradas-com-python#jupyter-notebooks">Extraindo p&#225;ginas ilustradas de bibliotecas digitais com python</link>, assim como outros materiais pedag&#243;gicos para oficinas fazem refer&#234;ncia &#224; coloca&#231;&#227;o de c&#243;digo em um Jupyter Notebook ou ao uso do Jupyter Notebook para orientar os estudantes, permitindo que eles remixem e editem o c&#243;digo livremente. O formato do notebook &#233; ideal para o ensino, especialmente quando os estudantes t&#234;m diferentes n&#237;veis de profici&#234;ncia t&#233;cnica e de conforto com escrita e edi&#231;&#227;o dos c&#243;digos.</p>
<p>O objetivo dos Jupyter Notebooks &#233; fornecer uma interface mais acess&#237;vel para o c&#243;digo usado em pesquisa ou pr&#225;ticas pedag&#243;gicas com suporte digital. Ferramentas como os Jupyter Notebook s&#227;o menos significativas para aprender ou ensinar no v&#225;cuo, porque os Jupyter Notebooks em si n&#227;o fazem nada para promover diretamente a pesquisa ou a pedagogia. Antes de come&#231;ar esta li&#231;&#227;o, pense no que voc&#234; quer obter usando Jupyter Notebooks. Deseja organizar o fluxo de trabalho do seu projeto? Voc&#234; quer trabalhar analisando seus dados, acompanhando as coisas que voc&#234; tenta ao longo do caminho? Voc&#234; quer que os leitores da sua pesquisa possam seguir os lados te&#243;ricos e t&#233;cnicos do seu argumento sem alternar entre um PDF e uma pasta de scripts? Quer ministrar oficinas de programa&#231;&#227;o mais acess&#237;veis aos participantes com uma gama de conhecimentos t&#233;cnicos? Voc&#234; quer usar ou adaptar notebooks que outras pessoas escreveram? Tenha seu objetivo em mente enquanto voc&#234; trabalha nesta li&#231;&#227;o. Dependendo de como voc&#234; imagina usar Jupyter Notebooks, voc&#234; pode ser capaz de pular se&#231;&#245;es que s&#227;o mais aplic&#225;veis em outro contexto.</p>
</div>
      <div n="2"><head>Metas de li&#231;&#227;o</head>
<p>Nesta li&#231;&#227;o voc&#234; aprender&#225;:</p>
<ul>
<li>
<p>O que s&#227;o Jupyter Notebooks</p>
</li>
<li>
<p>Como instalar, configurar e usar o pacote de software do Jupyter Notebook</p>
</li>
<li>
<p>Quando os cadernos podem ser &#250;teis em pesquisas e contextos pedag&#243;gicos</p>
</li>
</ul>
<p>Para esta li&#231;&#227;o, vamos trabalhar em um cen&#225;rio de uso de Jupyter Notebooks para analisar dados e, em seguida, adaptar esse mesmo notebook e dados para uso em sala de aula. A aula tamb&#233;m abordar&#225; temas mais avan&#231;ados relacionados aos Jupyter Notebooks, tais como:</p>
<ul>
<li>
<p>Usando Jupyter Notebook para linguagens de programa&#231;&#227;o que n&#227;o sejam Python</p>
</li>
<li>
<p>Convertendo o c&#243;digo Python existente em Jupyter Notebooks</p>
</li>
<li>
<p>Usando Jupyter Notebooks para ampliar a capacidade computacional em ambientes como clusters de computa&#231;&#227;o de alto desempenho</p>
</li>
</ul>
</div>
      <div n="2"><head>Pr&#233;-requisitos</head>
<p>Esta li&#231;&#227;o &#233; adequada para iniciantes intr&#233;pidos, assumindo pouca experi&#234;ncia t&#233;cnica anterior.</p>
<p>Na verdade, o Jupyter Notebook &#233; um &#243;timo recurso para pessoas que est&#227;o aprendendo a escrever c&#243;digo.</p>
<p>Dependendo do notebook que voc&#234; quer executar, voc&#234; pode precisar <link target="/pt/licoes/instalacao-modulos-python-pip">instalar alguns m&#243;dulos Python com pip</link>, que assume alguma familiaridade com a linha de comando (para <link target="/en/lessons/intro-to-powershell">windows aqui</link>, ou <link target="/en/lessons/intro-to-bash">Mac/Linux aqui</link> (em ingl&#234;s)).</p>
<p>A li&#231;&#227;o &#233; escrita usando o Jupyter Notebook 6.0, mas a interface do usu&#225;rio e a funcionalidade do software tem sido bastante consistente entre as vers&#245;es.</p>
</div>
      <div n="2"><head>Computa&#231;&#227;o Letrada</head>
<p>A rela&#231;&#227;o entre c&#243;digo leg&#237;vel por computador e texto leg&#237;vel por humanos ganhou visibilidade dentro da ci&#234;ncia da computa&#231;&#227;o na d&#233;cada de 1970, quando Donald Knuth prop&#244;s o paradigma da "programa&#231;&#227;o letrada" (ou &#8220;programa&#231;&#227;o alfabetizada&#8221;). Em vez de organizar o c&#243;digo de acordo com os requisitos que privilegiam a execu&#231;&#227;o do c&#243;digo pelo computador, a programa&#231;&#227;o letrada trata um programa como literatura compreens&#237;vel aos seres humanos, priorizando o pr&#243;prio processo de pensamento do programador. A programa&#231;&#227;o letrada projetada por Knuth assume a forma de prosa escrita, com c&#243;digo acion&#225;vel por computador incorporado em macros (um formato abreviado para escrever c&#243;digo). Ferramentas de programa&#231;&#227;o letrada s&#227;o usadas para gerar duas sa&#237;das do programa letrado: c&#243;digo "emaranhado" que pode ser executado pelo computador e documenta&#231;&#227;o formatada "tecida".<ref type="footnotemark" target="#1"/></p>
<p>Fernando P&#233;rez, o criador do ambiente de programa&#231;&#227;o iPython que acabou se tornando o Projeto Jupyter, cunhou o termo computa&#231;&#227;o letrada para o modelo usado pelos Jupyter Notebooks:</p>
<blockquote>
<p>Um ambiente de computa&#231;&#227;o letrado &#233; aquele que permite aos usu&#225;rios n&#227;o apenas executar comandos, mas tamb&#233;m armazenar os resultados desses comandos em um formato de documento liter&#225;rio, juntamente com figuras e com texto em formato livre que pode incluir express&#245;es matem&#225;ticas formatadas. Na pr&#225;tica, ele pode ser visto como uma mistura de um ambiente de linha de comando, como o shell Unix, com um processador de texto, uma vez que os documentos resultantes podem ser lidos como texto, mas cont&#234;m blocos de c&#243;digo que foram executados pelo sistema computacional subjacente.<ref type="footnotemark" target="#2"/></p>
</blockquote>
<p>Jupyter n&#227;o &#233; nem o primeiro e nem o &#250;nico exemplo de cadernos computacionais. J&#225; na d&#233;cada de 1980, interfaces de notebook estavam dispon&#237;veis atrav&#233;s de softwares como Wolfram Mathematica e MATLAB. Em 2013, St&#233;fan Sinclair e Geoffrey Rockwell propuseram "cadernos Voyant" baseados no modelo de Mathematica, que exporia algumas das suposi&#231;&#245;es que sustentam as <link target="https://perma.cc/9M5K-JWU7">Ferramentas Voyant</link> e as tornaram configur&#225;veis pelo usu&#225;rio.<ref type="footnotemark" target="#3"/> Eles desenvolveram ainda esse conceito em <link target="https://perma.cc/53HW-GGSJ">A Arte da An&#225;lise de Texto Liter&#225;rio Cadernos Spyral</link>.</p>
<p>Jupyter ganhou for&#231;a em muitos campos como um ambiente de c&#243;digo aberto compat&#237;vel com in&#250;meras linguagens de programa&#231;&#227;o. O nome Jupyter &#233; uma refer&#234;ncia &#224;s tr&#234;s linguagens principais suportadas pelo projeto (Julia, Python e R), mas <link target="https://perma.cc/B448-XMJQ">n&#250;cleos est&#227;o dispon&#237;veis que tornam o Jupyter compat&#237;vel com dezenas de idiomas</link>, incluindo Ruby, PHP, Javascript, SQL e Node.js. Pode n&#227;o fazer sentido implementar projetos em todas essas l&#237;nguas usando Jupyter Notebooks (por exemplo, Omeka n&#227;o permitir&#225; que voc&#234; instale um plugin escrito como um Jupyter Notebook), mas o ambiente Jupyter ainda pode ser valioso para documentar c&#243;digos, ensinar linguagens de programa&#231;&#227;o e fornecer aos alunos um espa&#231;o onde eles podem facilmente experimentar com exemplos fornecidos.</p>
</div>
      <div n="2"><head>Instalando o Jupyter Notebooks</head>
<p>Desde o final de 2019, existem dois grandes ambientes que voc&#234; pode usar para executar Jupyter Notebooks: O Jupyter Notebook (n&#227;o confundir com os pr&#243;prios ficheiro(s) do Jupyter Notebook, que possuem uma extens&#227;o <code type="inline">.ipynb</code>), e o mais novo Jupyter Lab. O Jupyter Notebook &#233; amplamente usado e bem documentado, e fornece um navegador simples de ficheiro(s), juntamente com o ambiente para criar, editar e executar os notebooks. Jupyter Lab &#233; mais complexo, com um ambiente de usu&#225;rio mais parecido com um Ambiente de Desenvolvimento Integrado (discutido em tutoriais anteriores do Programming Historian para <link target="/pt/licoes/instalacao-windows">Windows</link>, <link target="/pt/licoes/instalacao-mac">Mac</link> e <link target="/pt/licoes/instalacao-linux">Linux</link>). Embora o Jupyter Lab seja feito para, eventualmente, substituir o Jupyter Notebook, n&#227;o h&#225; indica&#231;&#227;o de que o Jupyter Notebook deixar&#225; de ser suportado t&#227;o cedo. Devido &#224; sua simplicidade comparativa e facilidade de uso para iniciantes, este tutorial usa o Jupyter Notebook como o software para executar ficheiro(s) de notebook. Ambos os pacotes de software est&#227;o inclu&#237;dos na Anaconda, descrita abaixo. &#201; mais f&#225;cil usar a Anaconda para instalar o Jupyter Notebook, mas se voc&#234; j&#225; tem Python instalado em seu sistema e n&#227;o quer lidar com o grande pacote Anaconda, voc&#234; pode executar <code type="inline">pip3 install jupyter</code> (para Python 3).</p>
</div>
      <div n="2"><head>Anaconda</head>
<p>Anaconda &#233; uma distribui&#231;&#227;o gratuita de c&#243;digo aberto de Python e R que vem com mais de 1.400 pacotes, o gerenciador de pacotes Conda para instala&#231;&#227;o de pacotes adicionais, e o navegador Anaconda, que permite gerenciar ambientes (por exemplo, voc&#234; pode instalar diferentes conjuntos de pacotes para diferentes projetos, para que eles n&#227;o causem conflitos uns para os outros) usando uma interface gr&#225;fica. Ap&#243;s a instala&#231;&#227;o da Anaconda, voc&#234; pode usar o navegador Anaconda para instalar novos pacotes (ou <code type="inline">conda install</code> atrav&#233;s da linha de comando), mas muitos pacotes est&#227;o dispon&#237;veis apenas atrav&#233;s de pip (ou seja, usando <code type="inline">pip install</code> atrav&#233;s da linha de comando ou em seu Jupyter Notebook).</p>
<p>Para a maioria dos prop&#243;sitos, voc&#234; deve optar pela vers&#227;o Python 3 do Anaconda, mas alguns c&#243;digos ainda podem ser escritos em Python 2. Nesta li&#231;&#227;o, voc&#234; usar&#225; Python 3. O instalador Anaconda tem mais de 500 MB, e ap&#243;s a instala&#231;&#227;o pode levar mais de 3 GB de espa&#231;o no disco r&#237;gido, por isso certifique-se de que voc&#234; tem espa&#231;o suficiente no computador e uma conex&#227;o de rede r&#225;pida antes de come&#231;ar.</p>
<div class="alert alert-warning">
Se o espa&#231;o do disco r&#237;gido &#233; uma preocupa&#231;&#227;o, voc&#234; pode empacotar um notebook para que ele possa ser executado usando recursos gratuitos de computa&#231;&#227;o em nuvem, em vez de fazer com que os usu&#225;rios instalem o Anaconda. Isso pode ser especialmente &#250;til em situa&#231;&#245;es de oficina. Veja a <link target="https://programminghistorian.org/pt/licoes/introducao-jupyter-notebooks#Usando-Jupyter-Notebook-para-ensinar)">se&#231;&#227;o abaixo</link>.
</div>
<p>Para baixar e instalar a Anaconda, acesse o <link target="https://www.anaconda.com/data-science-platform">site da Anaconda</link>. Certifique-se de ter clicado no &#237;cone do seu sistema operacional (que deve alterar o texto Anaconda [n&#250;mero da vers&#227;o] para [sistema operacional selecionado], de forma a indicar o seu sistema operacional) e, em seguida, clique no bot&#227;o Baixar na caixa para a vers&#227;o atual do Python 3. Se voc&#234; estiver no Windows, deve baixar um ficheiro <code type="inline">.exe</code>; em Mac, &#233; <code type="inline">.pkg</code>; no Linux, &#233; <code type="inline">.sh</code>.</p>
<p>Abra normalmente o ficheiro para instalar o software em seu sistema operacional. Mais detalhes de instala&#231;&#227;o est&#227;o dispon&#237;veis nos <link target="https://docs.anaconda.com/free/anaconda/install/">documentos da Anaconda</link>, incluindo como instalar a Anaconda atrav&#233;s da linha de comando em cada sistema operacional. Se o computador n&#227;o conseguir abrir o ficheiro que voc&#234; baixou, certifique-se de selecionar o sistema operacional correto antes de baixar o instalador. No Windows, n&#227;o deixe de escolher a op&#231;&#227;o de "Adicionar Anaconda &#224; PATH Variable" durante o processo de instala&#231;&#227;o, ou voc&#234; n&#227;o poder&#225; lan&#231;ar Jupyter Notebook a partir da linha de comando.</p>
</div>
      <div n="2"><head>Usando Jupyter Notebook para pesquisa</head>
<p>Esta li&#231;&#227;o descreve como voc&#234; pode inicialmente escrever um Jupyter Notebook para an&#225;lise de dados como parte de um projeto de pesquisa e, em seguida, adapt&#225;-lo para uso em sala de aula. Embora este exemplo em particular seja extra&#237;do de estudos de f&#227;s, ele se concentra na convers&#227;o de datas, que &#233; amplamente necess&#225;ria na an&#225;lise de dados hist&#243;ricos e liter&#225;rios.</p>
</div>
      <div n="2"><head>Abrindo o Jupyter Notebook</head>
<p>Supondo que voc&#234; j&#225; tenha instalado a Anaconda como descrito acima, voc&#234; pode abrir o Anaconda Navigator como qualquer outro aplicativo de software (voc&#234; pode fechar o prompt sobre a cria&#231;&#227;o de uma conta na nuvem do Anaconda; voc&#234; n&#227;o precisa de uma conta para trabalhar com o Anaconda). Na tela inicial, voc&#234; deve ver um conjunto de &#237;cones e breves sinopses sobre cada aplicativo inclu&#237;do no Anaconda.</p>
<p>Clique no bot&#227;o "Iniciar" sob o &#237;cone do Jupyter Notebook.  </p>
<figure><desc>Figura 1. Interface do Anaconda Navigator</desc><graphic url="tr-pt-introducao-jupyter-notebooks-1.png" alt="Imagem com captura de tela do interface do Anaconda Navigator"/></figure>
<p>Se voc&#234; preferir usar a linha de comando em vez do navegador Anaconda, uma vez que voc&#234; tenha o Anaconda instalado, voc&#234; deve ser capaz de abrir uma nova janela Terminal (Mac) ou Command Prompt (Win) e executar <code type="inline">jupyter notebook</code> para iniciar o navegador web com o aplicativo Jupyter Notebook. Se voc&#234; estiver usando a linha de comando para iniciar o Jupyter Notebook, preste aten&#231;&#227;o no diret&#243;rio em que voc&#234; est&#225; quando o iniciar. Essa pasta se torna o diret&#243;rio dom&#233;stico que aparecer&#225; imediatamente na interface Jupyter Notebook, conforme descrito abaixo.</p>
<p>As duas abordagens abrir&#227;o uma nova janela ou guia no seu navegador padr&#227;o com a interface Jupyter Notebook. O Jupyter Notebook &#233; baseado no navegador: voc&#234; s&#243; interage com ele atrav&#233;s do seu navegador, mesmo quando o Jupyter Notebook est&#225; sendo executado no seu pr&#243;prio computador.</p>
<div class="alert alert-warning">Se voc&#234; estiver usando notebooks que importam pacotes Python que t&#234;m depend&#234;ncias de vers&#245;es espec&#237;ficas de outros pacotes, voc&#234; deve configurar um ambiente para usar com esses notebooks, para que voc&#234; n&#227;o lide com conflitos de vers&#227;o (por exemplo, se um notebook requer a vers&#227;o 1.0 de um pacote, e outro requer a vers&#227;o 2.0). [A documenta&#231;&#227;o do Anaconda Navegador para Gerenciar Ambientes](https://perma.cc/E9TC-YMCU) (ou, se preferir usar a linha de comando, a [documenta&#231;&#227;o Conda](https://perma.cc/KHB8-U3CT)) fornece instru&#231;&#245;es passo a passo para criar, atualizar e ativar um ambiente. Para lan&#231;ar o Jupyter Notebook dentro de um ambiente espec&#237;fico, voc&#234; precisa primeiro ativar esse ambiente.</div>
</div>
      <div n="2"><head>Navegando na interface do Jupyter Notebook</head>
<p>A interface do gerenciador de ficheiro do Jupyter Notebook &#233; a principal maneira de abrir um ficheiro Jupyter Notebook (.ipynb). Se voc&#234; tentar abrir em um editor de texto simples, o notebook ser&#225; exibido como um ficheiro JSON, n&#227;o com blocos interativos de c&#243;digo. Para visualizar um notebook atrav&#233;s da interface Jupyter, voc&#234; tem que abrir o Jupyter Notebook primeiro (que ser&#225; exibido em uma janela do navegador), e abrir o ficheiro de dentro do Jupyter Notebook. Infelizmente, n&#227;o h&#225; como definir o Jupyter Notebook como o aplicativo de software padr&#227;o para abrir <code type="inline">ficheiro.ipynb</code> quando voc&#234; clica duas vezes neles.</p>
<p>Quando voc&#234; lan&#231;a o Jupyter Notebook do navegador Anaconda, ele exibe automaticamente o diret&#243;rio dom&#233;stico. Este &#233; geralmente o diret&#243;rio com seu nome de usu&#225;rio em um Mac (/Users/seu nome de usu&#225;rio). Em um PC geralmente &#233; <code type="inline">C: \</code> . Se voc&#234; abrir o Jupyter Notebook a partir da linha de comando, ele exibir&#225; o conte&#250;do da pasta em que voc&#234; estava quando o lan&#231;ou (usando a linha de comando, voc&#234; tamb&#233;m pode lan&#231;ar diretamente um notebook espec&#237;fico, por exemplo, <code type="inline">jupyter-notebook-example.ipynb</code>.)</p>
<p>Para evitar desordenar esta pasta, voc&#234; pode fazer uma nova pasta dentro deste diret&#243;rio para seus notebooks. Voc&#234; pode fazer isso na sua interface usual de gerenciamento de ficheiro(s)(Finder no Mac, ou File Explorer no Windows), ou dentro do pr&#243;prio Jupyter Notebook, j&#225; que o Jupyter Notebook, assim como o Google Drive, fornece uma interface de gerenciamento de ficheiro(s) dentro de um navegador, bem como uma interface de menu e de barra de ferramentas para a cria&#231;&#227;o de ficheiro(s). Para adicionar uma nova pasta no Jupyter Notebook, clique em Novo no canto superior direito e escolha Pasta. Isso criar&#225; uma nova pasta chamada "Pasta Sem T&#237;tulo". Para alterar o nome, clique na caixa de sele&#231;&#227;o &#224; esquerda da "Pasta Sem T&#237;tulo", em seguida, clique no bot&#227;o "Renomear" que aparece na guia "ficheiro(s)". Nomeie os notebooks da pasta. Clique nele para abrir essa pasta.</p>
</div>
      <div n="2"><head>Upload dos dados do exemplo</head>
<p>O ficheiro CSV de exemplo para esta li&#231;&#227;o &#233; um extrato de metadados de fan fiction de Harry Potter coletados do site de fanfic italiano <link target="https://efpfanfic.net">https://efpfanfic.net</link>, depois limpos usando uma combina&#231;&#227;o de <link target="/en/lessons/understanding-regular-expressions">express&#245;es regulares</link> e <link target="/pt/licoes/limpar-dados-openrefine">OpenRefine</link>. O CSV tem tr&#234;s colunas: a classifica&#231;&#227;o da hist&#243;ria (similar a uma classifica&#231;&#227;o de filme), a data que foi originalmente publicada, e a data mais recente de atualiza&#231;&#227;o. As op&#231;&#245;es de classifica&#231;&#227;o s&#227;o verde (verde), giallo (amarelo), arancione (laranja), e rosso (vermelho). A publica&#231;&#227;o e as datas atualizadas s&#227;o criadas automaticamente; quando consistente a hist&#243;ria &#233; postada no site ou atualizado, assim voc&#234; pode tom&#225;-las como consistentes.</p>
<p>Baixe o <link target="/assets/jupyter-notebooks/ph-jupyter-notebook-example.csv">ficheiro CSV</link>.</p>
<p>Dentro do navegador de ficheiro(s) Jupyter Notebook, voc&#234; deve estar dentro do diret&#243;rio de notebooks que acabou de criar. No canto superior direito, clique no bot&#227;o "Carregar" e carregue o ficheiro CSV de amostra. Ser&#225; mais f&#225;cil de acessar se estiver no mesmo diret&#243;rio do Jupyter Notebook que voc&#234; criar&#225; na pr&#243;xima etapa a fim de converter as datas.</p>
<figure><desc>Figura 2. Upload de ficheiro(s) na interface Jupyter Notebook</desc><graphic url="tr-pt-introducao-jupyter-notebooks-2.png" alt="Imagem com captura de tela sobre o upload de ficheiros no interface Jupyter Notebook"/></figure> 
<p>Observe que esta n&#227;o &#233; a &#250;nica maneira de fazer os ficheiro(s) aparecerem no gerenciador de ficheiro(s) do Jupyter Notebook. A pasta de notebooks que voc&#234; criou &#233; um diret&#243;rio regular em seu computador, e assim voc&#234; tamb&#233;m pode usar sua interface usual de gerenciamento de ficheiro(s) (por exemplo, Finder no Mac, ou File Explorer no Windows) para colocar ficheiro(s) <code type="inline">.ipynb</code> e/ou de dados neste diret&#243;rio. Os Jupyter Notebooks usam a localiza&#231;&#227;o do pr&#243;prio ficheiro do notebook (o <code type="inline">ficheiro.ipynb</code>) como o caminho de partida padr&#227;o. Para oficinas e cursos, pode fazer sentido criar uma pasta onde voc&#234; pode armazenar o notebook, qualquer imagem anexada e os dados com os quais voc&#234; vai trabalhar, todos juntos. Se tudo n&#227;o estiver na mesma pasta, voc&#234; ter&#225; que incluir o caminho ao referenci&#225;-lo ou usar o c&#243;digo Python dentro do notebook para alterar o diret&#243;rio de trabalho.</p>
</div>
      <div n="2"><head>Criando um novo notebook</head>
<p>Dentro da pasta de notebooks, crie um novo Jupyter Notebook para converter as datas para o seu projeto de pesquisa. Clique no bot&#227;o "new" no canto superior direito da interface do gerenciador de ficheiro(s) do Jupyter Notebook. Se voc&#234; acabou de instalar o Anaconda como descrito acima, sua &#250;nica op&#231;&#227;o ser&#225; criar um Jupyter Notebook usando o <emph>kernel</emph> Python 3 (o componente de backend que realmente executa o c&#243;digo escrito no notebook), mas vamos discutir abaixo como adicionar kernels para outras linguagens de programa&#231;&#227;o. Clique em "Python 3", e o Jupyter Notebook abrir&#225; uma nova guia com a interface para os pr&#243;prios Jupyter Notebooks. Por padr&#227;o, o notebook ser&#225; chamado de "Sem t&#237;tulo"; voc&#234; pode clicar nesse texto na parte superior da tela para renome&#225;-lo.</p>
<figure><desc>Figura 3. Criando um novo Jupyter Notebook</desc><graphic url="tr-pt-introducao-jupyter-notebooks-3.png" alt="Imagem com captura de tela da interface do Jupyter Notebook para criar novo ficheiro"/></figure>
</div>
      <div n="2"><head>Trabalhando em Jupyter Notebooks</head>
<p>Um notebook &#233; composto de c&#233;lulas: caixas que cont&#234;m c&#243;digo ou texto leg&#237;vel por humanos. Cada c&#233;lula tem um tipo, que pode ser selecionado a partir das op&#231;&#245;es drop-down do menu (&#8220;menu deslizante&#8221;). A op&#231;&#227;o padr&#227;o &#233; "Code"; as caixas de textos leg&#237;veis por humanos devem usar o tipo "Markdown" e precisar&#227;o ser escritas usando as conven&#231;&#245;es de formata&#231;&#227;o do Markdown. Para saber mais sobre Markdown, veja a li&#231;&#227;o do Programming Historian &#8220;<link target="/pt/licoes/introducao-ao-markdown">Introdu&#231;&#227;o ao Markdown</link>&#8221;.</p>
<p>Quando voc&#234; cria um novo Jupyter Notebook, a primeira c&#233;lula ser&#225; uma c&#233;lula de c&#243;digo. No topo da interface do Jupyter Notebook est&#225; uma barra de ferramentas com fun&#231;&#245;es que se aplicam &#224; c&#233;lula selecionada atualmente. A primeira fun&#231;&#227;o do menu deslizante &#233;, por padr&#227;o, "Code". Clique nesse menu e selecione "Markdown" (voc&#234; tamb&#233;m pode usar um atalho de teclado, <emph>esc + m</emph>, para alterar a c&#233;lula atual para Markdown, e <emph>esc + y</emph> muda de volta para uma c&#233;lula de c&#243;digo). Vamos come&#231;ar este caderno com um t&#237;tulo e uma breve explica&#231;&#227;o do que o caderno est&#225; fazendo. No momento, isso &#233; apenas para sua pr&#243;pria mem&#243;ria e refer&#234;ncia; voc&#234; n&#227;o quer investir muito em prosa e formata&#231;&#227;o nesta fase do projeto, quando voc&#234; n&#227;o sabe se voc&#234; vai acabar usando este c&#243;digo como parte de seu projeto final, ou se voc&#234; vai usar uma ferramenta ou m&#233;todo diferente. Mas ainda pode ser &#250;til incluir algumas c&#233;lulas de marca&#231;&#227;o com notas para ajud&#225;-lo a reconstruir seu processo.</p>
<p>Cole o seguinte na primeira c&#233;lula. Se a primeira linha n&#227;o aparecer com uma fonte grande (como um cabe&#231;alho), certifique-se de ter selecionado "Markdown" no  menu suspenso na parte superior.</p>
<pre><code xml:id="code_introducao-jupyter-notebooks_0" type="block" corresp="code_introducao-jupyter-notebooks_0.txt"></code></pre>
<figure><desc>Figura 4. Editando a c&#233;lula Markdown em um Jupyter Notebook</desc><graphic url="tr-pt-introducao-jupyter-notebooks-4.png" alt="Imagem com captura de tela da interface do Jupyter Notebook para editar Markdown"/></figure>
<p>Quando voc&#234; est&#225; editando uma c&#233;lula, voc&#234; pode usar <emph>Ctrl + Z</emph> (Win) ou <emph>Command + Z</emph> (Mac) para desfazer as altera&#231;&#245;es que voc&#234; fez. Cada c&#233;lula mant&#233;m seu pr&#243;prio hist&#243;rico de edi&#231;&#227;o; mesmo que voc&#234; passe para uma c&#233;lula diferente e fa&#231;a edi&#231;&#245;es l&#225;, voc&#234; pode posteriormente clicar de volta na primeira c&#233;lula e desfazer suas altera&#231;&#245;es anteriores l&#225;, sem perder as altera&#231;&#245;es realizadas para a segunda c&#233;lula.</p>
<p>Para deixar o modo de edi&#231;&#227;o e "executar" esta c&#233;lula (para uma c&#233;lula Markdown, isso n&#227;o faz nada, apenas move o cursor mais para baixo no notebook), voc&#234; pode clicar na barra de ferramentas ou pressione Ctrl+Enter (Ctrl+Return no Mac). Se voc&#234; quiser retomar a edi&#231;&#227;o mais tarde, voc&#234; pode clicar duas vezes nela ou selecionar a c&#233;lula (que mostrar&#225; uma linha azul vertical &#224; esquerda uma vez selecionada) clicando-a uma vez e, em seguida, pressionando a tecla Enter (Win) ou Return (Mac). Para deixar o modo de edi&#231;&#227;o, voc&#234; pode clicar na barra de ferramentas ou pressionar Ctrl+Enter (Ctrl+Return no Mac). Se voc&#234; quiser executar sua c&#233;lula atual e adicionar uma nova c&#233;lula (por padr&#227;o, uma c&#233;lula de c&#243;digo) imediatamente abaixo dela, voc&#234; pode pressionar Alt+Enter (Option+Enter no Mac).</p>
<p>Em seguida, voc&#234; precisa descobrir como fazer a convers&#227;o. A busca por termos relevantes pode lev&#225;-lo a essa <link target="https://perma.cc/JG6H-KZAZ">discuss&#227;o do StackOverflow</link>, e a primeira resposta envolve o uso do m&#243;dulo Python datetime. Como primeiro passo, voc&#234; precisa importar datetime, usando uma c&#233;lula de c&#243;digo. Voc&#234; tamb&#233;m sabe que o seu  ficheiro de entrada &#233; um CSV, ent&#227;o voc&#234; deve importar o m&#243;dulo csv tamb&#233;m.</p>
<p>Para adicionar uma nova c&#233;lula, clique no bot&#227;o + (mais) na barra de ferramentas (ou use o atalho do teclado <emph>esc + b</emph>). Isso criar&#225; uma nova c&#233;lula de c&#243;digo abaixo da c&#233;lula que est&#225; atualmente selecionada. Crie uma nova c&#233;lula de c&#243;digo e cole o c&#243;digo a seguir para importar um m&#243;dulo Python: </p>
<pre><code xml:id="code_introducao-jupyter-notebooks_1" type="block" corresp="code_introducao-jupyter-notebooks_1.txt"></code></pre>
<p>Pensando desde j&#225; na possibilidade de compartilhar este notebook ou parte dele, pode ser &#250;til dividir as importa&#231;&#245;es de m&#243;dulos em c&#233;lulas individuais, e colocar o c&#243;digo em si em outra c&#233;lula, para que voc&#234; possa incluir uma c&#233;lula Markdown que explique o que cada uma delas est&#225; fazendo.</p>
<p>Ambos os pacotes que voc&#234; est&#225; importando para este notebook j&#225; est&#227;o instalados como parte do Anaconda, mas existem muitos pacotes de nicho relevantes para a pesquisa (por exemplo, o <link target="https://perma.cc/Q9Q8-9TNZ">Classic Languages Toolkit, CLTK</link>, para fazer an&#225;lise de texto em l&#237;nguas hist&#243;ricas) que n&#227;o est&#227;o inclu&#237;dos com a Anaconda, e n&#227;o est&#227;o dispon&#237;veis atrav&#233;s do <emph>instalador conda</emph>. Se voc&#234; precisa de um pacote como esse, voc&#234; tem que instal&#225;-lo usando <emph>pip</emph>. Instalar pacotes de dentro do Jupyter notebook pode ser um pouco complicado, porque pode haver diferen&#231;as entre o kernel Jupyter que o notebook est&#225; usando, e outras vers&#245;es do Python que voc&#234; pode ter instalado no seu computador. Voc&#234; pode encontrar uma longa discuss&#227;o t&#233;cnica sobre esses problemas neste <link target="https://perma.cc/N6M6-ZF5G">post de blog</link>.</p>
<p>Se voc&#234; est&#225; trabalhando em um notebook que deseja compartilhar, e ele inclui pacotes menos comuns, voc&#234; pode incluir uma c&#233;lula Markdown instruindo os usu&#225;rios a instalar os pacotes com anteced&#234;ncia usando conda ou pip, ou voc&#234; pode usar:</p>
<pre><code xml:id="code_introducao-jupyter-notebooks_2" type="block" corresp="code_introducao-jupyter-notebooks_2.txt"></code></pre>
<p>para instalar algo do notebook usando conda; a sintaxe <code type="inline">!</code> indica que o c&#243;digo est&#225; executando algo da linha de comando, em vez do kernel Jupyter. Ou, se o pacote n&#227;o estiver dispon&#237;vel na conda (muitos pacotes de nicho relevantes para a pesquisa n&#227;o est&#227;o), voc&#234; pode usar <code type="inline">pip</code>:</p>
<pre><code xml:id="code_introducao-jupyter-notebooks_3" type="block" corresp="code_introducao-jupyter-notebooks_3.txt"></code></pre>
<p>Se voc&#234; n&#227;o tinha instalado o Python no computador antes de instalar o Anaconda para esta li&#231;&#227;o, talvez seja necess&#225;rio adicionar o pacote pip para poder us&#225;-lo para instalar outros pacotes. Voc&#234; pode adicion&#225;-lo atrav&#233;s da GUI (interface gr&#225;fica do usu&#225;rio) do navegador Anaconda, ou executar <code type="inline">conda install pip</code> a partir da linha de comando.</p>
<p>Voltando ao nosso exemplo, em seguida adicione uma nova c&#233;lula de c&#243;digo e cole o seguinte c&#243;digo (certifique-se de que incluiu os espa&#231;amentos):</p>
<pre><code xml:id="code_introducao-jupyter-notebooks_4" type="block" corresp="code_introducao-jupyter-notebooks_4.txt"></code></pre>
<p>Clicar no bot&#227;o 'play' na barra de ferramentas quando voc&#234; tem uma c&#233;lula de c&#243;digo selecionada executa o c&#243;digo dentro da c&#233;lula (se voc&#234; tentar executar este c&#243;digo depois de executar as declara&#231;&#245;es de importa&#231;&#227;o, ver&#225; um erro: "ValueError: time data &#8216;1/7/18&#8217; does not match format &#8216;%d/%m/%Y&#8217;". N&#227;o se preocupe, vamos depurar isso a seguir). </p>
<p>Depois de executar uma c&#233;lula de c&#243;digo, um n&#250;mero aparecer&#225; entre colchetes &#224; esquerda da c&#233;lula. Este n&#250;mero indica a ordem em que a c&#233;lula foi executada. Se voc&#234; voltar e executar o celular novamente, o n&#250;mero &#233; atualizado.</p>
<p>Se um n&#250;mero n&#227;o aparecer imediatamente ao lado da c&#233;lula, voc&#234; ver&#225; um asterisco entre os colchetes. Isso significa que a c&#233;lula de c&#243;digo n&#227;o terminou de funcionar. Isso &#233; comum para c&#243;digos computa&#231;&#227;o intensiva (por exemplo, processamento de linguagem natural) ou tarefas de longa dura&#231;&#227;o, como extra&#231;&#227;o de conte&#250;do na web. Sempre que uma c&#233;lula de c&#243;digo est&#225; sendo executada, o favicon na guia do navegador do notebook muda para uma ampulheta. Se voc&#234; quiser alterar as guias e fazer outra coisa enquanto o c&#243;digo estiver em execu&#231;&#227;o, voc&#234; pode saber que a a&#231;&#227;o anterior foi conclu&#237;da quando a ampulheta muda de volta para o &#237;cone do notebook.</p>
<figure><desc>Figura 5. Executando uma c&#233;lula de c&#243;digo em um Jupyter Notebook</desc><graphic url="tr-pt-introducao-jupyter-notebooks-5.png" alt="Imagem com captura de tela sobre a execu&#231;&#227;o de c&#243;digo no Jupyter Notebook"/></figure>
<pre><code xml:id="code_introducao-jupyter-notebooks_5" type="block" corresp="code_introducao-jupyter-notebooks_5.txt"></code></pre>
<p>Depois de executar a segunda c&#233;lula de c&#243;digo, voc&#234; ver&#225; um erro. Para descobrir o que est&#225; acontecendo, voc&#234; pode consultar a
<link target="https://perma.cc/S92Z-3QVM">documenta&#231;&#227;o para data&#231;&#227;o</link> que explica cada uma das diferentes op&#231;&#245;es de formata&#231;&#227;o. L&#225;, voc&#234; ver&#225; que a &#250;nica op&#231;&#227;o de valores para &#8220;dia&#8221; assume o uso de dois d&#237;gitos (ou seja, dias de um d&#237;gito s&#227;o prefixados com um 0). Olhando para os dados do exemplo, os meses (listados em segundo lugar nesta ordem de data) j&#225; s&#227;o acrescidos de zero, quando tem apenas um d&#237;gito, mas n&#227;o os dias. Voc&#234; tem duas op&#231;&#245;es: voc&#234; pode tentar alterar os dados, ou voc&#234; pode tentar alterar seu c&#243;digo.</p>
<p>Digamos que voc&#234; queira tentar uma abordagem diferente, mas quer deixar o que voc&#234; fez at&#233; agora, no caso de voc&#234; querer revisitar esse c&#243;digo, e talvez us&#225;-lo depois de alterar os dados. Para lembrar do que aconteceu, adicione uma c&#233;lula Markdown acima da sua segunda c&#233;lula do c&#243;digo. Clique na primeira c&#233;lula do c&#243;digo e clique no bot&#227;o mais na barra de ferramentas. Se voc&#234; clicar no bot&#227;o de adi&#231;&#227;o na barra de ferramentas depois de executar a &#250;ltima c&#233;lula de c&#243;digo, a nova c&#233;lula aparecer&#225; na parte inferior do notebook. Voc&#234; pode mov&#234;-la para onde quiser clicando no bot&#227;o de seta para cima. Certifique-se de que est&#225; no modo Markdown e cole o seguinte texto:</p>
<pre><code xml:id="code_introducao-jupyter-notebooks_6" type="block" corresp="code_introducao-jupyter-notebooks_6.txt"></code></pre>
<p>Lendo ainda mais na <link target="https://perma.cc/EN55-P57H">discuss&#227;o do StackOverflow</link>, h&#225; outra abordagem que usa uma biblioteca diferente, dateutil, que parece ser mais flex&#237;vel com os tipos de datas que ela aceita. Volte para a c&#233;lula usada para importar m&#243;dulos e edite-a para adicionar a nova biblioteca (em qualquer lugar dessa c&#233;lula, desde que cada declara&#231;&#227;o de importa&#231;&#227;o esteja em sua pr&#243;pria linha):</p>
<pre><code xml:id="code_introducao-jupyter-notebooks_7" type="block" corresp="code_introducao-jupyter-notebooks_7.txt"></code></pre>
<p>Re-execute essa c&#233;lula de c&#243;digo; note que o n&#250;mero ao lado da c&#233;lula muda na segunda vez que voc&#234; execut&#225;-lo.</p>
<p>Agora crie uma nova c&#233;lula Markdown na parte inferior do notebook e cole:</p>
<pre><code xml:id="code_introducao-jupyter-notebooks_8" type="block" corresp="code_introducao-jupyter-notebooks_8.txt"></code></pre>
<p>Abaixo dele, adicione uma nova c&#233;lula de c&#243;digo com o seguinte c&#243;digo (prestando aten&#231;&#227;o ao espa&#231;amento, de modo que o c&#243;digo seja indentado assim como voc&#234; v&#234; abaixo):</p>
<pre><code xml:id="code_introducao-jupyter-notebooks_9" type="block" corresp="code_introducao-jupyter-notebooks_9.txt"></code></pre>
<p>Execute a c&#233;lula com o c&#243;digo que voc&#234; acabou de adicionar. Pode levar mais tempo; continue esperando at&#233; que o asterisco ao lado da c&#233;lula de c&#243;digo se transforme em um n&#250;mero. O resultado deve mostrar a lista de datas de publica&#231;&#227;o, formatadas de forma diferente, com h&#237;fen em vez de barras, e com a adi&#231;&#227;o das horas, minutos e segundos (como zeros, porque as datas registradas n&#227;o incluem esses dados). &#192; primeira vista, parece que funcionou, mas se voc&#234; compar&#225;-lo mais de perto com o ficheiro de origem, voc&#234; ver&#225; que o m&#243;dulo dateutil n&#227;o est&#225; sendo consistente em como analisa as datas. Datas em que o valor do dia &#233; maior que 12 est&#227;o sendo analisadas corretamente (ele sabe que um valor maior que 12 n&#227;o pode ser um m&#234;s), mas quando o valor da data &#233; 12 ou menos, a data est&#225; sendo identificada com o m&#234;s primeiro. A primeira linha do ficheiro de origem tem a data 1/7/18, que &#233; entendida como "2018-01-07 00:00:00". Na documenta&#231;&#227;o para dateutil, voc&#234; descobrir&#225; que voc&#234; pode <link target="https://perma.cc/W54E-SP5Z">especificar <code type="inline">dayfirst=true</code></link> para corrigir isso. Edite a &#250;ltima c&#233;lula de c&#243;digo e altere a pen&#250;ltima linha para ler:</p>
<pre><code xml:id="code_introducao-jupyter-notebooks_10" type="block" corresp="code_introducao-jupyter-notebooks_10.txt"></code></pre>
<p>Quando voc&#234; executar a linha novamente, voc&#234; ver&#225; que todas as datas foram analisadas corretamente. </p>
<p>Analisar a data &#233; apenas o primeiro passo &#8211; voc&#234; ainda precisa usar o m&#243;dulo datetime para converter as datas em dias da semana.</p>
<p>Exclua a &#250;ltima linha do bloco de c&#243;digo e substitua-a pelo seguinte (certificando-se de que voc&#234; tenha o mesmo n&#237;vel de recuo da &#250;ltima linha anterior, para ambas as linhas):</p>
<pre><code xml:id="code_introducao-jupyter-notebooks_11" type="block" corresp="code_introducao-jupyter-notebooks_11.txt"></code></pre>
<p>Execute o bloco de c&#243;digos novamente. Isso deve lhe dar uma lista de dias da semana.</p>
<p>Agora que voc&#234; tem c&#243;digo para analisar e re-formatar uma data, voc&#234; precisa faz&#234;-lo para ambas as datas em cada linha do seu ficheiro de origem. Porque voc&#234; sabe que tem c&#243;digo funcionante na c&#233;lula de c&#243;digo atual, se voc&#234; n&#227;o se sentir muito confort&#225;vel com Python, voc&#234; pode querer copiar a c&#233;lula de c&#243;digo atual antes de fazer modifica&#231;&#245;es. Selecione a c&#233;lula que deseja copiar e clique no bot&#227;o copiar na barra de ferramentas; o bot&#227;o de colar ir&#225; colar a c&#233;lula abaixo de qualquer c&#233;lula atualmente selecionada. Fazer uma c&#243;pia permite que voc&#234; fa&#231;a livremente altera&#231;&#245;es no c&#243;digo, sabendo que voc&#234; sempre pode voltar facilmente para uma vers&#227;o que funciona.</p>
<p>Se voc&#234; n&#227;o quiser resolver isso por conta pr&#243;pria, voc&#234; pode copiar e colar esse c&#243;digo em uma nova c&#233;lula de c&#243;digo ou substituir a c&#233;lula de c&#243;digo atual:</p>
<pre><code xml:id="code_introducao-jupyter-notebooks_12" type="block" corresp="code_introducao-jupyter-notebooks_12.txt"></code></pre>
<p>Depois de executar este c&#243;digo, voc&#234; ter&#225; um novo ficheiro ph-jupyter-notebook-exemplo-dayofweek.csv, com seus dados no formato que voc&#234; precisa para a an&#225;lise.</p>
<p>Agora que voc&#234; tem um c&#243;digo que funciona para converter as datas do formul&#225;rio que voc&#234; tem para o formul&#225;rio que voc&#234; precisa, voc&#234; pode limpar as falsas partidas e notas para si mesmo. Voc&#234; vai querer manter o primeiro c&#243;digo com as declara&#231;&#245;es de importa&#231;&#227;o, e a primeira c&#233;lula Markdown com o t&#237;tulo e a descri&#231;&#227;o, mas voc&#234; deve excluir outras c&#233;lulas de c&#243;digo e Markdown que n&#227;o s&#227;o o seu c&#243;digo final. Para excluir uma c&#233;lula, clique nela e clique no bot&#227;o tesoura na barra de ferramentas. Se voc&#234; excluir uma c&#233;lula por engano, voc&#234; pode clicar em Editar no menu e escolher "Desfazer excluir c&#233;lulas".</p>
</div>
      <div n="2"><head>Salvando, exportando e publicando Jupyter Notebooks</head>
<p>O Jupyter salva automaticamente seu trabalho de forma peri&#243;dica, criando "pontos de verifica&#231;&#227;o". Se algo der errado com seu notebook, voc&#234; pode reverter para um ponto de verifica&#231;&#227;o anterior indo em "File", em seguida, "Revert to Checkpoint", e escolhendo um hor&#225;rio. Dito isto, ainda &#233; importante salvar seu notebook (usando o bot&#227;o de salvar), porque se voc&#234; fechar e desligar o kernel do notebook (incluindo reiniciar o kernel), os pontos de verifica&#231;&#227;o ser&#227;o perdidos.</p>
<p>Voc&#234; tamb&#233;m pode baixar o notebook (<emph>File&gt; Download as</emph>) em v&#225;rios formatos de ficheiro diferentes. Baixar o formato Notebook (<code type="inline">.ipynb</code>) &#233; &#250;til se voc&#234; quiser compartilhar seu c&#243;digo em seu formato completo de notebook. Voc&#234; tamb&#233;m pode baix&#225;-lo como c&#243;digo em qualquer linguagem em que seu notebook estiver (por exemplo, <code type="inline">.r</code> se em R ou <code type="inline">.py</code> se Python ou <code type="inline">.js</code> se JavaScript), como um  ficheiro de <code type="inline">.html</code>, como um ficheiro de marca&#231;&#227;o (<code type="inline">.md</code>) ou como um PDF via LaTeX. Se voc&#234; baix&#225;-lo como c&#243;digo, as c&#233;lulas Markdown se tornam coment&#225;rios (se voc&#234; quiser converter um ficheiro, <code type="inline">ficheiro.ipynb</code> para outro formato depois de baix&#225;-lo, voc&#234; pode usar a ferramenta <link target="https://perma.cc/6J73-KCK5">nbconvert</link>).</p>
<p>Se voc&#234; est&#225; trabalhando em um projeto de pesquisa, voc&#234; pode usar um Jupyter notebook, ou uma s&#233;rie de notebooks, ao longo do caminho para acompanhar seu fluxo de trabalho. Alguns estudiosos postam esses cadernos no GitHub, juntamente com slides ou PDFs de p&#244;steres e dados de origem (ou metadados, se os direitos autorais permitirem), para acompanhar apresenta&#231;&#245;es e palestras. O GitHub renderiza vers&#245;es n&#227;o interativas de ficheiro(s) de notebook, para que possam ser visualizados dentro de um reposit&#243;rio. Alternativamente, voc&#234; pode colar a URL de um reposit&#243;rio do GitHub que tem notebooks Jupyter em <link target="https://nbviewer.jupyter.org/">nbviewer,</link> o que &#224;s vezes pode ser uma visualiza&#231;&#227;o mais r&#225;pida e confi&#225;vel. Voc&#234; pode querer incluir uma c&#233;lula Markdown com uma cita&#231;&#227;o recomendada para o seu Jupyter notebook, e uma refer&#234;ncia para o reposit&#243;rio do GitHub onde ela est&#225; armazenada, especialmente se o seu notebook inclui c&#243;digo que outros possam reutilizar para an&#225;lises semelhantes.</p>
<p>O c&#243;digo que voc&#234; acabou de desenvolver como parte desta li&#231;&#227;o pertence a algum lugar no meio de um projeto real. Se voc&#234; estiver usando notebooks para documentar seu fluxo de trabalho, voc&#234; pode optar por adicionar a nova c&#233;lula de c&#243;digo a um notebook existente, em vez de baix&#225;-lo como um notebook separado e aut&#244;nomo. Os Jupyter notebooks podem ser particularmente &#250;teis para documentar fluxos de trabalho de projetos quando voc&#234; est&#225; trabalhando com colaboradores que s&#243; podem estar envolvidos por um curto per&#237;odo de tempo (como estagi&#225;rios de gradua&#231;&#227;o no per&#237;odo de f&#233;rias escolares). Com colaboradores de curto prazo, &#233; importante ajud&#225;-los a entender e come&#231;ar a usar os fluxos de trabalho do projeto sem muito tempo de inicia&#231;&#227;o, e os Jupyter notebooks podem definir esses fluxos de trabalho passo a passo, explicar onde e como os  ficheiro(s) s&#227;o armazenados e fornecer dicas para tutoriais externos e materiais de treinamento para ajudar os colaboradores que est&#227;o menos familiarizados com os fundamentos t&#233;cnicos do projeto a serem iniciados. Por exemplo, dois projetos que usaram Jupyter notebooks para publicar fluxos de trabalho s&#227;o o Projeto Realismo Socialista de Sarah McEleney e a <link target="https://perma.cc/JD8N-P79G">&#8220;minera&#231;&#227;o de texto da literatura infantil inglesa 1789-1914 para a representa&#231;&#227;o de insetos e outros rastejantes assustadores&#8221;</link>.</p>
<p>&#192; medida que seu projeto progride, se voc&#234; estiver publicando atrav&#233;s de canais de acesso aberto e se seus conjuntos de dados podem ser compartilhados livremente, os Jupyter notebooks podem fornecer um formato ideal para tornar o c&#243;digo que sustenta seu argumento acad&#234;mico vis&#237;vel, test&#225;vel e reutiliz&#225;vel. Embora os peri&#243;dicos e publica&#231;&#245;es possam n&#227;o aceitar os Jupyter notebooks como um formato de submiss&#227;o, voc&#234; pode desenvolver uma "vers&#227;o" do seu artigo que inclui o texto completo (como c&#233;lulas Markdown),com c&#233;lulas de c&#243;digo integradas ao fluxo da narrativa acad&#234;mica como uma ilustra&#231;&#227;o imediatamente acessada da an&#225;lise que voc&#234; est&#225; descrevendo. Voc&#234; tamb&#233;m pode incluir as c&#233;lulas de c&#243;digo que comp&#245;em os fluxos de trabalho de prepara&#231;&#227;o de dados como um ap&#234;ndice, seja no mesmo notebook, ou em um separado. Integrar o c&#243;digo com o texto de um artigo acad&#234;mico torna muito mais prov&#225;vel que os leitores realmente se envolvam com o c&#243;digo, j&#225; que eles podem simplesmente execut&#225;-lo dentro do mesmo caderno onde est&#227;o lendo o argumento. Alguns estudiosos, particularmente na Europa, tamb&#233;m postam seus cadernos no <link target="https://zenodo.org/">Zenodo</link>, um ficheiro para dados de pesquisa, independentemente do pa&#237;s de origem, financiador ou disciplina. O Zenodo suporta configura&#231;&#245;es de dados de at&#233; 50 GB (vs. o limite de tamanho de ficheiro de 100 MB no Github), e fornece DOIs para o material carregado, incluindo notebooks. Alguns estudiosos combinam arquivamento no Zenodo para sustentabilidade com a publica&#231;&#227;o no GitHub para a possibilidade de encontrar, incluindo o Zenodo DOI como parte do ficheiro readme.md no reposit&#243;rio do GitHub que inclui os notebooks. Como exemplo, o caderno de workshop <link target="https://perma.cc/6S7H-LQEA">"An&#225;lise de Dados Aplicados" por Giovanni Colavizza e Matteo Romanello para o DHOxSS 2019</link> &#233; publicado no GitHub, mas inclui <link target="https://doi.org/10.5281/zenodo.3352830">um Zenodo DOI</link>.</p>
<p>Embora a argumenta&#231;&#227;o e o c&#243;digo totalmente integrados ainda sejam dif&#237;ceis de encontrar devido &#224; falta de um local para publicar esse tipo de trabalho, os estudiosos come&#231;aram a usar os Jupyter notebooks como um passo incremental mais interativo para publica&#231;&#245;es computacionais din&#226;micas. Jos&#233; Calvo tem um exemplo de um <link target="https://perma.cc/Y9CK-CFK8">caderno acompanhando um artigo sobre estilizometria</link> (em espanhol), e Jed Dobson publicou um <link target="https://perma.cc/UDA3-467P">conjunto de cadernos</link> para acompanhar seu livro Critical Digital Humanities: The Search for a Methodology, que aborda diretamente os Jupyter Notebooks como objetos acad&#234;micos (p.39-41).</p>
</div>
      <div n="2"><head>Usando Jupyter Notebook para ensinar</head>
<p>O Jupyter Notebook &#233; uma &#243;tima ferramenta para ensinar programa&#231;&#227;o, ou para ensinar conceitos como modelagem de t&#243;picos ou vetores de palavras que envolvem programa&#231;&#227;o. A capacidade de fornecer instru&#231;&#245;es e explica&#231;&#245;es como Markdown permite que os educadores forne&#231;am notas detalhadas sobre o c&#243;digo atrav&#233;s de marca&#231;&#227;o alternada e c&#233;lulas de c&#243;digo, de modo que o texto de Markdown explique o c&#243;digo na c&#233;lula logo abaixo. Isso &#233; &#250;til para oficinas pr&#225;ticas, pois as instru&#231;&#245;es e o c&#243;digo podem ser escritos com anteced&#234;ncia. Isso permite que os participantes abram o notebook, baixem um conjunto de dados e executem o c&#243;digo conforme est&#225;. Se voc&#234; espera ministrar uma oficina onde os alunos ter&#227;o diferentes n&#237;veis de familiaridade com a programa&#231;&#227;o, voc&#234; pode configurar o notebook para ter tarefas suplementares para os alunos que se sentem confort&#225;veis em modificar o c&#243;digo. Ao mesmo tempo, mesmo os alunos que hesitam em tocar no c&#243;digo ainda poder&#227;o alcan&#231;ar o resultado principal da oficina apenas executando c&#233;lulas de c&#243;digo pr&#233;-escritas.</p>
<p>Como outra abordagem, voc&#234; tamb&#233;m pode usar Jupyter notebooks para escrever c&#243;digo na medida em que o desenvolve. Em tal oficina, os alunos podem come&#231;ar com um caderno em branco, e escrever o c&#243;digo junto com voc&#234;. As c&#233;lulas ajudam a segmentar o c&#243;digo como voc&#234; o escreve, em vez de usar um editor de texto ou IDE (Ambiente de Desenvolvimento Integrado) que n&#227;o quebra o c&#243;digo de forma t&#227;o clara e pode causar confus&#227;o, especialmente quando ensina iniciantes.</p>
<p>Voc&#234; pode usar Jupyter notebooks para tarefas em sala de aula dando instru&#231;&#245;es em Markdown e fazendo com que os alunos escrevam c&#243;digo em uma c&#233;lula em branco com base nas instru&#231;&#245;es. Dessa forma, voc&#234; pode criar uma tarefa de programa&#231;&#227;o interativa que ensina aos alunos n&#227;o apenas a sintaxe e o vocabul&#225;rio de uma linguagem de programa&#231;&#227;o, mas tamb&#233;m pode explicar as melhores pr&#225;ticas de programa&#231;&#227;o em geral.</p>
<p>Se voc&#234; j&#225; est&#225; usando Jupyter notebooks para documentar o fluxo de trabalho do seu projeto, voc&#234; pode ser capaz de reformular esses cadernos de pesquisa para uso em sala de aula, como uma maneira de trazer sua pesquisa para a sala de aula. Este <link target="/assets/jupyter-notebooks/ph-jupyter-notebook-example.ipynb">exemplo de caderno pedag&#243;gico</link> &#233; um h&#237;brido de algumas das abordagens pedag&#243;gicas descritas acima. A primeira se&#231;&#227;o do caderno destina-se a estudantes que t&#234;m pouca ou nenhuma experi&#234;ncia anterior executando o c&#243;digo; o principal resultado do aprendizado &#233; comparar o tempo necess&#225;rio para converter manualmente formatos de dados, em compara&#231;&#227;o com faz&#234;-lo com c&#243;digo. Voc&#234; poderia usar este caderno para uma sess&#227;o de laborat&#243;rio pr&#225;tica em uma introdu&#231;&#227;o &#224; humanidades digitais ou hist&#243;ria digital, onde todos os alunos instalam Anaconda e aprendem o b&#225;sico do Jupyter Notebook. Se a turma tem uma mistura de alunos sem forma&#231;&#227;o t&#233;cnica e alunos com exposi&#231;&#227;o pr&#233;via ao Python, voc&#234; pode orientar os alunos com experi&#234;ncia de programa&#231;&#227;o a trabalhar em conjunto em grupos de dois ou tr&#234;s para propor solu&#231;&#245;es para os prompts na segunda parte do notebook. Tenha em mente que se voc&#234; usar uma tarefa de classe como esta como uma forma de fazer com que os alunos de ci&#234;ncia da computa&#231;&#227;o escrevem c&#243;digo que ajude seu projeto de pesquisa, eles devem ser creditados como colaboradores e reconhecidos em publica&#231;&#245;es subsequentes vindas do projeto.<ref type="footnotemark" target="#4"/></p>
<p>Existem muitos cursos e workshops de 'Introdu&#231;&#227;o ao Python' nas Humanidades Digitais que utilizam Jupyter Notebook (incluindo <link target="https://perma.cc/ANL2-K7SM">Introdu&#231;&#227;o ao Python e Desenvolvimento web com Python para as Humanidades</link> by Thibault Cl&#233;rice, traduzido do material por Matthew Munson). O Jupyter Notebook tamb&#233;m &#233; comumente usado em oficinas de an&#225;lise de texto, como a <link target="https://perma.cc/5UZ9-25XW">oficina de vetores de palavras na DH 2018</link>, ministrada por Eun Seo Jo, Javier de la Rosa e Scott Bailey.</p>
<p>Ensinar com Jupyter Notebook nem sempre tem que envolver o processo demorado de baixar e instalar a Anaconda, especialmente se voc&#234; est&#225; imaginando ter apenas uma ou duas li&#231;&#245;es que envolvem notebooks. Se suas atividades em sala de aula com Jupyter notebooks envolvem o uso de dados de exemplo que voc&#234; j&#225; preparou, e se voc&#234; j&#225; escreveu pelo menos parte do c&#243;digo, voc&#234; pode querer explorar a execu&#231;&#227;o de Jupyter Notebooks usando recursos gratuitos de computa&#231;&#227;o em nuvem, desde que seus alunos tenham a garantia de ter conectividade confi&#225;vel com a internet em sala de aula. Rodar notebooks na nuvem tamb&#233;m fornece um ambiente consistente para todos os alunos, poupando voc&#234; de ter que negociar diferen&#231;as entre Windows e Mac, ou fornecer uma alternativa para estudantes cujos laptops n&#227;o t&#234;m espa&#231;o ou mem&#243;ria para executar Anaconda efetivamente.</p>
<p>Como as op&#231;&#245;es est&#227;o evoluindo rapidamente, &#233; melhor usar seu mecanismo de busca favorito para encontrar uma lista mais atualizada com op&#231;&#245;es de computa&#231;&#227;o em nuvem para Jupyter Notebook. Um projeto que tem visto uma absor&#231;&#227;o particular entre usu&#225;rios acad&#234;micos de notebooks &#233; o <link target="https://mybinder.org/">MyBinder</link>. Nele voc&#234; levar&#225; um reposit&#243;rio do GitHub que cont&#233;m dados relacionados a ficheiro(s) <code type="inline">jupyter.ipynb</code> (imagens incorporadas, conjuntos de dados que voc&#234; deseja usar os notebooks, etc.), as informa&#231;&#245;es sobre pacotes e depend&#234;ncias necess&#225;rios (em um <code type="inline">requisito.txt</code> ou <code type="inline">ficheiro-environment.yml</code>) e torn&#225;-lo incializ&#225;vel usando um servidor de nuvem. Uma vez que voc&#234; tenha o pacote MyBinder at&#233; o seu repo GitHub, voc&#234; pode adicionar um "crach&#225;" binder ao ficheiro readme para o repo. Quem estiver vendo o relat&#243;rio pode lan&#231;ar o notebook diretamente do seu navegador, sem ter que baixar ou instalar nada.</p>
<p>Como os dados que o notebook precisa acessar devem ser inclu&#237;dos no repo, isso n&#227;o funcionar&#225; para todas as situa&#231;&#245;es (por exemplo, se os dados n&#227;o podem ser redistribu&#237;dos legalmente no GitHub, excede o tamanho m&#225;ximo de ficheiro(s) do GitHub e n&#227;o podem ser baixados de outros lugares como parte da configura&#231;&#227;o do ambiente Binder, ou se voc&#234; quiser que as pessoas usem o notebook com seus pr&#243;prios dados), mas &#233; uma &#243;tima op&#231;&#227;o para oficinas ou aulas onde todos est&#227;o trabalhando com os mesmos dados compartilh&#225;veis.</p>
<p>Se voc&#234; quiser come&#231;ar a explorar op&#231;&#245;es de nuvem, Shawn Graham criou <link target="https://perma.cc/T25E-BFH4">alguns modelos para configurar notebooks Python e R Jupyter para uso no Binder</link>.</p>
<p>Finalmente, se voc&#234; precisa manter seus notebooks fora da nuvem (por exemplo, devido a dados sens&#237;veis ou de outra forma restritos), mas quiser fornecer um ambiente consistente para todos os seus alunos, voc&#234; pode explorar o <link target="https://perma.cc/8EH7-N22K">JupyterHub,</link> que tem sido adotado como infraestrutura t&#233;cnica central para um n&#250;mero crescente de programas de ci&#234;ncia de dados.</p>
</div>
      <div n="2"><head>Convertendo c&#243;digos Python</head>
<p>Mesmo que voc&#234; goste da ideia de usar Jupyter Notebooks, qualquer convers&#227;o de formato requer trabalho adicional. Se voc&#234; j&#225; tem seu c&#243;digo escrito como scripts Python, a convers&#227;o para Os Jupyter Notebooks &#233; bastante simples. Voc&#234; pode copiar e colar o c&#243;digo do seu ficheiro.py em uma &#250;nica c&#233;lula de c&#243;digo de um novo notebook e, em seguida, dividir a c&#233;lula de c&#243;digo em segmentos e adicionar c&#233;lulas de Markdown adicionais conforme necess&#225;rio.</p>
<p>Alternativamente, pode ser mais f&#225;cil segmentar &#224; medida que voc&#234; transfere o c&#243;digo, copiando um segmento de cada vez em uma nova c&#233;lula de c&#243;digo. Qualquer m&#233;todo funciona e &#233; uma quest&#227;o de prefer&#234;ncia pessoal.</p>
<p>H&#225; tamb&#233;m ferramentas como o <link target="https://perma.cc/5YUE-YBH7">pacote 'p2j'</link> que convertem automaticamente o c&#243;digo Python existente em notebooks Jupyter, seguindo um conjunto documentado de conven&#231;&#245;es (por exemplo, transformando coment&#225;rios em c&#233;lulas Markdown).</p>
</div>
      <div n="2"><head>Cadernos Jupyter para outras linguagens de programa&#231;&#227;o</head>
<p>Os Jupyter Notebooks permitem que voc&#234; use muitas linguagens de programa&#231;&#227;o diferentes, incluindo R, Julia, JavaScript, PHP ou Ruby. Uma lista atual de linguagens dispon&#237;veis pode ser encontrada na p&#225;gina do <link target="https://perma.cc/B448-XMJQ">Jupyter Kernels</link> GitHub.</p>
<p>Enquanto o Python &#233; suportado por padr&#227;o quando voc&#234; instala o Jupyter Notebook atrav&#233;s da Anaconda, as outras linguagens de programa&#231;&#227;o precisam ter seus n&#250;cleos de linguagens instalados antes que eles possam ser executados no Jupyter Notebook. As instru&#231;&#245;es de instala&#231;&#227;o s&#227;o diferentes para cada n&#250;cleo de linguagem, por isso &#233; melhor apenas encontrar e seguir as instru&#231;&#245;es para a sua linguagem preferida. Pelo menos para R, isso &#233; relativamente simples. A p&#225;gina Jupyter Kernels GitHub tem links para instru&#231;&#245;es para todos os kernels de linguagens dispon&#237;veis.</p>
<p>Uma vez que voc&#234; tenha o kernel para a linguagem desejada instalado, voc&#234; pode executar cadernos escritos nessa linguagem de programa&#231;&#227;o, ou voc&#234; pode criar seus pr&#243;prios cadernos que executam essa linguagem. Cada linguagem com um kernel instalado em seu computador estar&#225; dispon&#237;vel como uma op&#231;&#227;o quando voc&#234; criar um novo notebook como descrito acima.</p>
<p>Como exemplo de um notebook R, <link target="https://perma.cc/656B-U9SB">veja esta adapta&#231;&#227;o jupyter do c&#243;digo R de Andrew Piper de "Enumera&#231;&#245;es"</link>.</p>
</div>
      <div n="2"><head>Dimensionando a computa&#231;&#227;o com Jupyter Notebooks</head>
<p>Especialmente se voc&#234; &#233; novo em programar em Python, apenas conseguir qualquer coisa para trabalhar pode parecer uma vit&#243;ria. No entanto, se voc&#234; come&#231;ar a trabalhar com conjuntos de dados maiores, poder&#225; descobrir que algumas das &#8220;solu&#231;&#245;es&#8221; iniciais encontradas (como usar <code type="inline">readlines()</code> para ler um ficheiro de texto linha por linha) se tornam computacionalmente ineficientes, a ponto de causar problemas. Uma maneira de come&#231;ar a entender as inefici&#234;ncias em seu c&#243;digo &#233; adicionar <code type="inline">%%timeit</code> ao topo de uma c&#233;lula. O notebook escolher&#225; um n&#250;mero de itera&#231;&#245;es para executar o c&#243;digo, dependendo da complexidade da tarefa, imprimir&#225; o n&#250;mero de itera&#231;&#245;es e o tempo m&#233;dio. Fazer v&#225;rias itera&#231;&#245;es, em vez de apenas uma, pode ser &#250;til para contabilizar pequenos atrasos no &#226;mbito do sistema (por exemplo, se seu laptop estiver momentaneamente atolado com outros processos). Voc&#234; pode colocar <code type="inline">%timeit</code> na frente da linha. Tenha cuidado com a ordena&#231;&#227;o significativa: ordenar uma aplica&#231;&#227;o pequena de muito mais tempo para a primeira itera&#231;&#227;o do que para a segunda, depois que a lista j&#225; estiver em ordem. Em casos como a classifica&#231;&#227;o de listas em que n&#227;o faz sentido medir v&#225;rias itera&#231;&#245;es ou para tarefas de longa dura&#231;&#227;o onde pequenos atrasos no sistema n&#227;o ter&#227;o um impacto significativo, voc&#234; pode usar <code type="inline">%%time</code> no topo de uma c&#233;lula ou <code type="inline">%time</code> na frente de uma linha, que mede o tempo que uma &#250;nica execu&#231;&#227;o leva. Esses comandos fazem parte de uma fam&#237;lia de &#8220;comandos m&#225;gicos&#8221; integrados dispon&#237;veis em Jupyter Notebooks. Veja a <link target="https://perma.cc/ED9F-DNDA">documenta&#231;&#227;o do Jupyter</link> para saber de mais detalhes.</p>
<p>Ter alguma ideia de aumento do tempo previsto para ser implementado &#233; um requisito necess&#225;rio para aumentar o tempo dos clusters em uso, como no caso dos clusters de programa&#231;&#227;o de alto desempenho (HPC) financiados de forma centralizadamente, dispon&#237;veis em muitas institui&#231;&#245;es. A maioria esmagadora dos pesquisadores que usam esses recursos est&#225; nas ci&#234;ncias duras, mas geralmente qualquer membro do corpo docente pode solicitar acesso. &#201; poss&#237;vel que voc&#234; tamb&#233;m possa ter acesso a recursos de HPC regionais ou nacionais. Esses recursos de computa&#231;&#227;o podem acelerar significativamente grandes trabalhos de computa&#231;&#227;o, especialmente tarefas como modelagem 3D que podem tirar proveito de n&#243;s computacionais com poderosas unidades de processamento gr&#225;fico (GPUs). Aprender a usar clusters HPC &#233; um t&#243;pico suficientemente grande para sua pr&#243;pria li&#231;&#227;o, mas os notebooks Jupyter podem permitir que voc&#234; pegue um atalho. Alguns grupos de computa&#231;&#227;o de pesquisa oferecem maneiras mais f&#225;ceis para os pesquisadores executarem Jupyter Notebooks usando recursos de cluster HPC, e voc&#234; pode encontrar <link target="https://perma.cc/A5R4-9ZD7">v&#225;rios guias e exemplos de uso geral</link> para faz&#234;-lo. Se voc&#234; conseguir acesso aos recursos do HPC, vale a pena contatar a equipe de TI que com computa&#231;&#227;o para uma &#225;rea de e pesquisar sobre como voc&#234; pode executar o Jupyter Notebook caso voc&#234; n&#227;o lidou com sua reda&#231;&#227;o a respeito no site da sua institui&#231;&#227;o. O TI que trabalha majoritariamente com pesquisa pode se comunicar de forma brusca do que voc&#234; &#233; de forma mais pessoal, mas n&#227;o permite que a maioria dos humanos querem, porque usam a diversidade da sua base de usu&#225;rios &#233; importante para suas medidas de atua&#231;&#227;o na universidade.</p>
</div>
      <div n="2"><head>Conclus&#227;o</head>
<p>Desde a experimenta&#231;&#227;o do c&#243;digo at&#233; a documenta&#231;&#227;o de fluxos de trabalho, da pedagogia &#224; publica&#231;&#227;o acad&#234;mica, o Jupyter Notebook &#233; uma ferramenta flex&#237;vel e multiuso que pode apoiar a pesquisa digital em diversos contextos. Mesmo que voc&#234; n&#227;o tenha certeza de como exatamente voc&#234; vai us&#225;-los, &#233; bastante f&#225;cil instalar o software Jupyter Notebook e baixar e explorar notebooks existentes, ou experimentar alguns dos seus pr&#243;prios. Os Jupyter Notebooks t&#234;m uma grande promessa de fazer a ponte das facetas cr&#237;ticas e computacionais da pesquisa de humanidades digitais. Para concluir com uma cita&#231;&#227;o de Jed Dobson's <emph>Critical Digital Humanities: The Search for a Methodology</emph>.</p>
<blockquote>
<p>Notebooks s&#227;o teoria - n&#227;o apenas c&#243;digo como teoria, mas teoria como reflexo reflexivo com o trabalho te&#243;rico e implica&#231;&#245;es do pr&#243;prio c&#243;digo. As normas disciplinares, incluindo enquadramento contextual, teoria e autocr&#237;tica, precisam acompanhar, complementar e informar qualquer cr&#237;tica computacional. Revelar o m&#225;ximo poss&#237;vel do c&#243;digo, dos dados e dos m&#233;todos &#233; essencial para permitir a conversa disciplinar em curso. Compilando-os juntos em um &#250;nico objeto, que pode ser exportado, compartilhado, examinado e executado por outros, produz um tipo din&#226;mico de teoriza&#231;&#227;o que &#233; modular, mas firmemente ligado ao seu objeto.<ref type="footnotemark" target="#5"/></p>
</blockquote>
</div>
      <div n="2"><head>Links</head>
<ul>
<li>Uma lista crescente de notebooks <link target="https://perma.cc/V5JX-VPP8">Jupyter para DH</link>, em m&#250;ltiplas linguagens humanas e de programa&#231;&#227;o. Obrigado a todos que enviaram sugest&#245;es no Twitter; refer&#234;ncias adicionais s&#227;o bem-vindas.</li>
<li>Uma descri&#231;&#227;o t&#233;cnica detalhada da <link target="https://perma.cc/N6M6-ZF5G">instala&#231;&#227;o de pacotes Python do Jupyter</link>.</li>
</ul>
</div>
      <div n="2"><head>Agradecimentos</head>
<ul>
<li>
<p>Obrigado a St&#233;fan Sinclair pelas refer&#234;ncias a discuss&#245;es anteriores sobre o uso de notebooks em humanidades digitais.</p>
</li>
<li>
<p>Obrigado a Rachel Midura por sugerir o uso de Jupyter Notebooks para colabora&#231;&#227;o. </p>
</li>
</ul>
<p><note id="1"> Knuth, Donald. 1992. Literate Programming Stanford, Calif&#243;rnia: Centro para o Estudo da Linguagem e da Informa&#231;&#227;o.</note></p>
<p><note id="2">  Millman, KJ e Fernando Perez. 2014. &#8220;Developing open source scientific practice&#8221;. In Implementing Reproducible Research, Ed. Victoria Stodden, Friedrich Leisch, and Roger D. Peng. <link target="https://perma.cc/M8R7-9JTL">https://osf.io/h9gsd/</link></note></p>
<p><note id="3">  Sinclair, St&#233;fan &amp; Geoffrey Rockwell. 2013. &#8220;Voyant Notebooks: Literate Programming and Programming Literacy&#8221;. Journal of Digital Humanities, Vol. 2, No. 3 Summer 2013. <link target="https://perma.cc/R253-BP2B">http://journalofdigitalhumanities.org/2-3/voyant-notebooks-literate-programming-and-programming-literacy/</link></note></p>
<p><note id="4">  Haley Di Pressi, Stephanie Gorman, Miriam Posner, Raphael Sasayama, and Tori Schmitt, with contributions from Roderic Crooks, Megan Driscoll, Amy Earhart, Spencer Keralis, Tiffany Naiman, and Todd Presner. &#8220;A Student Collaborator&#8217;s Bill of Rights&#8221;. <link target="https://perma.cc/A8G2-BBL9">https://humtech.ucla.edu/news/a-student-collaborators-bill-of-rights/</link></note></p>
<p><note id="5">  Dobson, James. 2019. Critical Digital Humanities: The Search for a Methodology. Urbana-Champaign: University of Illinois Press. p. 40.</note></p>
</div>
    </body>
  </text>
</TEI>
