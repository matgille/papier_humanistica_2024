<TEI xmlns="http://www.tei-c.org/ns/1.0" xml:id="introduccion-datos-abiertos-enlazados">
  <teiHeader>
 <fileDesc>
  <titleStmt>
   <title>Introducci&#243;n a los Datos abiertos enlazados</title>
  <author role="original_author">Jonathan Blaney</author><editor role="reviewers"><persName>Tehri Nurmikko-Fuller</persName><persName>Matthew Lincoln</persName></editor><author role="translators">Mar&#237;a-Jes&#250;s Colmenero-Ruiz</author><editor role="translation-reviewers"><persName>Maria Jose Afanador</persName><persName>Antonio Rojas Castro</persName></editor><editor role="editors">Adam Crymble</editor></titleStmt>
  <publicationStmt>
   <idno type="doi">10.46430/phes0038</idno><date type="published">05/07/2017</date><date type="translated">06/02/2018</date><p>Lesson reviewed and published in Programming Historian.</p>
  </publicationStmt>
  <sourceDesc>
  <p>Born digital, in a markdown format. Original file: <ref type="original_file" target="#intro-to-linked-data"/>.</p><p>There are other translations: <ref target="#introducao-dados-abertos-conectados"/></p></sourceDesc>
 </fileDesc>
 <profileDesc><abstract><p>Con este tutorial aprender&#225;s los fundamentos (URIs, ontolog&#237;as, formato RDF y, muy brevemente, SPARQL) de los Datos abiertos enlazados.</p></abstract><textClass><keywords><term xml:lang="en">lod</term></keywords></textClass></profileDesc>
</teiHeader>
  <text xml:lang="es">
    <body>
      <div type="2"><head>Introducci&#243;n y contexto de la lecci&#243;n</head>
<p>Esta lecci&#243;n ofrece una introducci&#243;n breve y concisa a los <ref target="https://es.wikipedia.org/wiki/Datos_enlazados">datos abiertos enlazados</ref>    (<emph>Linked Open Data</emph>, LOD). No es necesario ning&#250;n conocimiento previo. Los lectores lograr&#225;n comprender de forma clara los conceptos que fundamentan los datos abiertos enlazados, c&#243;mo se utilizan y c&#243;mo se crean. El tutorial se divide en cinco partes, m&#225;s una de lecturas adicionales:</p>
<list type="ordered">
<item>Datos abiertos enlazados: &#191;qu&#233; son?</item>
<item>El papel del <ref target="https://es.wikipedia.org/wiki/Identificador_de_recursos_uniforme">Identificador de Recursos Uniforme</ref> (URI)</item>
<item>C&#243;mo los LOD organizan el conocimiento: <ref target="https://es.wikipedia.org/wiki/Ontolog%C3%ADa_(inform%C3%A1tica)">ontolog&#237;as</ref></item>
<item>El <ref target="https://es.wikipedia.org/wiki/Resource_Description_Framework">Marco de descripci&#243;n de recursos</ref> (RDF) y formatos de datos</item>
<item>C&#243;mo interrogar los datos abiertos enlazados con <ref target="https://es.wikipedia.org/wiki/SPARQL">SPARQL</ref></item>
<item>Lecturas y recursos adicionales</item>
</list>
<p>El tutorial puede completarse en un par de horas, pero siempre es posible releer algunas secciones para reforzar la comprensi&#243;n. Los t&#233;rminos t&#233;cnicos se han enlazado con su p&#225;gina correspondiente en Wikipedia; te animamos a hacer una pausa y leer sobre los t&#233;rminos que encuentres m&#225;s complejos. Despu&#233;s de haber aprendido algunos de los principios clave de LOD, la mejor manera de mejorar y consolidar ese conocimiento es practicar. Este tutorial ofrece oportunidades para hacerlo. Al final del curso deber&#237;as entender los fundamentos de LOD, incluyendo t&#233;rminos y conceptos clave.</p>
<p>Si necesitas aprender a explorar los LOD usando el lenguaje de consulta <ref target="https://es.wikipedia.org/wiki/SPARQL">SPARQL</ref>, recomiendo la lecci&#243;n <ref target="/es/lecciones/sparql-datos-abiertos-enlazados">'Uso de SPARQL para acceder a datos abiertos enlazados'</ref> de Matthew Lincoln, que sigue de una forma pr&#225;ctica la perspectiva conceptual ofrecida en esta lecci&#243;n.</p>
<p>Con el fin de proporcionar a los lectores una base s&#243;lida de los principios b&#225;sicos de LOD, este tutorial no ofrecer&#225; una cobertura completa de todos los conceptos LOD. Los siguientes dos conceptos de LOD <emph>no</emph> se explicar&#225;n en esta lecci&#243;n:</p>
<list type="ordered">
<item>
<p>La <ref target="https://es.wikipedia.org/wiki/Web_sem%C3%A1ntica">web sem&#225;ntica</ref> y el <ref target="https://en.wikipedia.org/wiki/Semantic_reasoner">razonamiento sem&#225;ntico</ref> de <ref target="https://es.wikipedia.org/wiki/Conjunto_de_datos">conjuntos de datos</ref>. Un razonador sem&#225;ntico deducir&#237;a que Jorge VI es el hermano o medio hermano de Eduardo VIII, dado el hecho de que a) Eduardo VIII es el hijo de Jorge V y b) Jorge VI es el hijo de Jorge V. Este tutorial no se centra en este tipo de tareas.</p>
</item>
<item>
<p>La creaci&#243;n y subida de conjuntos de datos abiertos enlazados a la <ref target="http://linkeddatacatalog.dws.informatik.uni-mannheim.de/state/">nube de datos enlazados</ref>. Compartir tus LOD es un principio importante, al que se anima m&#225;s adelante. Sin embargo, los aspectos pr&#225;cticos de contribuir con tus LOD a la nube de datos enlazados est&#225; fuera del alcance de esta lecci&#243;n. Al final de este tutorial hay algunos recursos disponibles que pueden ayudarte a comenzar con esta tarea.</p>
</item>
</list>
</div>
      <table>
<row>
<cell role="label">sujeto</cell>
<cell role="label">predicado</cell>
<cell role="label">objeto</cell>
</row>
<row>
<cell>persona 64183282</cell>
<cell>representanteEnElParlamentoUK</cell>
<cell>"blackburn1955-current"</cell>
</row>
</table>
      <div type="2"><head>El papel del Identificador Uniforme de Recursos (Uniform Resource Identifier - URI)</head>
<p>Una parte esencial de los LOD es el <ref target="https://es.wikipedia.org/wiki/Identificador_de_recursos_uniforme">Identificador Uniforme de Recursos</ref> o URI. El URI es una manera un&#237;voca y fiable de representar una entidad (una persona, un objeto, una relaci&#243;n, etc.) en una forma que es utilizable por todo el mundo.</p>
<p>En la secci&#243;n anterior usamos dos n&#250;meros distintos para identificar nuestros dos Jack Straws diferentes.</p>
<ab><code xml:id="code_introduccion-datos-abiertos-enlazados_6" corresp="code_introduccion-datos-abiertos-enlazados_6.txt" rend="block"/></ab>
<p>El problema es que en todo el mundo hay muchas bases de datos que contienen personas con estos n&#250;meros, y probablemente sean personas diferentes. Fuera de nuestro contexto inmediato, estas cifras no identifican individuos &#250;nicos. Tratemos de arreglar eso. Aqu&#237; est&#225;n estos mismos identificadores pero como URI:</p>
<ab><code xml:id="code_introduccion-datos-abiertos-enlazados_7" corresp="code_introduccion-datos-abiertos-enlazados_7.txt" rend="block"/></ab>
<p>As&#237; como el n&#250;mero &#250;nico desambigu&#243; nuestros dos Jack Straws, el URI completo anterior nos ayuda a eliminar la ambig&#252;edad entre todos los diferentes archivos de autoridad que existen. En este caso, est&#225; claro que estamos usando VIAF como nuestro archivo de autoridad. Ya has visto esta forma de desambiguaci&#243;n muchas veces en la web. Hay muchos sitios web alrededor del mundo con p&#225;ginas llamadas <code rend="inline">/home</code> o <code rend="inline">/faq</code>. Pero no hay confusi&#243;n porque el <ref target="https://es.wikipedia.org/wiki/Dominio_de_Internet">dominio</ref> (la primera parte del Localizador Uniforme de Recursos (URL) - por ejemplo,<code rend="inline">bbc.co.uk</code>) es &#250;nico y, por lo tanto, todas las p&#225;ginas que son parte de ese dominio son &#250;nicas, diferenci&#225;ndose de otras p&#225;ginas <code rend="inline">/faq</code> de otros sitios web. En la direcci&#243;n <code rend="inline">http://www.bbc.co.uk/faqs</code>, es la parte <code rend="inline">bbc.co.uk</code> la que hace &#250;nicas las p&#225;ginas siguientes. Esto es tan obvio para las personas que usan la web todo el tiempo que no piensan en ello. Probablemente tambi&#233;n sepas que si quieres iniciar un sitio web llamado <code rend="inline">bbc.co.uk</code> no puedes hacerlo, porque ese nombre ya se ha registrado con la autoridad correspondiente, que es el <ref target="https://es.wikipedia.org/wiki/Sistema_de_nombres_de_dominio">Sistema de Nombres de Dominio</ref> (Domain Name System - DNS). El registro garantiza la unicidad. Los URIs tambi&#233;n deben ser &#250;nicos.</p>
<p>Si bien los ejemplos anteriores se parecen a las URLs, es posible tambi&#233;n construir un URI que no se parezca en nada a una URL. Tenemos muchas maneras de identificar personas y cosas de manera &#250;nica y rara vez lo pensamos o nos preocupamos de ello. Los c&#243;digos de barras, los n&#250;meros de pasaporte e incluso tu direcci&#243;n postal est&#225;n dise&#241;ados para ser &#250;nicos. En el mundo desarrollado los n&#250;meros de tel&#233;fono m&#243;vil se colocan con frecuencia en los carteles de las tiendas precisamente porque son &#250;nicos. Todos ellos podr&#237;an usarse como URIs.</p>
<p>Cuando quisimos crear URIs para las entidades descritas por el proyecto '<ref target="http://www.history.ac.uk/projects/digital/tobias">Tobias</ref>', elegimos una estructura tipo URL y elegimos utilizar nuestro espacio web institucional, dejando de lado  <code rend="inline">data.history.ac.uk/tobias-project/</code> como un lugar dedicado a alojar estos URI. Al ponerlo en <code rend="inline">data.history.ac.uk</code> en lugar de en <code rend="inline">history.ac.uk</code>, hubo una separaci&#243;n clara entre los URI y las p&#225;ginas del sitio web. Por ejemplo, uno de los URIs del proyecto Tobias era <ref target="http://data.history.ac.uk/tobias-project/person/15601">http://data.history.ac.uk/tobias-project/person/15601</ref>. Si bien el formato de los URI mencionados anteriormente es el mismo que el de una URL, no se vinculan a p&#225;ginas web (intenta pegarlas en un navegador web). Muchas personas nuevas con los LOD encuentran esto confuso. Todas las URL son URI, pero no todas las URI son URL. Una URI puede describir cualquier cosa, mientras que una URL describe la ubicaci&#243;n de algo en la web. Es decir, una URL te dice la ubicaci&#243;n de una p&#225;gina web o un archivo o algo similar. Un URI simplemente hace el trabajo de identificar algo. As&#237; como el N&#250;mero Est&#225;ndar Internacional de Libro, o <ref target="https://www.iso.org/standard/36563.html">ISBN</ref> 978-0-1-873354-6 identifica de manera &#250;nica una edici&#243;n de tapa dura de <emph>Bautismo, Hermandad y Creencias en la Reforma de Alemania</emph> por Kat Hill, pero no te dice d&#243;nde conseguir una copia. Para eso, necesitar&#237;as algo como una <ref target="https://www.upo.es/biblioteca/guia_loc_sig/signatura/index.html">signatura</ref>, que te da una ubicaci&#243;n exacta en un estante de una biblioteca espec&#237;fica.</p>
<p>Hay un poco de jerga alrededor de los URIs. La gente habla de si son, o no, <ref target="https://es.wikipedia.org/wiki/Referencia_(inform%C3%A1tica)">desreferenciables</ref>. Eso solo significa que <emph>&#191;se puede pasar desde una referencia abstracta a otra cosa?</emph> Por ejemplo, si pegas un URI en la barra de direcciones de un navegador, &#191;devolver&#225; algo? El URI de VIAF para el historiador Simon Schama es:</p>
<ab><code xml:id="code_introduccion-datos-abiertos-enlazados_8" corresp="code_introduccion-datos-abiertos-enlazados_8.txt" rend="block"/></ab>
<p>Si lo pones en el navegador, obtendr&#225;s una p&#225;gina web sobre Simon Schama que contiene datos estructurados sobre &#233;l y su historial de publicaciones. Esto es muy &#250;til, pero, por otro lado, no es obvio desde la URI a qui&#233;n o incluso a qu&#233; se refiere. Del mismo modo, si tratamos un n&#250;mero de tel&#233;fono m&#243;vil (con c&#243;digo internacional) como URI para una persona, entonces deber&#237;a ser desreferenciable. Alguien podr&#237;a responder el tel&#233;fono, e incluso podr&#237;a ser Schama.</p>
<p>Pero esto no es esencial. Muchos de los URI no son desreferenciables, como en el ejemplo anterior del proyecto Tobias. No puedes encontrarlo en ning&#250;n sitio; es una convenci&#243;n.</p>
<p>El ejemplo de VIAF nos lleva a otra cosa importante sobre los URIs: no debes crearlos a menos que sea necesario. Las personas y las organizaciones han estado haciendo esfuerzos concertados para construir listas de URIs adecuadas y los LOD no funcionar&#225;n de manera efectiva si la gente duplica ese trabajo creando nuevos URIs innecesariamente. Por ejemplo, VIAF cuenta con el apoyo de muchas bibliotecas a nivel internacional. Si deseas construir URI para personas, VIAF es una muy buena opci&#243;n. Si no puedes encontrar a algunas personas en VIAF, u otras listas de autoridades, s&#243;lo entonces podr&#237;as necesitar hacer las tuyas propias.</p>
</div>
      <table>
<row>
<cell role="label">alumnoID</cell>
<cell role="label">profesorID</cell>
</row>
<row>
<cell>72</cell>
<cell>40</cell>
</row>
<row>
<cell>56</cell>
<cell>28</cell>
</row>
<row>
<cell>49</cell>
<cell>28</cell>
</row>
<row>
<cell>35</cell>
<cell>17</cell>
</row>
<row>
<cell>31</cell>
<cell>17</cell>
</row>
</table>
      <div type="2"><head>RDF y formatos de datos</head>
<p>Los LOD usan un est&#225;ndar, definido por el <ref target="https://www.w3.org/">World Wide Web Consortium</ref>, o W3C, llamado <emph><ref target="https://es.wikipedia.org/wiki/Resource_Description_Framework">Resource Description Framework</ref></emph>, o simplemente RDF. Los est&#225;ndares son &#250;tiles siempre que sean adoptados de forma generalizada -piensa en el metro o en los tama&#241;os est&#225;ndar de tornillo- incluso si son esencialmente arbitrarios. RDF ha sido adoptado como el est&#225;ndar para los LOD.</p>
<p>A menudo oir&#225;s que los LOD son denominados simplemente como RDF. Hemos retrasado hablar de RDF hasta ahora porque es bastante abstracto. RDF es un <ref target="https://es.wikipedia.org/wiki/Modelo_de_datos">modelo de datos</ref> que describe c&#243;mo se estructuran los datos en un nivel te&#243;rico. As&#237;, la insistencia en usar tripletas (en lugar de cuatro partes, o dos o nueve, por ejemplo) es una regla de RDF. Pero cuando se trata de asuntos m&#225;s pr&#225;cticos, tienes algunas opciones de implementaci&#243;n. Por tanto, RDF te dice lo que tienes que hacer, pero no exactamente c&#243;mo tienes que hacerlo. Estas opciones se dividen en dos &#225;reas: c&#243;mo escribes las cosas (serializaci&#243;n) y las relaciones que describen tus tripletas.</p>
<div type="3"><head>Serializaci&#243;n</head>
<p>La <ref target="https://es.wikipedia.org/wiki/Serializaci%C3%B3n">serializaci&#243;n</ref> es el t&#233;rmino t&#233;cnico para 'c&#243;mo escribes las cosas'. El chino est&#225;ndar (mandar&#237;n) se puede escribir en caracteres tradicionales, caracteres simplificados o romanizaci&#243;n Pinyin y el idioma en s&#237; no cambia. Del mismo modo, RDF se puede escribir en diversas formas. Aqu&#237; veremos dos (hay otros, pero por simplicidad, nos centraremos en estos):</p>
<list type="ordered">
<item>
<p><ref target="https://es.wikipedia.org/wiki/Turtle_(sintaxis)">Turtle</ref></p>
</item>
<item>
<p><ref target="https://es.wikipedia.org/wiki/Extensible_Markup_Language">RDF/XML</ref></p>
</item>
</list>
<p>Reconocer qu&#233; serializaci&#243;n est&#225;s viendo significa que puedes elegir las herramientas adecuadas dise&#241;adas para ese formato. Por ejemplo, RDF puede venir serializado en formato <ref target="https://es.wikipedia.org/wiki/Extensible_Markup_Language">XML</ref>. Luego puedes usar una herramienta o biblioteca de c&#243;digo dise&#241;ada para analizar ese formato en particular, lo que es &#250;til si ya sabes c&#243;mo trabajar con &#233;l. El reconocimiento del formato tambi&#233;n te brinda las palabras clave correctas para buscar ayuda en l&#237;nea. Muchos recursos ofrecen sus bases de datos de LOD para su descarga y puedes elegir qu&#233; serializaci&#243;n deseas descargar.</p>
<div type="4"><head>Turtle</head>
<p>'Turtle' (Tortuga en espa&#241;ol) es un juego de palabras. 'Tur' es la abreviatura de 'terse' (conciso), y 'tle' -es la abreviatura de 'triple language' (lenguaje de tripletas)-. Turtle es una forma gratamente simple de escribir tripletas.</p>
<p>Turtle usa alias o atajos conocidos como <ref target="https://www.w3.org/TeamSubmission/turtle/#sec-tutorial">prefijos</ref>, lo que nos ahorra tener que escribir URIs completos todo el tiempo. Regresemos al URI que inventamos en la secci&#243;n anterior:</p>
<ab><code xml:id="code_introduccion-datos-abiertos-enlazados_12" corresp="code_introduccion-datos-abiertos-enlazados_12.txt" rend="block"/></ab>
<p>No queremos escribir esto cada vez que nos referimos a esta persona (Jack Straw, como recordar&#225;s). Entonces s&#243;lo tenemos que anunciar nuestro atajo:</p>
<ab><code xml:id="code_introduccion-datos-abiertos-enlazados_13" corresp="code_introduccion-datos-abiertos-enlazados_13.txt" rend="block"/></ab>
<p>As&#237;, Jack es <code rend="inline">toby:15601</code>, que reemplaza el URI largo y es m&#225;s f&#225;cil de leer. He elegido 'toby', pero podr&#237;a haber elegido cualquier cadena de letras con la misma facilidad.</p>
<p>Pasemos ahora de Jack Straw a William Shakespeare y usemos Turtle para describir algunos elementos sobre sus obras. Tendremos que decidir qu&#233; archivos de autoridad usar, un proceso que, como se mencion&#243; anteriormente, se optimiza si consultamos otros conjuntos de LOD. Aqu&#237; usaremos <ref target="https://es.wikipedia.org/wiki/Dublin_Core">Dublin Core</ref>, un est&#225;ndar de <ref target="https://es.wikipedia.org/wiki/Metadato">metadatos</ref> usado por las bibliotecas, como uno de nuestros prefijos, el archivo de autoridad del <ref target="https://es.wikipedia.org/wiki/Library_of_Congress_Control_Number">N&#250;mero de control de la Biblioteca del Congreso</ref> para otro, y el &#250;ltimo (VIAF) deber&#237;a serte familiar. En conjunto, estos tres archivos de autoridad proporcionan identificadores &#250;nicos para todas las entidades que planeo usar en este ejemplo:</p>
<ab><code xml:id="code_introduccion-datos-abiertos-enlazados_14" corresp="code_introduccion-datos-abiertos-enlazados_14.txt" rend="block"/></ab>
<p>Ten en cuenta el espaciado del punto final despu&#233;s de la &#250;ltima l&#237;nea. Esta es la forma de Turtle de indicar el final. T&#233;cnicamente no tiene que tener el espacio, pero lo hace m&#225;s f&#225;cil de leer despu&#233;s de una larga cadena de caracteres.</p>
<p>En el ejemplo anterior, lccn: n82011242 representa a Macbeth; dc: creator vincula Macbeth a su autor; viaf: 96994048 representa a William Shakespeare.</p>
<p>Turtle tambi&#233;n te permite listar tripletas sin molestarte en repetir cada URI cuando acabas de usarlo. Agreguemos la fecha en la que los expertos creen que Macbeth fue escrita utilizando el par atributo-valor de Dublin Core:<code rend="inline">dc: created 'YYYY'</code> :</p>
<ab><code xml:id="code_introduccion-datos-abiertos-enlazados_15" corresp="code_introduccion-datos-abiertos-enlazados_15.txt" rend="block"/></ab>
<p>&#191;Recuerdas la estructura de la tripleta, discutida en la secci&#243;n 1? All&#237; pusimos este ejemplo:</p>
<p><code rend="inline">1 persona 15601 (el sujeto) 2  representanteEnElParlamentoUK (el predicado) 3 "Blackburn" (el objeto)</code></p>
<p>La clave es que el predicado conecta el sujeto y el objeto. Describe la relaci&#243;n entre ellos. El sujeto ocupa el primer lugar en la tripleta, pero eso es una cuesti&#243;n de elecci&#243;n propia, como comentamos en el ejemplo de las personas a quienes Liszt ense&#241;&#243; piano.</p>
<p>Puedes usar un punto y coma si el sujeto es el mismo pero el predicado y el objeto son diferentes, o una coma si el sujeto y el predicado son iguales y solo el objeto es diferente.</p>
<ab><code xml:id="code_introduccion-datos-abiertos-enlazados_16" corresp="code_introduccion-datos-abiertos-enlazados_16.txt" rend="block"/></ab>
<p>Aqu&#237; estamos diciendo que Shakespeare (96994048) y John Fletcher (12323361) fueron los creadores de la obra <emph>Los dos nobles caballeros</emph>.</p>
<p>Cuando anteriormente vimos las ontolog&#237;as, suger&#237; que le echaras un vistazo a los ejemplos de la <ref target="http://web.archive.org/web/20170718143925/http://musicontology.com/docs/getting-started.html">Music Ontology</ref>. Espero que no te decepcionaran. Echa un vistazo de nuevo ahora. Todav&#237;a es algo complicado, pero &#191;tiene m&#225;s sentido ahora?</p>
<p>Una de las ontolog&#237;as m&#225;s accesibles es Friend of a Friend, o <ref target="https://es.wikipedia.org/wiki/FOAF">FOAF</ref>. Est&#225; dise&#241;ada para describir personas y es, quiz&#225;s por esa raz&#243;n, bastante intuitiva. Si, por ejemplo, deseas escribirme para decirme que este tutorial es lo mejor que has le&#237;do, aqu&#237; est&#225; mi direcci&#243;n de correo electr&#243;nico expresada como tripletas en FOAF:</p>
<ab><code xml:id="code_introduccion-datos-abiertos-enlazados_17" corresp="code_introduccion-datos-abiertos-enlazados_17.txt" rend="block"/></ab>
</div><div type="4"><head>RDF/XML</head>
<p>En contraste con Turtle, RDF/XML puede parecer un poco pesado. Para empezar, convirtamos una tripleta del Turtle anterior, la que dice que Shakespeare fue el creador de <emph>Los dos parientes nobles</emph>:</p>
<ab><code xml:id="code_introduccion-datos-abiertos-enlazados_18" corresp="code_introduccion-datos-abiertos-enlazados_18.txt" rend="block"/></ab>
<p>En RDF/XML, con los prefijos declarados dentro del fragmento XML, es as&#237;:</p>
<ab><code xml:id="code_introduccion-datos-abiertos-enlazados_19" corresp="code_introduccion-datos-abiertos-enlazados_19.txt" rend="block"/></ab>
<p>El formato RDF/XML tiene la misma informaci&#243;n b&#225;sica que Turtle, pero se escribe de forma muy diferente, bas&#225;ndose en los principios de las etiquetas XML anidadas.</p>
<p>Pasemos a un ejemplo diferente para mostrar c&#243;mo RDF/XML combina tripletas y, al mismo tiempo, presentamos <ref target="https://es.wikipedia.org/wiki/Simple_Knowledge_Organization_System">SKOS</ref> (Simple Knowledge Organization System - Sistema Simple de Organizaci&#243;n del Conocimiento), que est&#225; dise&#241;ado para codificar tesauros o taxonom&#237;as.</p>
<ab><code xml:id="code_introduccion-datos-abiertos-enlazados_20" corresp="code_introduccion-datos-abiertos-enlazados_20.txt" rend="block"/></ab>
<p>Aqu&#237; estamos diciendo que el concepto SKOS <code rend="inline">21250</code>, abdicaci&#243;n, tiene una etiqueta preferida de "abdicaci&#243;n". La forma en que funciona es que el elemento sujeto (incluida la parte de abdicaci&#243;n, que es un valor de atributo en t&#233;rminos XML) tiene el predicado y el objeto anidados dentro de &#233;l. El elemento anidado es el predicado y el nodo hoja <ref target="https://es.wikipedia.org/wiki/%C3%81rbol_(inform%C3%A1tica)#Terminolog.C3.ADa">(<emph>the leaf node</emph>)</ref>, es el objeto. Este ejemplo est&#225; tomado de un proyecto para publicar un <ref target="http://www.history.ac.uk/projects/digital/tobias">tesauro de historia brit&#225;nica e irlandesa</ref>.</p>
<p>Al igual que con Turtle, podemos agregar m&#225;s tripletas. Entonces, declaremos que el t&#233;rmino m&#225;s restringido en nuestra jerarqu&#237;a de temas, uno m&#225;s abajo de <emph>Abdicaci&#243;n</emph> ser&#225; <emph>Crisis de la abdicaci&#243;n (1936)</emph>.</p>
<ab><code xml:id="code_introduccion-datos-abiertos-enlazados_21" corresp="code_introduccion-datos-abiertos-enlazados_21.txt" rend="block"/></ab>
<p>&#191;Recuerdas c&#243;mo los predicados y los objetos est&#225;n anidados dentro del sujeto? Aqu&#237; lo hemos hecho dos veces con el mismo sujeto, por lo que podemos hacer esto menos detallado al anidar ambos conjuntos de predicados y objetos dentro de un sujeto:</p>
<ab><code xml:id="code_introduccion-datos-abiertos-enlazados_22" corresp="code_introduccion-datos-abiertos-enlazados_22.txt" rend="block"/></ab>
<p>Si est&#225;s familiarizado con XML, esto ser&#225; muy f&#225;cil para ti. Si no lo est&#225;s, podr&#237;as preferir un formato como Turtle. Pero la ventaja aqu&#237; es que creando tu RDF/XML puedes usar las herramientas habituales disponibles para XML, como editores y analizadores XML, para verificar que tu RDF/XML est&#233; formateado correctamente. Si no tienes experiencia con XML, recomiendo Turtle, para lo que puedes usar una herramienta <ref target="http://www.easyrdf.org/converter">en l&#237;nea</ref> para verificar que tu sintaxis sea correcta.</p>
</div></div></div>
      <div type="2"><head>Consultas RDF con SPARQL</head>
<p>Para esta secci&#243;n final, interrogaremos algunos LOD y veremos qu&#233; podemos hacer con ellos.</p>
<p>El lenguaje de consulta que utilizamos para los LOD se llama <ref target="https://es.wikipedia.org/wiki/SPARQL">SPARQL</ref>. Es uno de esos acr&#243;nimos recursivos amados por los tecn&#243;logos: <emph>Protocolo y lenguaje de consulta SPARQL</emph> .</p>
<p>Como mencion&#233; al principio, <emph>The Programming Historian en espa&#241;ol</emph> tiene <ref target="/es/lecciones/sparql-datos-abiertos-enlazados">una lecci&#243;n completa</ref>, por Matthew Lincoln, sobre el uso de SPARQL. Esta &#250;ltima secci&#243;n s&#243;lo proporciona una descripci&#243;n general de los conceptos b&#225;sicos y, si SPARQL despierta tu inter&#233;s, puedes obtener una base s&#243;lida con el tutorial de Lincoln.</p>
<p>Vamos a ejecutar nuestras consultas SPARQL en <ref target="https://es.wikipedia.org/wiki/SPARQL">DBpedia</ref>, que es un gran conjunto de LOD derivado de Wikipedia. Adem&#225;s de estar lleno de informaci&#243;n que es muy dif&#237;cil de encontrar a trav&#233;s de la interfaz habitual de Wikipedia, tiene varios "puntos finales" SPARQL: interfaces donde puedes escribir consultas SPARQL y obtener resultados de las tripletas de DBpedia.</p>
<p>El punto de entrada (<emph>endpoint</emph>) de consulta SPARQL que yo uso se llama <ref target="http://dbpedia.org/snorql/">snorql</ref>. Estos puntos de entrada a veces parecen desconectarse, por lo que, si ese fuera el caso, busca <emph>dbpedia sparql</emph> en internet para encontrar un reemplazo similar.</p>
<p>Si vas a la URL snorql indicada antes, ver&#225;s que al principio ya est&#225;n declarados varios prefijos, lo cual te ser&#225; &#250;til. Tambi&#233;n reconocer&#225;s ya algunos de los prefijos.</p>
<figure><desc>cuadro de consulta predeterminado de snorql, con algunos prefijos declarados para ti</desc><graphic url="intro-to-linked-data-fig1.png"/></figure>
<p>En el cuadro de consulta, debajo de las declaraciones de prefijo, deber&#237;as ver:</p>
<ab><code xml:id="code_introduccion-datos-abiertos-enlazados_23" corresp="code_introduccion-datos-abiertos-enlazados_23.txt" rend="block"/></ab>
<p>Si alguna vez ha escrito una consulta de base de datos en <emph>Structured Query Language</emph>, <ref target="https://es.wikipedia.org/wiki/SQL">m&#225;s conocido como SQL</ref>, esto te resultar&#225; bastante familiar y te ayudar&#225; a aprender SPARQL. Si no, no te preocupes. Las palabras clave utilizadas aqu&#237;, SELECT y WHERE no distinguen entre may&#250;sculas y min&#250;sculas, pero algunas partes de una consulta SPARQL lo pueden hacer (ver a continuaci&#243;n), por lo que te recomiendo que sigas fielmente los ejemplos mostrados a lo largo de las consultas en este curso.</p>
<p>Aqu&#237;  <code rend="inline">SELECT</code> significa <emph>devolver algo</emph> y <code rend="inline">*</code>  significa <emph>darme todo</emph>. <code rend="inline">WHERE</code>introduce una condici&#243;n, que es donde pondremos los detalles de qu&#233; clase de cosas queremos que nos devuelva la consulta.</p>
<p>Comencemos con algo simple para ver c&#243;mo funciona esto. Pega esto (o, mejor, escr&#237;belo) en el cuadro de consulta:</p>
<ab><code xml:id="code_introduccion-datos-abiertos-enlazados_24" corresp="code_introduccion-datos-abiertos-enlazados_24.txt" rend="block"/></ab>
<p>Haz clic en "Go!"(ir) y, si dejaste el cuadro desplegable como "Browse" (navegar), deber&#237;as obtener dos columnas con la etiqueta "b" y "c". (Ten en cuenta que aqu&#237;, buscando una cadena, las may&#250;sculas y min&#250;sculas s&#237; importan: lyndal_roper no te dar&#225; ning&#250;n resultado).</p>
<figure><desc>Parte inicial de la lista de resultados de una consulta para todas las tripletas con 'Lyndal_Roper' como sujeto</desc><graphic url="intro-to-linked-data-fig2.png"/></figure>
<p>Recapitulando, &#191;qu&#233; acaba de pasar? &#191;Y c&#243;mo s&#233; qu&#233; escribir?</p>
<p>En realidad no lo sab&#237;a y ese es uno de los problemas con los puntos de entrada SPARQL. Al conocer un conjunto de datos, debes probar y descubrir qu&#233; t&#233;rminos se usan. Como este proviene de Wikipedia y me interesaba saber qu&#233; informaci&#243;n sobre historiadores pod&#237;a encontrar, fui a la p&#225;gina de Wikipedia del historiador <ref target="https://en.wikipedia.org/wiki/Lyndal_Roper">Lyndal Roper</ref>.</p>
<p>La parte al final de la URL es <code rend="inline">Lyndal_Roper</code> y llegu&#233; a la conclusi&#243;n de que esta cadena es probablemente la forma en que se hace referencia a Roper en DBpedia. Como no s&#233; qu&#233; m&#225;s podr&#237;a haber en las tripletas que mencionen a Roper, us&#233; <code rend="inline">?a</code> y <code rend="inline">?b</code>. Estos son comodines: podr&#237;a haber escrito igualmente  <code rend="inline">?en_cualquier_sitio</code> y <code rend="inline">?como_gustes</code> y las columnas tendr&#237;an esos t&#237;tulos. Cuando desees ser m&#225;s preciso sobre lo que est&#225;s  obteniendo, ser&#225; m&#225;s importante etiquetar las columnas de forma significativa.</p>
<p>Prueba ahora tu propia consulta SPARQL ahora: elije una p&#225;gina de Wikipedia y copia la parte final de la URL, lo que aparece despu&#233;s de la barra diagonal final, y col&#243;calo en lugar de Lyndal_Roper. Luego presiona 'Go!'.</p>
<p>A partir de la informaci&#243;n que obtienes de estos resultados, es posible generar consultas m&#225;s precisas. Esto puede ser un tanto impredecible, al menos para m&#237;, as&#237; que no te preocupes si algunos no funcionan.</p>
<p>Volvamos a los resultados de la consulta que ejecut&#233; hace un momento:</p>
<ab><code xml:id="code_introduccion-datos-abiertos-enlazados_25" corresp="code_introduccion-datos-abiertos-enlazados_25.txt" rend="block"/></ab>
<p>Puedo ver una larga lista en la columna etiquetada como <emph>c</emph> . Estos son todos los atributos que Roper tiene en la DBpedia y nos ayudar&#225;n a encontrar otras personas con estos atributos. Por ejemplo, puedo ver <code rend="inline">http://dbpedia.org/class/yago/Historian110177150</code>. &#191;Puedo usar esto para obtener una lista de historiadores? Voy a poner esto en mi consulta pero en tercer lugar (porque ah&#237; es donde estaba cuando lo encontr&#233; en los resultados de Lyndal Roper). Mi consulta se ve as&#237;:</p>
<ab><code xml:id="code_introduccion-datos-abiertos-enlazados_26" corresp="code_introduccion-datos-abiertos-enlazados_26.txt" rend="block"/></ab>
<p>He hecho un peque&#241;o cambio aqu&#237;. Si esta consulta funciona entonces espero que mis historiadores est&#233;n en la primera columna, porque "historiador" no parece ser un predicado: no funciona como un verbo en una oraci&#243;n; as&#237; que voy a llamar a mi primera columna de resultados 'nombre_historiador' y a mi segunda (de la que no s&#233; nada) 'predicado'.</p>
<p>Ejecuta la consulta. &#191;Te funciona? Yo obtuve una gran lista de historiadores.</p>
<figure><desc>historiadores, seg&#250;n DBpedia</desc><graphic url="intro-to-linked-data-fig3.png"/></figure>
<p>As&#237; que esto funciona para crear listas, lo cual es &#250;til, pero ser&#237;a mucho m&#225;s potente combinar listas, para obtener intersecciones de conjuntos. Encontr&#233; un par de cosas m&#225;s que podr&#237;an ser interesantes para consultar en los atributos de DBpedia de Lyndal Roper: <ref target="http://dbpedia.org/class/yago/WikicatBritishHistorians">http://dbpedia.org/class/yago/WikicatBritishHistorians</ref> y <ref target="http://dbpedia.org/class/yago/WikicatWomenHistorians">http://dbpedia.org/class/yago/WikicatWomenHistorians</ref>. Es muy f&#225;cil combinarlos pidiendo una variable que retornar&#225; (en nuestro caso, esta es <code rend="inline">?name</code>) y luego usar eso en m&#250;ltiples l&#237;neas de una consulta. Ten en cuenta tambi&#233;n el espacio y el punto al final de la primera l&#237;nea que comienza con <code rend="inline">?name</code>:</p>
<ab><code xml:id="code_introduccion-datos-abiertos-enlazados_27" corresp="code_introduccion-datos-abiertos-enlazados_27.txt" rend="block"/></ab>
<p>&#161;Funciona! Obtengo cinco resultados. En el momento de escribir, hay cinco historiadoras brit&#225;nicas en <emph>DBpedia</emph>...</p>
<figure><desc>Historiadoras brit&#225;nicas, seg&#250;n DBpedia</desc><graphic url="intro-to-linked-data-fig4.png"/></figure>
<p>&#191;Solo cinco mujeres brit&#225;nicas historiadoras? Por supuesto que hay, en realidad, muchas m&#225;s que eso, como podr&#237;amos demostrar f&#225;cilmente sustituyendo el nombre de, digamos, Alison Weir en nuestra primera consulta de Lyndal Roper. Esto nos lleva al problema con <emph>Dbpedia</emph> que mencion&#233; anteriormente: no est&#225; marcado de manera consistente con informaci&#243;n estructural del tipo que usa <emph>DBpedia</emph>. Nuestra consulta puede enumerar algunas historiadoras brit&#225;nicas, pero resulta que no podemos usarla para generar una lista significativa de personas en esta categor&#237;a. Todo lo que hemos encontrado es la gente en las entradas en Wikipedia que alguien ha decidido categorizar como "Historiador brit&#225;nico" y "mujer historiadora".</p>
<p>Con SPARQL en <emph>DBpedia</emph>, debes tener cuidado con las inconsistencias del material de m&#250;ltiples fuentes. Podr&#237;as usar SPARQL exactamente de la misma manera en un conjunto de datos m&#225;s mantenido, por ejemplo, los datos del gobierno del Reino Unido: <ref target="">https://data-gov.tw.rpi.edu//sparql</ref> y esperar obtener resultados m&#225;s s&#243;lidos (hay un breve resumen tutorial para este conjunto de datos aqu&#237;: <ref target="">https://data-gov.tw.rpi.edu/wiki/A_crash_course_in_SPARQL</ref>).</p>
<p>Sin embargo, a pesar de sus inconsistencias, <emph>DBpedia</emph> es un gran lugar para aprender SPARQL. Esto solo ha sido una breve introducci&#243;n pero hay mucho m&#225;s en <ref target="/es/lecciones/sparql-datos-abiertos-enlazados">'Uso de SPARQL para acceder a datos abiertos enlazados'</ref>.</p>
</div>
      <div type="2"><head>Lecturas adicionales y recursos</head>
<list type="unordered">
<item>
<p>Dean Allemang y James Hendler, <emph>Semantic Web for the Working Ontologist</emph>, 2nd edn, Elsevier, 2011</p>
</item>
<item>
<p>Tim Berners-Lee <ref target="https://www.w3.org/DesignIssues/LinkedData.html">Linked Data</ref></p>
</item>
<item>
<p>Bob DuCharme, <emph>Learning SPARQL</emph>, O'Reilly, 2011</p>
</item>
<item>
<p>El blog de <ref target="http://www.snee.com/bobdc.blog/">Bob DuCharme</ref> merece la pena leerlo tambi&#233;n.</p>
</item>
<item>
<p>Richard Gartner, <emph>Metadata: Shaping Knowledge from Antiquity to the Semantic Web</emph>, Springer, 2016</p>
</item>
<item>
<p>Seth van Hooland y Ruben Verborgh, <emph>Linked Data for Libraries, Archives and Museums</emph>, 2015</p>
</item>
<item>
<p>Mira tambi&#233;n la <ref target="http://freeyourmetadata.org/">p&#225;gina web</ref> complementaria del libro</p>
</item>
<item>
<p>Matthew Lincoln <ref target="/en/lessons/graph-databases-and-SPARQL">'Using SPARQL to access Linked Open Data'</ref></p>
</item>
<item>
<p><ref target="http://linkeddata.org/guides-and-tutorials">Linked Data guides and tutorials</ref></p>
</item>
<item>
<p>Dominic Oldman, Martin Doerr y Stefan Gradmann, "Zen and the Art of Linked Data: New Strategies for a Semantic Web of Humanist Knowledge", in <emph>A New Companion to Digital Humanities</emph>, editado por Susan Schreibman et al.</p>
</item>
<item>
<p>Max Schmachtenberg, Christian Bizer y Heiko Paulheim, <ref target="http://linkeddatacatalog.dws.informatik.uni-mannheim.de/state/">State of the LOD Cloud 2017</ref></p>
</item>
<item>
<p>David Wood, Marsha Zaidman y Luke Ruth, <emph>Linked Data: Structured data on the Web</emph>, Manning, 2014</p>
</item>
<item>
<p>Biblioteca del Congreso Nacional de Chile, <ref target="http://datos.bcn.cl/es/informacion/que-es">Linked Open Data: &#191;Qu&#233; es?</ref></p>
</item>
<item>
<p>Ana-Isabel Torre-Bastida, Marta Gonz&#225;lez-Rodr&#237;guez y Esther Villar-Rodr&#237;guez, <ref target="https://web.archive.org/web/20180720105638/https://recyt.fecyt.es/index.php/EPI/article/download/epi.2015.mar.04/18804">Datos abiertos enlazados (LOD) y su implantaci&#243;n en bibliotecas: iniciativas y tecnolog&#237;as</ref></p>
</item>
</list>
</div>
      <div type="2"><head>Agradecimientos</head>
<p>El autor del tutorial agradece a los revisores del tutorial original, Matthew Lincoln y a Terhi Nurmikko-Fuller, y al editor, Admam Cyrmble, por dedicar tiempo generosamente a ayudarle a mejorar este tutorial con numerosas sugerencias, aclaraciones y correcciones. Esta lecci&#243;n se basa en un trabajo perteneciente al &#8220;Tesauro de historia Brit&#225;nica e Irlandsesa como SKOS&#8221; (proyecto <ref target="http://www.history.ac.uk/projects/digital/tobias">Tobias</ref>), financiado por el <ref target="http://www.ahrc.ac.uk/">AHRC</ref>. Ha sido revisado para <emph>The Programming Historian</emph>.</p>
</div>
    </body>
  </text>
</TEI>
