<TEI xmlns="http://www.tei-c.org/ns/1.0" xml:id="introduccion-datos-abiertos-enlazados">
  <teiHeader>
 <fileDesc>
  <titleStmt>
   <title>Introducci&#243;n a los Datos abiertos enlazados</title>
  <author type="original_author">Jonathan Blaney</author><editor type="reviewers"><persName>Tehri Nurmikko-Fuller</persName><persName>Matthew Lincoln</persName></editor><author type="translators">Mar&#237;a-Jes&#250;s Colmenero-Ruiz</author><editor type="translation-reviewers"><persName>Maria Jose Afanador</persName><persName>Antonio Rojas Castro</persName></editor><editor type="editors">Adam Crymble</editor></titleStmt>
  <publicationStmt>
   <idno type="doi">10.46430/phes0038</idno><date type="published">05/07/2017</date><date type="translated">06/02/2018</date><p>Lesson reviewed and published in Programming Historian.</p>
  </publicationStmt>
  <sourceDesc>
  <p>Born digital, in a markdown format. Original file: <ref type="original_file" target="#intro-to-linked-data"/>.</p><p>There are other translations: <ref target="#introducao-dados-abertos-conectados"/></p></sourceDesc>
 </fileDesc>
 <profileDesc><abstract><p>Con este tutorial aprender&#225;s los fundamentos (URIs, ontolog&#237;as, formato RDF y, muy brevemente, SPARQL) de los Datos abiertos enlazados.</p></abstract><textClass><keyword xml:lang="en">lod</keyword></textClass></profileDesc>
</teiHeader>
  <text xml:lang="es">
    <body>
      <div type="2"><head>Introducci&#243;n y contexto de la lecci&#243;n</head>
<p>Esta lecci&#243;n ofrece una introducci&#243;n breve y concisa a los <link target="https://es.wikipedia.org/wiki/Datos_enlazados">datos abiertos enlazados</link>    (<emph>Linked Open Data</emph>, LOD). No es necesario ning&#250;n conocimiento previo. Los lectores lograr&#225;n comprender de forma clara los conceptos que fundamentan los datos abiertos enlazados, c&#243;mo se utilizan y c&#243;mo se crean. El tutorial se divide en cinco partes, m&#225;s una de lecturas adicionales:</p>
<ol>
<li>Datos abiertos enlazados: &#191;qu&#233; son?</li>
<li>El papel del <link target="https://es.wikipedia.org/wiki/Identificador_de_recursos_uniforme">Identificador de Recursos Uniforme</link> (URI)</li>
<li>C&#243;mo los LOD organizan el conocimiento: <link target="https://es.wikipedia.org/wiki/Ontolog%C3%ADa_(inform%C3%A1tica)">ontolog&#237;as</link></li>
<li>El <link target="https://es.wikipedia.org/wiki/Resource_Description_Framework">Marco de descripci&#243;n de recursos</link> (RDF) y formatos de datos</li>
<li>C&#243;mo interrogar los datos abiertos enlazados con <link target="https://es.wikipedia.org/wiki/SPARQL">SPARQL</link></li>
<li>Lecturas y recursos adicionales</li>
</ol>
<p>El tutorial puede completarse en un par de horas, pero siempre es posible releer algunas secciones para reforzar la comprensi&#243;n. Los t&#233;rminos t&#233;cnicos se han enlazado con su p&#225;gina correspondiente en Wikipedia; te animamos a hacer una pausa y leer sobre los t&#233;rminos que encuentres m&#225;s complejos. Despu&#233;s de haber aprendido algunos de los principios clave de LOD, la mejor manera de mejorar y consolidar ese conocimiento es practicar. Este tutorial ofrece oportunidades para hacerlo. Al final del curso deber&#237;as entender los fundamentos de LOD, incluyendo t&#233;rminos y conceptos clave.</p>
<p>Si necesitas aprender a explorar los LOD usando el lenguaje de consulta <link target="https://es.wikipedia.org/wiki/SPARQL">SPARQL</link>, recomiendo la lecci&#243;n <link target="/es/lecciones/sparql-datos-abiertos-enlazados">'Uso de SPARQL para acceder a datos abiertos enlazados'</link> de Matthew Lincoln, que sigue de una forma pr&#225;ctica la perspectiva conceptual ofrecida en esta lecci&#243;n.</p>
<p>Con el fin de proporcionar a los lectores una base s&#243;lida de los principios b&#225;sicos de LOD, este tutorial no ofrecer&#225; una cobertura completa de todos los conceptos LOD. Los siguientes dos conceptos de LOD <emph>no</emph> se explicar&#225;n en esta lecci&#243;n:</p>
<ol>
<li>
<p>La <link target="https://es.wikipedia.org/wiki/Web_sem%C3%A1ntica">web sem&#225;ntica</link> y el <link target="https://en.wikipedia.org/wiki/Semantic_reasoner">razonamiento sem&#225;ntico</link> de <link target="https://es.wikipedia.org/wiki/Conjunto_de_datos">conjuntos de datos</link>. Un razonador sem&#225;ntico deducir&#237;a que Jorge VI es el hermano o medio hermano de Eduardo VIII, dado el hecho de que a) Eduardo VIII es el hijo de Jorge V y b) Jorge VI es el hijo de Jorge V. Este tutorial no se centra en este tipo de tareas.</p>
</li>
<li>
<p>La creaci&#243;n y subida de conjuntos de datos abiertos enlazados a la <link target="http://linkeddatacatalog.dws.informatik.uni-mannheim.de/state/">nube de datos enlazados</link>. Compartir tus LOD es un principio importante, al que se anima m&#225;s adelante. Sin embargo, los aspectos pr&#225;cticos de contribuir con tus LOD a la nube de datos enlazados est&#225; fuera del alcance de esta lecci&#243;n. Al final de este tutorial hay algunos recursos disponibles que pueden ayudarte a comenzar con esta tarea.</p>
</li>
</ol>
</div>
      <div type="2"><head>Datos abiertos enlazados: &#191;qu&#233; son?</head>
<p>LOD es informaci&#243;n estructurada en un formato destinado a las m&#225;quinas y, por tanto, no es necesariamente f&#225;cil de entender a primera vista. No te desanimes por esto, ya que una vez que entiendas los principios, puedes conseguir que una m&#225;quina los lea por ti.</p>
<p>Si todos los conjuntos de datos se publicaran en abierto y se usara el mismo formato para estructurar la informaci&#243;n, ser&#237;a posible interrogar todos los conjuntos de datos a la vez. Analizar enormes vol&#250;menes de datos es potencialmente mucho m&#225;s efectivo que la publicaci&#243;n individual de los conjuntos de datos propios distribuidos por la web en lo que se conoce como <link target="https://en.wikipedia.org/wiki/Information_silo">silos de informaci&#243;n</link>. Estos conjuntos de datos interoperables son el destino al que los profesionales de los LOD desean acercarse.</p>
<p>Para lograr este objetivo, al trabajar con LOD, recuerda siempre los tres principios siguientes:</p>
<ol>
<li>
<p><hi rend="bold">Utiliza un formato est&#225;ndar de LOD reconocido</hi>. Para que los LOD funcionen, los datos deben estar <link target="https://es.wikipedia.org/wiki/Estructura_de_datos">estructurados</link> usando est&#225;ndares reconocidos para que los ordenadores que interrogan los datos puedan procesarlos de manera consistente. Existen varios formatos para LOD, algunos de los cuales se analizan m&#225;s adelante.</p>
</li>
<li>
<p><hi rend="bold">Refi&#233;rete a una entidad de la misma forma que otras personas</hi>. Si tienes datos sobre la misma persona/lugar/cosa en dos o m&#225;s sitios, aseg&#250;rate de referirte a la persona/lugar/cosa de la misma manera en todos los casos.</p>
</li>
<li>
<p><hi rend="bold">Publica tus datos en abierto</hi>. Con la expresi&#243;n "en abierto" queremos decir que cualquier persona pueda usarlos sin pagar una cuota y en un formato que no requiera <link target="https://en.wikipedia.org/wiki/Proprietary_software">programas de pago</link>.</p>
</li>
</ol>
<p>Comencemos con un ejemplo de datos sobre una persona, usando un habitual <link target="https://en.wikipedia.org/wiki/Attribute%E2%80%93value_pair">par atributo-valor</link> t&#237;pico en computaci&#243;n:</p>
<pre><code xml:id="code_introduccion-datos-abiertos-enlazados_0" type="block" corresp="code_introduccion-datos-abiertos-enlazados_0.txt"/></pre>
<p>En este caso, el 'atributo' es una persona. Y el valor &#8212;o quien es esa persona&#8212; est&#225; representado por un n&#250;mero. El n&#250;mero podr&#237;a ser asignado al azar o podr&#237;as utilizar un n&#250;mero que ya estaba asociado con ese individuo. Este &#250;ltimo enfoque tiene grandes ventajas: si todo el mundo que crea un conjunto de datos que menciona esa persona utiliza <emph>exactamente el mismo n&#250;mero</emph> y en <emph>exactamente el mismo formato</emph>, entonces podemos encontrar de forma fiable a ese individuo en cualquier conjunto de datos que se adhiera a esas reglas.</p>
<p>Vamos a crear un ejemplo con Jack Straw. Con este nombre propio podemos referirnos tanto a un rebelde ingl&#233;s del siglo XIV como a un prominente ministro del gabinete brit&#225;nico de Tony Blair. Claramente es &#250;til poder diferenciar a las dos personas que comparten un nombre com&#250;n. Utilizando el modelo anterior en el que cada persona est&#225; representada por un n&#250;mero &#250;nico, identifiquemos al ministro brit&#225;nico Jack Straw con el n&#250;mero <code type="inline">64183282</code>. Su par de atributo-valor entonces se ver&#237;a as&#237;:</p>
<pre><code xml:id="code_introduccion-datos-abiertos-enlazados_1" type="block" corresp="code_introduccion-datos-abiertos-enlazados_1.txt"/></pre>
<p>A continuaci&#243;n, vamos a identificar al Jack Straw descrito por el <emph><link target="http://www.oxforddnb.com">Oxford Dictionary of National Biography</link></emph> como 'el enigm&#225;tico l&#237;der rebelde' con el n&#250;mero <code type="inline">33059614</code>. En consecuencia, su par atributo-valor ser&#237;a el siguiente:</p>
<pre><code xml:id="code_introduccion-datos-abiertos-enlazados_2" type="block" corresp="code_introduccion-datos-abiertos-enlazados_2.txt"/></pre>
<p>Procurando que todo aqu&#233;l que crea LOD use estos dos n&#250;meros para referirse al Jack Straw respectivo, podremos entonces buscar a la persona<code type="inline"> 64183282</code> en un conjunto de datos abierto enlazado y estar seguros de que estamos obteniendo a la persona adecuada -en este caso, el ministro-.</p>
<p>Los pares atributo-valor tambi&#233;n pueden almacenar informaci&#243;n sobre otros tipos de entidades, como, por ejemplo, lugares. Jack Straw el pol&#237;tico moderno fue miembro del parlamento brit&#225;nico, representando a Blackburn. Hay m&#225;s de un lugar en el Reino Unido llamado Blackburn, por no hablar de otros Blackburns en todo el mundo. Usando los mismos principios descritos anteriormente, podemos desambiguar entre los diferentes Blackburns asignando un identificador &#250;nico al lugar correcto: Blackburn en Lancashire, Inglaterra.</p>
<pre><code xml:id="code_introduccion-datos-abiertos-enlazados_3" type="block" corresp="code_introduccion-datos-abiertos-enlazados_3.txt"/></pre>
<p>En este momento podr&#237;as estar pensando, "esto es lo que hace el cat&#225;logo de la biblioteca". Es cierto que la idea clave aqu&#237; es la de <link target="https://es.wikipedia.org/wiki/Control_de_autoridades">control de autoridades</link>, que es central en biblioteconom&#237;a (un fichero de autoridad es una lista cerrada de t&#233;rminos que pueden ser utilizados en un contexto particular, por ejemplo cuando se cataloga un libro). En ambos ejemplos mencionados anteriormente, hemos utilizado los ficheros de autoridad para asignar los n&#250;meros (los identificadores &#250;nicos) a los Jacks y a Blackburn. Los n&#250;meros que utilizamos para los dos Jack Straws provienen del <link target="https://viaf.org">Virtual International Authority File - Archivo de Autoridades Internacional Virtual</link> (VIAF), que es mantenido por un consorcio de bibliotecas de todo el mundo para tratar de abordar el problema de la mir&#237;ada de formas en las que una misma persona podr&#237;a ser nombrada. El identificador &#250;nico que utilizamos para el distrito electoral de Blackburn provino de <link target="http://www.geonames.org/">GeoNames</link>, una base de datos geogr&#225;fica gratuita.</p>
<p>Pero intentemos ser m&#225;s precisos por lo que entendemos por Blackburn en este caso. Jack Straw ejerci&#243; su cargo parlamentario en representaci&#243;n de Blackburn (que cuenta con un solo miembro en el parlamento brit&#225;nico). Los l&#237;mites de Blackburn han cambiado con el paso del tiempo, as&#237; que en el proyecto '<link target="https://repository.jisc.ac.uk/6544/">Digging Into Linked Parliamentary Data</link>' (Dilipad) (en el que trabaj&#233;) se crearon identificadores &#250;nicos para las afiliaciones a partidos y para los distritos electorales de cada miembro del parlamento. En este ejemplo, Jack Straw represent&#243; a la circunscripci&#243;n conocida como 'Blackburn' en su encarnaci&#243;n posterior a 1955:</p>
<pre><code xml:id="code_introduccion-datos-abiertos-enlazados_4" type="block" corresp="code_introduccion-datos-abiertos-enlazados_4.txt"/></pre>
<p>Como VIAF es un archivo de autoridad reputado y bien mantenido de personas notables, fue un conjunto obvio de identificadores a usar para Jack Straw. Como el electorado representado por Straw estaba cubierto perfectamente por los archivos de autoridad creados por el proyecto Dilipad, tambi&#233;n fue l&#243;gico usarlos. Por desgracia, no siempre es tan obvio cu&#225;l de las listas publicadas en l&#237;nea es mejor utilizar. Una podr&#237;a ser m&#225;s usada que otra, pero quiz&#225;s esta &#250;ltima ofrezca informaci&#243;n m&#225;s completa para un prop&#243;sito particular. GeoNames funcionar&#237;a mejor que los identificadores Dilipad en algunos casos. Tambi&#233;n habr&#225; casos en los que no puedas encontrar un conjunto de datos con esa informaci&#243;n. Por ejemplo, imagina que quisieras escribir pares de atributo-valor sobre ti y tus relaciones familiares cercanas. En este caso, tendr&#237;as que inventar tus propios identificadores.</p>
<p>La falta de archivos de autoridad consistentes es uno de los principales retos a los que los LOD se enfrentan en este momento. <link target="https://es.wikipedia.org/wiki/Tim_Berners-Lee">Tim Berners-Lee</link>, quien ide&#243; una forma de vincular documentos a trav&#233;s de una red creando as&#237; la World Wide Web, ha sido durante mucho tiempo uno de sus proponentes principales de los LOD. Para alentar un mayor uso de los LOD sugiri&#243; un '<link target="https://www.w3.org/DesignIssues/LinkedData.html">sistema de calificaci&#243;n de cinco estrellas</link>' que anime a todos a avanzar lo m&#225;s posible hacia los LOD. En esencia, cree que es bueno publicar datos en abierto, especialmente si se utilizan formatos abiertos y est&#225;ndares p&#250;blicos, pero mejor si tambi&#233;n se enlaza con los datos de otras personas.</p>
<p>Una vez que se asignan identificadores &#250;nicos a todos los elementos, el siguiente paso es clave en la creaci&#243;n de LOD para tener una manera de <emph>describir</emph> la relaci&#243;n entre Jack Straw (<code type="inline">64183282</code>) y Blackburn (<code type="inline">blackburn1955-current</code>). En los LOD, las relaciones se expresan utilizando lo que se conoce como una '<link target="https://en.wikipedia.org/wiki/Semantic_triple">tripleta</link>'. Hagamos una tripleta que representa la relaci&#243;n entre Jack Straw y su circunscripci&#243;n electoral:</p>
<pre><code xml:id="code_introduccion-datos-abiertos-enlazados_5" type="block" corresp="code_introduccion-datos-abiertos-enlazados_5.txt"/></pre>
<p>La presentaci&#243;n (o <link target="https://es.wikipedia.org/wiki/Sintaxis">sintaxis</link>) de las tripletas, incluida la puntuaci&#243;n utilizada anteriormente, se analizar&#225; m&#225;s adelante, en la secci&#243;n sobre RDF y formatos de datos. Por ahora, conc&#233;ntrate en la estructura b&#225;sica. La tripleta, como es l&#243;gico, tiene tres partes. &#201;stas se conocen convencionalmente como sujeto, predicado y objeto:</p>
<table>
<thead>
<tr>
<th>sujeto</th>
<th>predicado</th>
<th>objeto</th>
</tr>
</thead>
<tbody>
<tr>
<td>persona 64183282</td>
<td>representanteEnElParlamentoUK</td>
<td>"blackburn1955-current"</td>
</tr>
</tbody></table><p>La forma tradicional de representar una tripleta en forma de diagrama es:</p>
<figure><desc>Manera cl&#225;sica de representar una tripleta</desc><graphic url="intro-a-datos-enlazados-fig5.png"/></figure>
<p>As&#237; que nuestra tripleta de Jack Straw, en una forma m&#225;s legible para los humanos, podr&#237;a representarse as&#237;:</p>
<figure><desc>Diagrama triple que muestra que Jack Straw represent&#243; a Blackburn</desc><graphic url="intro-a-datos-enlazados-fig6.png"/></figure>
<p>Por ahora hay tres puntos clave que recordar:</p>
<ul>
<li>Los LOD deben ser abiertos y estar disponibles para cualquier persona en Internet (de lo contrario, no son 'abiertos')</li>
<li>Los impulsores de los LOD tienen como objetivo estandarizar las formas de referirse a entidades &#250;nicas</li>
<li>Los LOD consisten en tripletas que describen relaciones entre entidades</li>
</ul>
</div>
      <div type="2"><head>El papel del Identificador Uniforme de Recursos (Uniform Resource Identifier - URI)</head>
<p>Una parte esencial de los LOD es el <link target="https://es.wikipedia.org/wiki/Identificador_de_recursos_uniforme">Identificador Uniforme de Recursos</link> o URI. El URI es una manera un&#237;voca y fiable de representar una entidad (una persona, un objeto, una relaci&#243;n, etc.) en una forma que es utilizable por todo el mundo.</p>
<p>En la secci&#243;n anterior usamos dos n&#250;meros distintos para identificar nuestros dos Jack Straws diferentes.</p>
<pre><code xml:id="code_introduccion-datos-abiertos-enlazados_6" type="block" corresp="code_introduccion-datos-abiertos-enlazados_6.txt"/></pre>
<p>El problema es que en todo el mundo hay muchas bases de datos que contienen personas con estos n&#250;meros, y probablemente sean personas diferentes. Fuera de nuestro contexto inmediato, estas cifras no identifican individuos &#250;nicos. Tratemos de arreglar eso. Aqu&#237; est&#225;n estos mismos identificadores pero como URI:</p>
<pre><code xml:id="code_introduccion-datos-abiertos-enlazados_7" type="block" corresp="code_introduccion-datos-abiertos-enlazados_7.txt"/></pre>
<p>As&#237; como el n&#250;mero &#250;nico desambigu&#243; nuestros dos Jack Straws, el URI completo anterior nos ayuda a eliminar la ambig&#252;edad entre todos los diferentes archivos de autoridad que existen. En este caso, est&#225; claro que estamos usando VIAF como nuestro archivo de autoridad. Ya has visto esta forma de desambiguaci&#243;n muchas veces en la web. Hay muchos sitios web alrededor del mundo con p&#225;ginas llamadas <code type="inline">/home</code> o <code type="inline">/faq</code>. Pero no hay confusi&#243;n porque el <link target="https://es.wikipedia.org/wiki/Dominio_de_Internet">dominio</link> (la primera parte del Localizador Uniforme de Recursos (URL) - por ejemplo,<code type="inline">bbc.co.uk</code>) es &#250;nico y, por lo tanto, todas las p&#225;ginas que son parte de ese dominio son &#250;nicas, diferenci&#225;ndose de otras p&#225;ginas <code type="inline">/faq</code> de otros sitios web. En la direcci&#243;n <code type="inline">http://www.bbc.co.uk/faqs</code>, es la parte <code type="inline">bbc.co.uk</code> la que hace &#250;nicas las p&#225;ginas siguientes. Esto es tan obvio para las personas que usan la web todo el tiempo que no piensan en ello. Probablemente tambi&#233;n sepas que si quieres iniciar un sitio web llamado <code type="inline">bbc.co.uk</code> no puedes hacerlo, porque ese nombre ya se ha registrado con la autoridad correspondiente, que es el <link target="https://es.wikipedia.org/wiki/Sistema_de_nombres_de_dominio">Sistema de Nombres de Dominio</link> (Domain Name System - DNS). El registro garantiza la unicidad. Los URIs tambi&#233;n deben ser &#250;nicos.</p>
<p>Si bien los ejemplos anteriores se parecen a las URLs, es posible tambi&#233;n construir un URI que no se parezca en nada a una URL. Tenemos muchas maneras de identificar personas y cosas de manera &#250;nica y rara vez lo pensamos o nos preocupamos de ello. Los c&#243;digos de barras, los n&#250;meros de pasaporte e incluso tu direcci&#243;n postal est&#225;n dise&#241;ados para ser &#250;nicos. En el mundo desarrollado los n&#250;meros de tel&#233;fono m&#243;vil se colocan con frecuencia en los carteles de las tiendas precisamente porque son &#250;nicos. Todos ellos podr&#237;an usarse como URIs.</p>
<p>Cuando quisimos crear URIs para las entidades descritas por el proyecto '<link target="http://www.history.ac.uk/projects/digital/tobias">Tobias</link>', elegimos una estructura tipo URL y elegimos utilizar nuestro espacio web institucional, dejando de lado  <code type="inline">data.history.ac.uk/tobias-project/</code> como un lugar dedicado a alojar estos URI. Al ponerlo en <code type="inline">data.history.ac.uk</code> en lugar de en <code type="inline">history.ac.uk</code>, hubo una separaci&#243;n clara entre los URI y las p&#225;ginas del sitio web. Por ejemplo, uno de los URIs del proyecto Tobias era <link target="http://data.history.ac.uk/tobias-project/person/15601">http://data.history.ac.uk/tobias-project/person/15601</link>. Si bien el formato de los URI mencionados anteriormente es el mismo que el de una URL, no se vinculan a p&#225;ginas web (intenta pegarlas en un navegador web). Muchas personas nuevas con los LOD encuentran esto confuso. Todas las URL son URI, pero no todas las URI son URL. Una URI puede describir cualquier cosa, mientras que una URL describe la ubicaci&#243;n de algo en la web. Es decir, una URL te dice la ubicaci&#243;n de una p&#225;gina web o un archivo o algo similar. Un URI simplemente hace el trabajo de identificar algo. As&#237; como el N&#250;mero Est&#225;ndar Internacional de Libro, o <link target="https://www.iso.org/standard/36563.html">ISBN</link> 978-0-1-873354-6 identifica de manera &#250;nica una edici&#243;n de tapa dura de <emph>Bautismo, Hermandad y Creencias en la Reforma de Alemania</emph> por Kat Hill, pero no te dice d&#243;nde conseguir una copia. Para eso, necesitar&#237;as algo como una <link target="https://www.upo.es/biblioteca/guia_loc_sig/signatura/index.html">signatura</link>, que te da una ubicaci&#243;n exacta en un estante de una biblioteca espec&#237;fica.</p>
<p>Hay un poco de jerga alrededor de los URIs. La gente habla de si son, o no, <link target="https://es.wikipedia.org/wiki/Referencia_(inform%C3%A1tica)">desreferenciables</link>. Eso solo significa que <emph>&#191;se puede pasar desde una referencia abstracta a otra cosa?</emph> Por ejemplo, si pegas un URI en la barra de direcciones de un navegador, &#191;devolver&#225; algo? El URI de VIAF para el historiador Simon Schama es:</p>
<pre><code xml:id="code_introduccion-datos-abiertos-enlazados_8" type="block" corresp="code_introduccion-datos-abiertos-enlazados_8.txt"/></pre>
<p>Si lo pones en el navegador, obtendr&#225;s una p&#225;gina web sobre Simon Schama que contiene datos estructurados sobre &#233;l y su historial de publicaciones. Esto es muy &#250;til, pero, por otro lado, no es obvio desde la URI a qui&#233;n o incluso a qu&#233; se refiere. Del mismo modo, si tratamos un n&#250;mero de tel&#233;fono m&#243;vil (con c&#243;digo internacional) como URI para una persona, entonces deber&#237;a ser desreferenciable. Alguien podr&#237;a responder el tel&#233;fono, e incluso podr&#237;a ser Schama.</p>
<p>Pero esto no es esencial. Muchos de los URI no son desreferenciables, como en el ejemplo anterior del proyecto Tobias. No puedes encontrarlo en ning&#250;n sitio; es una convenci&#243;n.</p>
<p>El ejemplo de VIAF nos lleva a otra cosa importante sobre los URIs: no debes crearlos a menos que sea necesario. Las personas y las organizaciones han estado haciendo esfuerzos concertados para construir listas de URIs adecuadas y los LOD no funcionar&#225;n de manera efectiva si la gente duplica ese trabajo creando nuevos URIs innecesariamente. Por ejemplo, VIAF cuenta con el apoyo de muchas bibliotecas a nivel internacional. Si deseas construir URI para personas, VIAF es una muy buena opci&#243;n. Si no puedes encontrar a algunas personas en VIAF, u otras listas de autoridades, s&#243;lo entonces podr&#237;as necesitar hacer las tuyas propias.</p>
</div>
      <div type="2"><head>C&#243;mo organizan los LOD el conocimiento: ontolog&#237;as</head>
<p>Puede que no haya sido obvio por las tripletas individuales que vimos en la secci&#243;n de apertura, pero los LOD pueden responder preguntas complejas. Cuando unes las tripletas forman un <link target="https://en.wikipedia.org/wiki/Conceptual_graph">grafo</link>, debido a la forma en que las tripletas se entrelazan. Supongamos que queremos encontrar una lista de todas las personas que fueron alumnos del compositor Franz Liszt. Si la informaci&#243;n est&#225; en tripletas de datos enlazados sobre pianistas y sus profesores, podemos averig&#252;arlo con una consulta (veremos este lenguaje de consulta, llamado SPARQL, en la secci&#243;n final).</p>
<p>Por ejemplo, el pianista Charles Rosen fue alumno del pianista Moriz Rosenthal, quien a su vez fue alumno de Franz Liszt. Ahora expresemos eso como dos tripletas (nos limitaremos a usar cadenas para los nombres en lugar de n&#250;meros de ID para que los ejemplos sean m&#225;s legibles):</p>
<pre><code xml:id="code_introduccion-datos-abiertos-enlazados_9" type="block" corresp="code_introduccion-datos-abiertos-enlazados_9.txt"/></pre>
<p>Podr&#237;amos haber creado nuestras tripletas igualmente de esta manera:</p>
<pre><code xml:id="code_introduccion-datos-abiertos-enlazados_10" type="block" corresp="code_introduccion-datos-abiertos-enlazados_10.txt"/></pre>
<p>Estamos poniendo ejemplos simplemente con el fin de ilustrar, pero si deseas enlazar tus datos a otros conjuntos de datos en la 'nube de datos vinculados' debes ver qu&#233; convenciones se utilizan en esos conjuntos de datos y hacer lo mismo. En realidad, esta es una de las caracter&#237;sticas m&#225;s &#250;tiles de los LOD porque gran parte del trabajo se ha realizado para ti. La gente ha dedicado mucho tiempo a desarrollar formas de modelar informaci&#243;n dentro de un &#225;rea particular de estudio y a pensar en c&#243;mo se pueden representar las relaciones dentro de esa &#225;rea. Estos modelos generalmente se conocen como ontolog&#237;as. Una ontolog&#237;a es una abstracci&#243;n que permite que representar un conocimiento particular sobre el mundo. Las ontolog&#237;as, en este sentido, son bastante nuevas y fueron dise&#241;adas para hacer lo que hace una <link target="https://es.wikipedia.org/wiki/Taxonom%C3%ADa">taxonom&#237;a</link> jer&#225;rquica (como la clasificaci&#243;n de las especies del <link target="https://es.wikipedia.org/wiki/Taxonom%C3%ADa_linneana">sistema de Linneo</link>), pero de manera m&#225;s flexible.</p>
<p>Una ontolog&#237;a es m&#225;s flexible porque no es jer&#225;rquica. Su objetivo es representar la fluidez del mundo real, donde las cosas se pueden relacionar entre s&#237; de formas m&#225;s complejas que las representadas por una estructura jer&#225;rquica de tipo arb&#243;reo. En cambio, una ontolog&#237;a es m&#225;s como una tela de ara&#241;a.</p>
<p>Sea lo que sea que desees representar con los LOD, te sugerimos que busques un vocabulario existente y lo uses, en lugar de intentar escribir el tuyo propio. Esta p&#225;gina principal incluye <link target="http://semanticweb.org/wiki/Main_Page.html">una lista de algunos de los vocabularios m&#225;s populares</link></p>
<blockquote>
<p>N.T.: despl&#225;zate hacia la zona derecha/abajo de la p&#225;gina: "Popular Vocabularies"</p>
</blockquote>
<p>Dado que nuestro anterior ejemplo se centra en los pianistas, ser&#237;a una buena idea encontrar una ontolog&#237;a adecuada en lugar de crear nuestro propio sistema. De hecho, hay <link target="http://web.archive.org/web/20170715094229/http://www.musicontology.com/">una ontolog&#237;a para la m&#250;sica</link>. Adem&#225;s de una especificaci&#243;n bien desarrollada, tiene tambi&#233;n algunos ejemplos &#250;tiles de su uso. Puedes echar un vistazo a las p&#225;ginas de <link target="http://web.archive.org/web/20170718143925/http://musicontology.com/docs/getting-started.html">Introducci&#243;n</link> para tener una idea de c&#243;mo puedes usar esa ontolog&#237;a particular.</p>
<p>Lamentablemente, no encuentro nada que describa la relaci&#243;n entre un profesor y un alumno en Music Ontology. Pero la ontolog&#237;a se publica en abierto, as&#237; que puedo usarla para describir otras caracter&#237;sticas de la m&#250;sica y luego crear mi propia extensi&#243;n. Si luego publico mi extensi&#243;n en abierto, otros pueden usarla si lo desean y puede convertirse en un est&#225;ndar. Si bien el proyecto Music Ontology no tiene la relaci&#243;n que necesito, el proyecto <link target="https://linkedjazz.org/">Linked Jazz</link> permite el uso de 'mentorDe', que parece que podr&#237;a funcionar bien en nuestro caso. Aunque esta no es la soluci&#243;n ideal, conviene esforzarse por usar lo que ya existe.</p>
<p>Ahora bien, si estuvieras estudiando la historia de los pianistas, querr&#237;as identificar a muchos pianistas a quienes los alumnos de Liszt ense&#241;aron, establecer una especie de &#225;rbol geneal&#243;gico y ver si estos "nietos" de Liszt tienen algo en com&#250;n. Podr&#237;as investigar a los alumnos de Liszt, hacer una gran lista de ellos, y luego investigar a cada uno de los alumnos e intentar hacer una lista de los alumnos que tuvieron. Con los LOD podr&#237;as (de nuevo, si es que las tripletas existen) hacer una consulta como:</p>
<pre><code xml:id="code_introduccion-datos-abiertos-enlazados_11" type="block" corresp="code_introduccion-datos-abiertos-enlazados_11.txt"/></pre>
<p>La consulta devolver&#237;a todas las personas en el conjunto de datos que fueron alumnos de un alumno de Liszt. No nos entusiasmemos demasiado: esta consulta no nos dar&#225; a cada alumno de cada alumno de Liszt que haya existido alguna vez porque esa informaci&#243;n probablemente no exista y no exista dentro de ning&#250;n grupo de tripletas existente. Lidiar con datos del mundo real muestra todo tipo de omisiones e inconsistencias que veremos cuando analicemos el mayor conjunto de LOD, <link target="http://wiki.dbpedia.org">DBpedia</link>, en la secci&#243;n final.</p>
<p>Si has utilizado <link target="https://en.wikipedia.org/wiki/Relational_database">bases de datos relacionales</link>, podr&#237;as pensar que pueden realizar la misma funci&#243;n. En el caso de Liszt, la informaci&#243;n sobre pianistas descrita anteriormente podr&#237;a organizarse en una <link target="https://es.wikipedia.org/wiki/Base_de_datos_relacional">tabla</link> de base de datos llamada algo as&#237; como 'Alumnos'.</p>
<table>
<thead>
<tr>
<th>alumnoID</th>
<th>profesorID</th>
</tr>
</thead>
<tbody>
<tr>
<td>31</td>
<td>17</td>
</tr>
<tr>
<td>35</td>
<td>17</td>
</tr>
<tr>
<td>49</td>
<td>28</td>
</tr>
<tr>
<td>56</td>
<td>28</td>
</tr>
<tr>
<td>72</td>
<td>40</td>
</tr>
</tbody></table><p>Si no est&#225;s familiarizado con las bases de datos, no te preocupes. Pero probablemente a&#250;n puedas ver que algunos pianistas en esta tabla ten&#237;an el mismo profesor (n&#250;meros 17 y 28). Sin entrar en detalles, si Liszt est&#225; en esta tabla de la base de datos, ser&#237;a bastante f&#225;cil extraer los alumnos de los alumnos de Liszt, utilizando la sentencia SQL <link target="https://es.wikipedia.org/wiki/Join">join</link>.</p>
<p>De hecho, las bases de datos relacionales pueden ofrecer resultados similares a los LOD. La gran diferencia es que los LOD pueden ir m&#225;s all&#225;: puede enlazar conjuntos de datos creados sin intenci&#243;n expl&#237;cita de ser enlazados. El uso de <link target="https://es.wikipedia.org/wiki/Resource_Description_Framework">Resource Description Framework</link> (RDF) y las URIs permite que esto suceda.</p>
</div>
      <div type="2"><head>RDF y formatos de datos</head>
<p>Los LOD usan un est&#225;ndar, definido por el <link target="https://www.w3.org/">World Wide Web Consortium</link>, o W3C, llamado <emph><link target="https://es.wikipedia.org/wiki/Resource_Description_Framework">Resource Description Framework</link></emph>, o simplemente RDF. Los est&#225;ndares son &#250;tiles siempre que sean adoptados de forma generalizada -piensa en el metro o en los tama&#241;os est&#225;ndar de tornillo- incluso si son esencialmente arbitrarios. RDF ha sido adoptado como el est&#225;ndar para los LOD.</p>
<p>A menudo oir&#225;s que los LOD son denominados simplemente como RDF. Hemos retrasado hablar de RDF hasta ahora porque es bastante abstracto. RDF es un <link target="https://es.wikipedia.org/wiki/Modelo_de_datos">modelo de datos</link> que describe c&#243;mo se estructuran los datos en un nivel te&#243;rico. As&#237;, la insistencia en usar tripletas (en lugar de cuatro partes, o dos o nueve, por ejemplo) es una regla de RDF. Pero cuando se trata de asuntos m&#225;s pr&#225;cticos, tienes algunas opciones de implementaci&#243;n. Por tanto, RDF te dice lo que tienes que hacer, pero no exactamente c&#243;mo tienes que hacerlo. Estas opciones se dividen en dos &#225;reas: c&#243;mo escribes las cosas (serializaci&#243;n) y las relaciones que describen tus tripletas.</p>
<div type="3"><head>Serializaci&#243;n</head>
<p>La <link target="https://es.wikipedia.org/wiki/Serializaci%C3%B3n">serializaci&#243;n</link> es el t&#233;rmino t&#233;cnico para 'c&#243;mo escribes las cosas'. El chino est&#225;ndar (mandar&#237;n) se puede escribir en caracteres tradicionales, caracteres simplificados o romanizaci&#243;n Pinyin y el idioma en s&#237; no cambia. Del mismo modo, RDF se puede escribir en diversas formas. Aqu&#237; veremos dos (hay otros, pero por simplicidad, nos centraremos en estos):</p>
<ol>
<li>
<p><link target="https://es.wikipedia.org/wiki/Turtle_(sintaxis)">Turtle</link></p>
</li>
<li>
<p><link target="https://es.wikipedia.org/wiki/Extensible_Markup_Language">RDF/XML</link></p>
</li>
</ol>
<p>Reconocer qu&#233; serializaci&#243;n est&#225;s viendo significa que puedes elegir las herramientas adecuadas dise&#241;adas para ese formato. Por ejemplo, RDF puede venir serializado en formato <link target="https://es.wikipedia.org/wiki/Extensible_Markup_Language">XML</link>. Luego puedes usar una herramienta o biblioteca de c&#243;digo dise&#241;ada para analizar ese formato en particular, lo que es &#250;til si ya sabes c&#243;mo trabajar con &#233;l. El reconocimiento del formato tambi&#233;n te brinda las palabras clave correctas para buscar ayuda en l&#237;nea. Muchos recursos ofrecen sus bases de datos de LOD para su descarga y puedes elegir qu&#233; serializaci&#243;n deseas descargar.</p>
<div type="4"><head>Turtle</head>
<p>'Turtle' (Tortuga en espa&#241;ol) es un juego de palabras. 'Tur' es la abreviatura de 'terse' (conciso), y 'tle' -es la abreviatura de 'triple language' (lenguaje de tripletas)-. Turtle es una forma gratamente simple de escribir tripletas.</p>
<p>Turtle usa alias o atajos conocidos como <link target="https://www.w3.org/TeamSubmission/turtle/#sec-tutorial">prefijos</link>, lo que nos ahorra tener que escribir URIs completos todo el tiempo. Regresemos al URI que inventamos en la secci&#243;n anterior:</p>
<pre><code xml:id="code_introduccion-datos-abiertos-enlazados_12" type="block" corresp="code_introduccion-datos-abiertos-enlazados_12.txt"/></pre>
<p>No queremos escribir esto cada vez que nos referimos a esta persona (Jack Straw, como recordar&#225;s). Entonces s&#243;lo tenemos que anunciar nuestro atajo:</p>
<pre><code xml:id="code_introduccion-datos-abiertos-enlazados_13" type="block" corresp="code_introduccion-datos-abiertos-enlazados_13.txt"/></pre>
<p>As&#237;, Jack es <code type="inline">toby:15601</code>, que reemplaza el URI largo y es m&#225;s f&#225;cil de leer. He elegido 'toby', pero podr&#237;a haber elegido cualquier cadena de letras con la misma facilidad.</p>
<p>Pasemos ahora de Jack Straw a William Shakespeare y usemos Turtle para describir algunos elementos sobre sus obras. Tendremos que decidir qu&#233; archivos de autoridad usar, un proceso que, como se mencion&#243; anteriormente, se optimiza si consultamos otros conjuntos de LOD. Aqu&#237; usaremos <link target="https://es.wikipedia.org/wiki/Dublin_Core">Dublin Core</link>, un est&#225;ndar de <link target="https://es.wikipedia.org/wiki/Metadato">metadatos</link> usado por las bibliotecas, como uno de nuestros prefijos, el archivo de autoridad del <link target="https://es.wikipedia.org/wiki/Library_of_Congress_Control_Number">N&#250;mero de control de la Biblioteca del Congreso</link> para otro, y el &#250;ltimo (VIAF) deber&#237;a serte familiar. En conjunto, estos tres archivos de autoridad proporcionan identificadores &#250;nicos para todas las entidades que planeo usar en este ejemplo:</p>
<pre><code xml:id="code_introduccion-datos-abiertos-enlazados_14" type="block" corresp="code_introduccion-datos-abiertos-enlazados_14.txt"/></pre>
<p>Ten en cuenta el espaciado del punto final despu&#233;s de la &#250;ltima l&#237;nea. Esta es la forma de Turtle de indicar el final. T&#233;cnicamente no tiene que tener el espacio, pero lo hace m&#225;s f&#225;cil de leer despu&#233;s de una larga cadena de caracteres.</p>
<p>En el ejemplo anterior, lccn: n82011242 representa a Macbeth; dc: creator vincula Macbeth a su autor; viaf: 96994048 representa a William Shakespeare.</p>
<p>Turtle tambi&#233;n te permite listar tripletas sin molestarte en repetir cada URI cuando acabas de usarlo. Agreguemos la fecha en la que los expertos creen que Macbeth fue escrita utilizando el par atributo-valor de Dublin Core:<code type="inline">dc: created 'YYYY'</code> :</p>
<pre><code xml:id="code_introduccion-datos-abiertos-enlazados_15" type="block" corresp="code_introduccion-datos-abiertos-enlazados_15.txt"/></pre>
<p>&#191;Recuerdas la estructura de la tripleta, discutida en la secci&#243;n 1? All&#237; pusimos este ejemplo:</p>
<p><code type="inline">1 persona 15601 (el sujeto) 2  representanteEnElParlamentoUK (el predicado) 3 "Blackburn" (el objeto)</code></p>
<p>La clave es que el predicado conecta el sujeto y el objeto. Describe la relaci&#243;n entre ellos. El sujeto ocupa el primer lugar en la tripleta, pero eso es una cuesti&#243;n de elecci&#243;n propia, como comentamos en el ejemplo de las personas a quienes Liszt ense&#241;&#243; piano.</p>
<p>Puedes usar un punto y coma si el sujeto es el mismo pero el predicado y el objeto son diferentes, o una coma si el sujeto y el predicado son iguales y solo el objeto es diferente.</p>
<pre><code xml:id="code_introduccion-datos-abiertos-enlazados_16" type="block" corresp="code_introduccion-datos-abiertos-enlazados_16.txt"/></pre>
<p>Aqu&#237; estamos diciendo que Shakespeare (96994048) y John Fletcher (12323361) fueron los creadores de la obra <emph>Los dos nobles caballeros</emph>.</p>
<p>Cuando anteriormente vimos las ontolog&#237;as, suger&#237; que le echaras un vistazo a los ejemplos de la <link target="http://web.archive.org/web/20170718143925/http://musicontology.com/docs/getting-started.html">Music Ontology</link>. Espero que no te decepcionaran. Echa un vistazo de nuevo ahora. Todav&#237;a es algo complicado, pero &#191;tiene m&#225;s sentido ahora?</p>
<p>Una de las ontolog&#237;as m&#225;s accesibles es Friend of a Friend, o <link target="https://es.wikipedia.org/wiki/FOAF">FOAF</link>. Est&#225; dise&#241;ada para describir personas y es, quiz&#225;s por esa raz&#243;n, bastante intuitiva. Si, por ejemplo, deseas escribirme para decirme que este tutorial es lo mejor que has le&#237;do, aqu&#237; est&#225; mi direcci&#243;n de correo electr&#243;nico expresada como tripletas en FOAF:</p>
<pre><code xml:id="code_introduccion-datos-abiertos-enlazados_17" type="block" corresp="code_introduccion-datos-abiertos-enlazados_17.txt"/></pre>
</div><div type="4"><head>RDF/XML</head>
<p>En contraste con Turtle, RDF/XML puede parecer un poco pesado. Para empezar, convirtamos una tripleta del Turtle anterior, la que dice que Shakespeare fue el creador de <emph>Los dos parientes nobles</emph>:</p>
<pre><code xml:id="code_introduccion-datos-abiertos-enlazados_18" type="block" corresp="code_introduccion-datos-abiertos-enlazados_18.txt"/></pre>
<p>En RDF/XML, con los prefijos declarados dentro del fragmento XML, es as&#237;:</p>
<pre><code xml:id="code_introduccion-datos-abiertos-enlazados_19" type="block" corresp="code_introduccion-datos-abiertos-enlazados_19.txt"/></pre>
<p>El formato RDF/XML tiene la misma informaci&#243;n b&#225;sica que Turtle, pero se escribe de forma muy diferente, bas&#225;ndose en los principios de las etiquetas XML anidadas.</p>
<p>Pasemos a un ejemplo diferente para mostrar c&#243;mo RDF/XML combina tripletas y, al mismo tiempo, presentamos <link target="https://es.wikipedia.org/wiki/Simple_Knowledge_Organization_System">SKOS</link> (Simple Knowledge Organization System - Sistema Simple de Organizaci&#243;n del Conocimiento), que est&#225; dise&#241;ado para codificar tesauros o taxonom&#237;as.</p>
<pre><code xml:id="code_introduccion-datos-abiertos-enlazados_20" type="block" corresp="code_introduccion-datos-abiertos-enlazados_20.txt"/></pre>
<p>Aqu&#237; estamos diciendo que el concepto SKOS <code type="inline">21250</code>, abdicaci&#243;n, tiene una etiqueta preferida de "abdicaci&#243;n". La forma en que funciona es que el elemento sujeto (incluida la parte de abdicaci&#243;n, que es un valor de atributo en t&#233;rminos XML) tiene el predicado y el objeto anidados dentro de &#233;l. El elemento anidado es el predicado y el nodo hoja <link target="https://es.wikipedia.org/wiki/%C3%81rbol_(inform%C3%A1tica)#Terminolog.C3.ADa">(<emph>the leaf node</emph>)</link>, es el objeto. Este ejemplo est&#225; tomado de un proyecto para publicar un <link target="http://www.history.ac.uk/projects/digital/tobias">tesauro de historia brit&#225;nica e irlandesa</link>.</p>
<p>Al igual que con Turtle, podemos agregar m&#225;s tripletas. Entonces, declaremos que el t&#233;rmino m&#225;s restringido en nuestra jerarqu&#237;a de temas, uno m&#225;s abajo de <emph>Abdicaci&#243;n</emph> ser&#225; <emph>Crisis de la abdicaci&#243;n (1936)</emph>.</p>
<pre><code xml:id="code_introduccion-datos-abiertos-enlazados_21" type="block" corresp="code_introduccion-datos-abiertos-enlazados_21.txt"/></pre>
<p>&#191;Recuerdas c&#243;mo los predicados y los objetos est&#225;n anidados dentro del sujeto? Aqu&#237; lo hemos hecho dos veces con el mismo sujeto, por lo que podemos hacer esto menos detallado al anidar ambos conjuntos de predicados y objetos dentro de un sujeto:</p>
<pre><code xml:id="code_introduccion-datos-abiertos-enlazados_22" type="block" corresp="code_introduccion-datos-abiertos-enlazados_22.txt"/></pre>
<p>Si est&#225;s familiarizado con XML, esto ser&#225; muy f&#225;cil para ti. Si no lo est&#225;s, podr&#237;as preferir un formato como Turtle. Pero la ventaja aqu&#237; es que creando tu RDF/XML puedes usar las herramientas habituales disponibles para XML, como editores y analizadores XML, para verificar que tu RDF/XML est&#233; formateado correctamente. Si no tienes experiencia con XML, recomiendo Turtle, para lo que puedes usar una herramienta <link target="http://www.easyrdf.org/converter">en l&#237;nea</link> para verificar que tu sintaxis sea correcta.</p>
</div></div></div>
      <div type="2"><head>Consultas RDF con SPARQL</head>
<p>Para esta secci&#243;n final, interrogaremos algunos LOD y veremos qu&#233; podemos hacer con ellos.</p>
<p>El lenguaje de consulta que utilizamos para los LOD se llama <link target="https://es.wikipedia.org/wiki/SPARQL">SPARQL</link>. Es uno de esos acr&#243;nimos recursivos amados por los tecn&#243;logos: <emph>Protocolo y lenguaje de consulta SPARQL</emph> .</p>
<p>Como mencion&#233; al principio, <emph>The Programming Historian en espa&#241;ol</emph> tiene <link target="/es/lecciones/sparql-datos-abiertos-enlazados">una lecci&#243;n completa</link>, por Matthew Lincoln, sobre el uso de SPARQL. Esta &#250;ltima secci&#243;n s&#243;lo proporciona una descripci&#243;n general de los conceptos b&#225;sicos y, si SPARQL despierta tu inter&#233;s, puedes obtener una base s&#243;lida con el tutorial de Lincoln.</p>
<p>Vamos a ejecutar nuestras consultas SPARQL en <link target="https://es.wikipedia.org/wiki/SPARQL">DBpedia</link>, que es un gran conjunto de LOD derivado de Wikipedia. Adem&#225;s de estar lleno de informaci&#243;n que es muy dif&#237;cil de encontrar a trav&#233;s de la interfaz habitual de Wikipedia, tiene varios "puntos finales" SPARQL: interfaces donde puedes escribir consultas SPARQL y obtener resultados de las tripletas de DBpedia.</p>
<p>El punto de entrada (<emph>endpoint</emph>) de consulta SPARQL que yo uso se llama <link target="http://dbpedia.org/snorql/">snorql</link>. Estos puntos de entrada a veces parecen desconectarse, por lo que, si ese fuera el caso, busca <emph>dbpedia sparql</emph> en internet para encontrar un reemplazo similar.</p>
<p>Si vas a la URL snorql indicada antes, ver&#225;s que al principio ya est&#225;n declarados varios prefijos, lo cual te ser&#225; &#250;til. Tambi&#233;n reconocer&#225;s ya algunos de los prefijos.</p>
<figure><desc>cuadro de consulta predeterminado de snorql, con algunos prefijos declarados para ti</desc><graphic url="intro-to-linked-data-fig1.png"/></figure>
<p>En el cuadro de consulta, debajo de las declaraciones de prefijo, deber&#237;as ver:</p>
<pre><code xml:id="code_introduccion-datos-abiertos-enlazados_23" type="block" corresp="code_introduccion-datos-abiertos-enlazados_23.txt"/></pre>
<p>Si alguna vez ha escrito una consulta de base de datos en <emph>Structured Query Language</emph>, <link target="https://es.wikipedia.org/wiki/SQL">m&#225;s conocido como SQL</link>, esto te resultar&#225; bastante familiar y te ayudar&#225; a aprender SPARQL. Si no, no te preocupes. Las palabras clave utilizadas aqu&#237;, SELECT y WHERE no distinguen entre may&#250;sculas y min&#250;sculas, pero algunas partes de una consulta SPARQL lo pueden hacer (ver a continuaci&#243;n), por lo que te recomiendo que sigas fielmente los ejemplos mostrados a lo largo de las consultas en este curso.</p>
<p>Aqu&#237;  <code type="inline">SELECT</code> significa <emph>devolver algo</emph> y <code type="inline">*</code>  significa <emph>darme todo</emph>. <code type="inline">WHERE</code>introduce una condici&#243;n, que es donde pondremos los detalles de qu&#233; clase de cosas queremos que nos devuelva la consulta.</p>
<p>Comencemos con algo simple para ver c&#243;mo funciona esto. Pega esto (o, mejor, escr&#237;belo) en el cuadro de consulta:</p>
<pre><code xml:id="code_introduccion-datos-abiertos-enlazados_24" type="block" corresp="code_introduccion-datos-abiertos-enlazados_24.txt"/></pre>
<p>Haz clic en "Go!"(ir) y, si dejaste el cuadro desplegable como "Browse" (navegar), deber&#237;as obtener dos columnas con la etiqueta "b" y "c". (Ten en cuenta que aqu&#237;, buscando una cadena, las may&#250;sculas y min&#250;sculas s&#237; importan: lyndal_roper no te dar&#225; ning&#250;n resultado).</p>
<figure><desc>Parte inicial de la lista de resultados de una consulta para todas las tripletas con 'Lyndal_Roper' como sujeto</desc><graphic url="intro-to-linked-data-fig2.png"/></figure>
<p>Recapitulando, &#191;qu&#233; acaba de pasar? &#191;Y c&#243;mo s&#233; qu&#233; escribir?</p>
<p>En realidad no lo sab&#237;a y ese es uno de los problemas con los puntos de entrada SPARQL. Al conocer un conjunto de datos, debes probar y descubrir qu&#233; t&#233;rminos se usan. Como este proviene de Wikipedia y me interesaba saber qu&#233; informaci&#243;n sobre historiadores pod&#237;a encontrar, fui a la p&#225;gina de Wikipedia del historiador <link target="https://en.wikipedia.org/wiki/Lyndal_Roper">Lyndal Roper</link>.</p>
<p>La parte al final de la URL es <code type="inline">Lyndal_Roper</code> y llegu&#233; a la conclusi&#243;n de que esta cadena es probablemente la forma en que se hace referencia a Roper en DBpedia. Como no s&#233; qu&#233; m&#225;s podr&#237;a haber en las tripletas que mencionen a Roper, us&#233; <code type="inline">?a</code> y <code type="inline">?b</code>. Estos son comodines: podr&#237;a haber escrito igualmente  <code type="inline">?en_cualquier_sitio</code> y <code type="inline">?como_gustes</code> y las columnas tendr&#237;an esos t&#237;tulos. Cuando desees ser m&#225;s preciso sobre lo que est&#225;s  obteniendo, ser&#225; m&#225;s importante etiquetar las columnas de forma significativa.</p>
<p>Prueba ahora tu propia consulta SPARQL ahora: elije una p&#225;gina de Wikipedia y copia la parte final de la URL, lo que aparece despu&#233;s de la barra diagonal final, y col&#243;calo en lugar de Lyndal_Roper. Luego presiona 'Go!'.</p>
<p>A partir de la informaci&#243;n que obtienes de estos resultados, es posible generar consultas m&#225;s precisas. Esto puede ser un tanto impredecible, al menos para m&#237;, as&#237; que no te preocupes si algunos no funcionan.</p>
<p>Volvamos a los resultados de la consulta que ejecut&#233; hace un momento:</p>
<pre><code xml:id="code_introduccion-datos-abiertos-enlazados_25" type="block" corresp="code_introduccion-datos-abiertos-enlazados_25.txt"/></pre>
<p>Puedo ver una larga lista en la columna etiquetada como <emph>c</emph> . Estos son todos los atributos que Roper tiene en la DBpedia y nos ayudar&#225;n a encontrar otras personas con estos atributos. Por ejemplo, puedo ver <code type="inline">http://dbpedia.org/class/yago/Historian110177150</code>. &#191;Puedo usar esto para obtener una lista de historiadores? Voy a poner esto en mi consulta pero en tercer lugar (porque ah&#237; es donde estaba cuando lo encontr&#233; en los resultados de Lyndal Roper). Mi consulta se ve as&#237;:</p>
<pre><code xml:id="code_introduccion-datos-abiertos-enlazados_26" type="block" corresp="code_introduccion-datos-abiertos-enlazados_26.txt"/></pre>
<p>He hecho un peque&#241;o cambio aqu&#237;. Si esta consulta funciona entonces espero que mis historiadores est&#233;n en la primera columna, porque "historiador" no parece ser un predicado: no funciona como un verbo en una oraci&#243;n; as&#237; que voy a llamar a mi primera columna de resultados 'nombre_historiador' y a mi segunda (de la que no s&#233; nada) 'predicado'.</p>
<p>Ejecuta la consulta. &#191;Te funciona? Yo obtuve una gran lista de historiadores.</p>
<figure><desc>historiadores, seg&#250;n DBpedia</desc><graphic url="intro-to-linked-data-fig3.png"/></figure>
<p>As&#237; que esto funciona para crear listas, lo cual es &#250;til, pero ser&#237;a mucho m&#225;s potente combinar listas, para obtener intersecciones de conjuntos. Encontr&#233; un par de cosas m&#225;s que podr&#237;an ser interesantes para consultar en los atributos de DBpedia de Lyndal Roper: <link target="http://dbpedia.org/class/yago/WikicatBritishHistorians">http://dbpedia.org/class/yago/WikicatBritishHistorians</link> y <link target="http://dbpedia.org/class/yago/WikicatWomenHistorians">http://dbpedia.org/class/yago/WikicatWomenHistorians</link>. Es muy f&#225;cil combinarlos pidiendo una variable que retornar&#225; (en nuestro caso, esta es <code type="inline">?name</code>) y luego usar eso en m&#250;ltiples l&#237;neas de una consulta. Ten en cuenta tambi&#233;n el espacio y el punto al final de la primera l&#237;nea que comienza con <code type="inline">?name</code>:</p>
<pre><code xml:id="code_introduccion-datos-abiertos-enlazados_27" type="block" corresp="code_introduccion-datos-abiertos-enlazados_27.txt"/></pre>
<p>&#161;Funciona! Obtengo cinco resultados. En el momento de escribir, hay cinco historiadoras brit&#225;nicas en <emph>DBpedia</emph>...</p>
<figure><desc>Historiadoras brit&#225;nicas, seg&#250;n DBpedia</desc><graphic url="intro-to-linked-data-fig4.png"/></figure>
<p>&#191;Solo cinco mujeres brit&#225;nicas historiadoras? Por supuesto que hay, en realidad, muchas m&#225;s que eso, como podr&#237;amos demostrar f&#225;cilmente sustituyendo el nombre de, digamos, Alison Weir en nuestra primera consulta de Lyndal Roper. Esto nos lleva al problema con <emph>Dbpedia</emph> que mencion&#233; anteriormente: no est&#225; marcado de manera consistente con informaci&#243;n estructural del tipo que usa <emph>DBpedia</emph>. Nuestra consulta puede enumerar algunas historiadoras brit&#225;nicas, pero resulta que no podemos usarla para generar una lista significativa de personas en esta categor&#237;a. Todo lo que hemos encontrado es la gente en las entradas en Wikipedia que alguien ha decidido categorizar como "Historiador brit&#225;nico" y "mujer historiadora".</p>
<p>Con SPARQL en <emph>DBpedia</emph>, debes tener cuidado con las inconsistencias del material de m&#250;ltiples fuentes. Podr&#237;as usar SPARQL exactamente de la misma manera en un conjunto de datos m&#225;s mantenido, por ejemplo, los datos del gobierno del Reino Unido: <link target="">https://data-gov.tw.rpi.edu//sparql</link> y esperar obtener resultados m&#225;s s&#243;lidos (hay un breve resumen tutorial para este conjunto de datos aqu&#237;: <link target="">https://data-gov.tw.rpi.edu/wiki/A_crash_course_in_SPARQL</link>).</p>
<p>Sin embargo, a pesar de sus inconsistencias, <emph>DBpedia</emph> es un gran lugar para aprender SPARQL. Esto solo ha sido una breve introducci&#243;n pero hay mucho m&#225;s en <link target="/es/lecciones/sparql-datos-abiertos-enlazados">'Uso de SPARQL para acceder a datos abiertos enlazados'</link>.</p>
</div>
      <div type="2"><head>Lecturas adicionales y recursos</head>
<ul>
<li>
<p>Dean Allemang y James Hendler, <emph>Semantic Web for the Working Ontologist</emph>, 2nd edn, Elsevier, 2011</p>
</li>
<li>
<p>Tim Berners-Lee <link target="https://www.w3.org/DesignIssues/LinkedData.html">Linked Data</link></p>
</li>
<li>
<p>Bob DuCharme, <emph>Learning SPARQL</emph>, O'Reilly, 2011</p>
</li>
<li>
<p>El blog de <link target="http://www.snee.com/bobdc.blog/">Bob DuCharme</link> merece la pena leerlo tambi&#233;n.</p>
</li>
<li>
<p>Richard Gartner, <emph>Metadata: Shaping Knowledge from Antiquity to the Semantic Web</emph>, Springer, 2016</p>
</li>
<li>
<p>Seth van Hooland y Ruben Verborgh, <emph>Linked Data for Libraries, Archives and Museums</emph>, 2015</p>
</li>
<li>
<p>Mira tambi&#233;n la <link target="http://freeyourmetadata.org/">p&#225;gina web</link> complementaria del libro</p>
</li>
<li>
<p>Matthew Lincoln <link target="/en/lessons/graph-databases-and-SPARQL">'Using SPARQL to access Linked Open Data'</link></p>
</li>
<li>
<p><link target="http://linkeddata.org/guides-and-tutorials">Linked Data guides and tutorials</link></p>
</li>
<li>
<p>Dominic Oldman, Martin Doerr y Stefan Gradmann, "Zen and the Art of Linked Data: New Strategies for a Semantic Web of Humanist Knowledge", in <emph>A New Companion to Digital Humanities</emph>, editado por Susan Schreibman et al.</p>
</li>
<li>
<p>Max Schmachtenberg, Christian Bizer y Heiko Paulheim, <link target="http://linkeddatacatalog.dws.informatik.uni-mannheim.de/state/">State of the LOD Cloud 2017</link></p>
</li>
<li>
<p>David Wood, Marsha Zaidman y Luke Ruth, <emph>Linked Data: Structured data on the Web</emph>, Manning, 2014</p>
</li>
<li>
<p>Biblioteca del Congreso Nacional de Chile, <link target="http://datos.bcn.cl/es/informacion/que-es">Linked Open Data: &#191;Qu&#233; es?</link></p>
</li>
<li>
<p>Ana-Isabel Torre-Bastida, Marta Gonz&#225;lez-Rodr&#237;guez y Esther Villar-Rodr&#237;guez, <link target="https://web.archive.org/web/20180720105638/https://recyt.fecyt.es/index.php/EPI/article/download/epi.2015.mar.04/18804">Datos abiertos enlazados (LOD) y su implantaci&#243;n en bibliotecas: iniciativas y tecnolog&#237;as</link></p>
</li>
</ul>
</div>
      <div type="2"><head>Agradecimientos</head>
<p>El autor del tutorial agradece a los revisores del tutorial original, Matthew Lincoln y a Terhi Nurmikko-Fuller, y al editor, Admam Cyrmble, por dedicar tiempo generosamente a ayudarle a mejorar este tutorial con numerosas sugerencias, aclaraciones y correcciones. Esta lecci&#243;n se basa en un trabajo perteneciente al &#8220;Tesauro de historia Brit&#225;nica e Irlandsesa como SKOS&#8221; (proyecto <link target="http://www.history.ac.uk/projects/digital/tobias">Tobias</link>), financiado por el <link target="http://www.ahrc.ac.uk/">AHRC</link>. Ha sido revisado para <emph>The Programming Historian</emph>.</p>
</div>
    </body>
  </text>
</TEI>
