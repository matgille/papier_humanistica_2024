# Carregar nltk e matpotlib
import nltk
nltk.download('punkt')
import matplotlib.pylab as plt

obras_tokens = {}
obras_distribuicao_comprimento = {}

id_subplot = 1
fig = plt.figure(figsize=(20,20))

autores = list(obras.keys())

for autor in autores:
    # Transformar os corpora dos autores em listas de tokens de palavras
    tokens = nltk.word_tokenize(obras[autor], language="portuguese")

    # Filtrar pontuação
    obras_tokens[autor] = ([token for token in tokens
                                            if any(c.isalpha() for c in token)])

# Obter a distribuição de comprimentos de tokens
token_comprimentos = [len(token) for token in obras_tokens[autor]]
obras_distribuicao_comprimento[autor] = nltk.FreqDist(token_comprimentos)
    
    # Plotar a curva característica de composição
    lista_chaves = []
    lista_valores = []
	
    for i in range(1,16):
        lista_chaves.append(i)
        lista_valores.append(obras_distribuicao_comprimento[autor][i])
    
	lista_valores_normalizado = [value/max(lista_valores) for value in lista_valores]
	
    plt.subplot(5, 5, id_subplot)
    plt.plot(lista_chaves, lista_valores_normalizado)
    plt.xticks(lista_chaves)
    plt.title(autor)
    id_subplot += 1
	
plt.savefig("stilometry_comparacao.jpeg", dpi=300, bbox_inches='tight')
plt.show()    
