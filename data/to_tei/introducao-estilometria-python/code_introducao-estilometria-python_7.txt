# Converter os tokens para caracteres minúsculos para que a mesma palavra,
# maiúscula ou não, conte como uma palavra

for autor in autores:
    obras_tokens[autor] = (
        [token.lower() for token in obras_tokens[autor]])

# Calcular o qui-quadrado de cada documento de teste com cada um dos 5 autores
for obra in obras_destacadas:    
    for autor in autores:
            
        # Primeiro, construir um corpus conjunto e identificar
	# as 500 palavras mais frequentes nele
        corpus_conjunto= (obras_tokens[obra] +
                        obras_tokens[autor])
        freq_dist_conjunto = nltk.FreqDist(corpus_conjunto)
        termos_comuns = list(freq_dist_conjunto.most_common(500))
    
        # Que proporção do corpus conjunto é constituído pelos
        # tokens do autor candidato?
        autor_compartihado = (len(obras_tokens[autor])
                        / len(corpus_conjunto))
    
        # Agora, vamos observar as 500 palavras mais frequentes no corpus do candidato
        # e comparar o número de vezes que elas podem ser observadas
        # ao que seria esperado se os artigos do autor e o documento de teste
        # fossem ambas amostras aleatórias do mesmo conjunto.
        quiquadrado = 0
        for word,count_conjunto in termos_comuns:
    
            # Com que frequência vemos essa palavra comum?
            autor_count = obras_tokens[autor].count(word)
            obra_count = obras_tokens[obra].count(word)
    
            # Com que frequência deveríamos vê-la?
            autor_count_esperado = count_conjunto * autor_compartihado
            teste_count_esperado = count_conjunto * (1-autor_compartihado)
    
            # Adicionar a contribuição da palavra para a estatística qui-quadrado
            quiquadrado += ((autor_count-autor_count_esperado) *
                           (autor_count-autor_count_esperado) /
                           autor_count_esperado)
    
            quiquadrado += ((obra_count-teste_count_esperado) *
                           (obra_count-teste_count_esperado)
                           / teste_count_esperado)
    
        print("A estatística de qui-quadrado do documento", 
              obra, 
              "para o candidato", 
              autor, 
              "é =", 
              quiquadrado)
    print("\n")
