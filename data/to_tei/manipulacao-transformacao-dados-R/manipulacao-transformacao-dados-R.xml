<TEI xmlns="http://www.tei-c.org/ns/1.0" xml:id="manipulacao-transformacao-dados-R" type="translation">
    <teiHeader>
        <fileDesc>
            <titleStmt>
                <title>Manipulação e transformação de dados com R</title>
                <author role="original_author">Nabeel Siddiqui</author>
                <editor role="reviewers">
                    <persName>Lauren Tilton</persName>
                    <persName>Ryan Deschamps</persName>
                </editor>
                <author role="translators">Ian Araujo</author>
                <editor role="translation-reviewers">
                    <persName>Suemi Higuchi</persName>
                    <persName>Joana Paulino</persName>
                </editor>
                <editor role="editors">Ian Milligan</editor>
            </titleStmt>
            <publicationStmt>
                <distributor>Programming Historian</distributor>
                <date type="translated">11/26/2022</date>
                <idno type="doi">10.46430/phpt0035</idno>
                <date type="published">08/01/2017</date>
            </publicationStmt>
            <sourceDesc>
                <p>Born digital, in a markdown format. Original file: <ref type="original_file" target="#data_wrangling_and_management_in_R"/>.</p>
                <p>There are other translations: <ref target="#administracion-de-datos-en-r"/>
                </p>
            </sourceDesc>
        </fileDesc>
        <profileDesc>
            <abstract>
                <p>Esta lição explora como os investigadores podem tornar seus dados organizados, entender os pacotes do R para manipulação de dados e conduzir análises de dados básicas usando esta linguagem.</p>
            </abstract>
            <textClass>
                <keywords>
                    <term xml:lang="en">data-manipulation</term>
                    <term xml:lang="en">data-management</term>
                    <term xml:lang="en">distant-reading</term>
                    <term xml:lang="en">r</term>
                    <term xml:lang="en">data-visualization</term>
                </keywords>
            </textClass>
        </profileDesc>
    </teiHeader>
    <text xml:lang="pt">
        <body>
            <div type="2">
                <head>Requisitos</head>
                <p>Nesta lição consideramos que já possui algum conhecimento da linguagem R. Se ainda não completou a lição <ref target="/pt/licoes/nocoes-basicas-R-dados-tabulares">Noções básicas de R com dados tabulares</ref>, recomendamos que o faça primeiro. Ter experiência com outras linguagens de programação também pode ser benéfico. Se está buscando por onde começar aprendendo outras linguagens, recomendamos os excelentes tutoriais de Python do <emph>Programming Historian</emph>.</p>
                <p>Nota da tradução: o conteúdo da programação utilizado na lição original foi alterado para esta versão em português para que o contexto e os exemplos sejam próximos da realidade da comunidade que fala o idioma. Por conta disso, parte do texto da lição traduzida, bem como os exemplos e as interpretações dos dados são diferente da lição original. No entanto, o conteúdo e a estrutura da lição são fidedignos à lição original, como os tipos de dados e as análises desenvolvidas. Mudamos, por exemplo, a comparação entre Mississipi e Virgínia por Brasil e Argentina, mantendo os recursos e procedimentos realizados por Nabeel Siddiqui.</p>
            </div>
            <div type="2">
                <head>Objetivos da lição</head>
                <p>Ao fim desta lição, você:</p>
                <list type="ordered">
                    <item>Saberá como tornar seus dados bem ordenados (<emph>tidy</emph>) e entenderá por que isso é importante.</item>
                    <item>Terá assimilado o uso do pacote <ref target="https://cran.r-project.org/web/packages/dplyr/index.html">dplyr</ref> (em inglês) e sua aplicação na manipulação e controle de dados.</item>
                    <item>Estará familiarizado com o operador <emph>pipe</emph>
                        <code rend="inline">%&gt;%</code> na linguagem R e verá como ele pode auxiliar na criação de códigos mais legíveis.</item>
                    <item>Terá ganho experiência com análise exploratória de dados através de exemplos básicos de manipulação de dados.</item>
                </list>
            </div>
            <div type="2">
                <head>Introdução</head>
                <p>Os dados que encontra disponíveis nas diversas plataformas raramente estão no formato adequado para serem analisados, e precisará manipulá-los antes de explorar as perguntas de seu interesse. Isso pode tomar mais tempo que a própria análise dos dados! Neste tutorial, vamos aprender técnicas básicas para manipulação, gestão e controle de dados usando R. Especificamente, nos debruçaremos sobre a filosofia do <ref target="https://www.jstatsoft.org/article/view/v059i10">"<emph>tidy data</emph>"</ref> (em inglês) conforme apresentada por Hadley Wickham.</p>
                <p>De acordo com <ref target="http://hadley.nz/">Wickham</ref> (em inglês), os dados estão <emph>tidy</emph> ou bem-organizados quando satisfazem três critérios chave:</p>
                <list type="ordered">
                    <item>Cada unidade de observação está em uma linha</item>
                    <item>Cada variável está em uma coluna</item>
                    <item>Cada valor possui a sua própria célula.</item>
                </list>
                <p>Estar atento a estes critérios nos permite reconhecer quando os nossos dados estão adequados ou não. Também nos fornece um esquema padrão e um conjunto de soluções para lidar com alguns dos problemas mais comuns encontrados em <emph>datasets</emph> "mal-arranjados", como por exemplo:</p>
                <list type="ordered">
                    <item>Nomes de colunas como valores ao invés de nomes de variáveis</item>
                    <item>Múltiplas variáveis contidas em uma única coluna</item>
                    <item>Variáveis armazenadas tanto em linhas quanto em colunas</item>
                    <item>Unidades de observação de diferentes categorias armazenadas na mesma tabela</item>
                    <item>Uma única unidade de observação armazenada em múltiplas tabelas.</item>
                </list>
                <p>Talvez o mais importante seja que manter os dados nesse formato nos permite utilizar uma série de pacotes do <ref target="http://tidyverse.org/">"tidyverse,"</ref> (em inglês), concebidos para trabalhar especificamente com dados neste formato <emph>tidy</emph>. Dessa forma, assegurando-nos de que os dados de entrada e de saída estão bem organizados, precisaremos apenas de um pequeno conjunto de ferramentas para resolver um grande número de questões. Podemos combinar, manipular e dividir os <emph>datasets</emph> que criamos, conforme considerarmos mais adequado.</p>
                <p>Neste tutorial focaremos no pacote <ref target="https://cran.r-project.org/web/packages/dplyr/index.html">dplyr</ref> (em inglês) presente no tidyverse, mas também é importante mencionar alguns outros que serão vistos na lição:</p>
                <list type="unordered">
                    <item>
                        <ref target="http://magrittr.tidyverse.org">
                            <hi rend="bold">magittr</hi>
                        </ref> (em inglês) -- Este pacote nos garante acesso ao operador <emph>pipe</emph>
                        <code rend="inline">%&gt;%</code>, que torna o nosso código mais legível.  </item>
                    <item>
                        <ref target="http://ggplot2.tidyverse.org/">
                            <hi rend="bold">ggplot2</hi>
                        </ref> (em inglês) -- Este pacote utiliza a <ref target="http://www.springer.com/us/book/9780387245447">"Gramática de Gráficos"</ref> (em inglês) para fornecer uma forma fácil de visualizar nossos dados.   </item>
                    <item>
                        <ref target="http://tibble.tidyverse.org/">
                            <hi rend="bold">tibble</hi>
                        </ref> (em inglês) -- Este pacote nos fornece uma releitura dos tradicionais <emph>data frames</emph>, mais fáceis de serem trabalhados e visualizados.</item>
                </list>
                <p>Instale o "tidyverse", se ainda não o fez, e carregue-o antes de começarmos. Além disso, certifique-se de que possui instaladas a
<ref target="https://cran.rstudio.com/">versão mais recente do R</ref> e a <ref target="https://www.rstudio.com/products/rstudio/download/">versão mais recente do RStudio</ref> compatíveis com o seu sistema operacional.</p>
                <p>Copie o código a seguir para o seu RStudio. Para executá-lo, precisa selecionar as linhas e pressionar Ctrl+Enter (Command+Enter no Mac OS):</p>
                <ab>
                    <code xml:id="code_manipulacao-transformacao-dados-R_0" corresp="code_manipulacao-transformacao-dados-R_0.txt" rend="block"/>
                </ab>
            </div>
            <div type="2">
                <head>Um exemplo do dplyr em ação</head>
                <p>Vejamos um exemplo de como o dplyr pode auxiliar historiadores. Vamos utilizar o pacote "dados" <ref type="footnotemark" target="#pt_note_1"/> e importar alguns indicadores socioeconômicos de países entre 1952 e 2007.</p>
                <p>O pacote "remotes" permite a instalação de pacotes R a partir de repositórios remotos, incluindo o GitHub, como é o caso de "dados".</p>
                <ab>
                    <code xml:id="code_manipulacao-transformacao-dados-R_1" corresp="code_manipulacao-transformacao-dados-R_1.txt" rend="block"/>
                </ab>
                <p>Em seguida, para termos acesso ao <emph>dataset</emph> "dados_gapminder", que se encontra no pacote "dados", basta executar o seguinte código:</p>
                <ab>
                    <code xml:id="code_manipulacao-transformacao-dados-R_2" corresp="code_manipulacao-transformacao-dados-R_2.txt" rend="block"/>
                </ab>
                <p>Os dados do <ref target="https://www.gapminder.org/">Gapminder</ref> (em inglês) contêm o progresso de países ao longo do tempo, observando as estatísticas de alguns índices. Após importar o <emph>dataset</emph>, notará que ele possui seis variáveis: país, continente, ano, expectativa de vida, população e PIB <emph>per capita</emph>. Os dados já estão em formato <emph>tidy</emph>, possibilitando uma infinidade de opções para exploração futura.</p>
                <p>Neste exemplo, vamos visualizar o crescimento populacional de Brasil e Argentina ao longo dos anos. Para isso utilizaremos o pacote dplyr a fim de filtrar os dados que contenham apenas informações dos países de nosso interesse. Em seguida, utilizaremos o ggplot2 para visualizar tais dados. Este exercício é apenas uma breve demonstração do que é possível fazer com o dplyr, portanto, não se preocupe se não entender o código por enquanto.</p>
                <ab>
                    <code xml:id="code_manipulacao-transformacao-dados-R_3" corresp="code_manipulacao-transformacao-dados-R_3.txt" rend="block"/>
                </ab>
                <figure>
                    <desc>Gráfico da população de Brasil e Argentina, ao longo dos anos</desc>
                    <figDesc>Imagem com a representação de um gráfico de linhas com dados da população por anos para o Brasil e a Argentina</figDesc>
                    <graphic url="manipulacao-transformacao-dados-R-01.png"/>
                </figure>
                <p>Como podemos observar, a população absoluta do Brasil é consideravelmente maior em comparação com a população da Argentina. Embora isso pareça óbvio devido ao tamanho do território brasileiro, o código nos fornece uma base sobre a qual podemos formular uma infinidade de questões similares. Por exemplo, com uma pequena mudança no código podemos criar um gráfico similar com dois países diferentes, como Portugal e Bélgica.</p>
                <ab>
                    <code xml:id="code_manipulacao-transformacao-dados-R_4" corresp="code_manipulacao-transformacao-dados-R_4.txt" rend="block"/>
                </ab>
                <figure>
                    <desc>Gráfico da população de Portugal e Bégica, ao longo dos anos</desc>
                    <figDesc>Imagem com a representação de um gráfico de linhas com dados da população por anos para a Bélgica e Portugal</figDesc>
                    <graphic url="manipulacao-transformacao-dados-R-02.png"/>
                </figure>
                <p>Promover mudanças rápidas no código e revisar nossos dados é parte fundamental do processo de análise exploratória de dados (AED). Ao invés de tentar "provar" uma hipótese, a análise exploratória nos ajuda a entender melhor os dados e a levantar questões sobre eles. Para os historiadores, a AED fornece uma forma fácil de saber quando aprofundar mais em um tema e quando voltar atrás, e esta é uma área onde o R se sobressai.</p>
            </div>
            <div type="2">
                <head>Operador Pipe</head>
                <p>Antes de olharmos para o dplyr, precisamos entender o que é o operador <emph>pipe</emph>
                    <code rend="inline">%&gt;%</code> no R, uma vez que iremos utilizá-lo em muitos exemplos adiante. Como mencionado anteriormente, este operador é parte do pacote <ref target="https://cran.r-project.org/web/packages/magrittr/vignettes/magrittr.html">magrittr</ref> (em inglês), criado por <ref target="http://stefanbache.dk/">Stefan Milton Bache</ref> e <ref target="http://hadley.nz/">Hadley Wickham</ref>, e está incluída no tidyverse. O seu nome é uma referência ao pintor surrealista Rene Magritte, criador da obra <ref target="https://www.renemagritte.org/the-treachery-of-images.jsp">"A Traição das Imagens"</ref>, que mostra um cachimbo com a frase "isto não é um cachimbo" (<emph>ceci n'est pas une pipe</emph>, em francês).</p>
                <p>O operador <emph>pipe</emph>
                    <code rend="inline">%&gt;%</code> permite passar o que está à sua esquerda como a primeira variável em uma função especificada à sua direita. Embora possa parecer estranho no início, uma vez que aprende a usar o <emph>pipe</emph> descobrirá que ele torna seu código mais legível, evitando instruções aninhadas. Não se preocupe se estiver um pouco confuso por agora. Tudo ficará mais claro à medida que observarmos os exemplos.</p>
                <p>Vamos dizer que estamos interessados em obter a raiz quadrada de cada população e, então, somar todas as raízes antes de calcular a média. Obviamente, essa não é uma medição útil, mas demonstra a rapidez com que o código do R pode se tornar difícil de ler. Normalmente, usaríamos declarações aninhadas:</p>
                <ab>
                    <code xml:id="code_manipulacao-transformacao-dados-R_5" corresp="code_manipulacao-transformacao-dados-R_5.txt" rend="block"/>
                </ab>
                <p>Veja que com tantos comandos aninhados fica difícil lembrar quantos parênteses são necessários no final da linha, tornando o código complicado de ler. Para atenuar esse problema, algumas pessoas criam vetores temporários entre cada chamada de função.</p>
                <ab>
                    <code xml:id="code_manipulacao-transformacao-dados-R_6" corresp="code_manipulacao-transformacao-dados-R_6.txt" rend="block"/>
                </ab>
                <p>Embora obtenha o mesmo resultado, este código é muito mais legível. No entanto, se esquecer de excluir os vetores temporários, seu espaço de trabalho pode se tornar confuso. O operador <emph>pipe</emph> faz esse trabalho por você. Aqui está o mesmo código usando o operador <emph>pipe</emph>:</p>
                <ab>
                    <code xml:id="code_manipulacao-transformacao-dados-R_7" corresp="code_manipulacao-transformacao-dados-R_7.txt" rend="block"/>
                </ab>
                <p>Este código é mais fácil de ler que os anteriores e pode torná-lo ainda mais limpo escrevendo em linhas diferentes.</p>
                <ab>
                    <code xml:id="code_manipulacao-transformacao-dados-R_8" corresp="code_manipulacao-transformacao-dados-R_8.txt" rend="block"/>
                </ab>
                <p>Note que os vetores ou <emph>data frames</emph> criados pelo operador pipe são descartados quando se completa a operação. Se quiser salvar o resultado da operação, será preciso atribuí-lo a uma nova variável:</p>
                <ab>
                    <code xml:id="code_manipulacao-transformacao-dados-R_9" corresp="code_manipulacao-transformacao-dados-R_9.txt" rend="block"/>
                </ab>
                <p>Agora que adquirimos uma compreensão do operador <emph>pipe</emph>, estamos prontos para começar a analisar e manipular alguns dados. Ao longo da lição vamos continuar trabalhando com o <emph>dataset</emph> dados_gapminder:</p>
                <ab>
                    <code xml:id="code_manipulacao-transformacao-dados-R_10" corresp="code_manipulacao-transformacao-dados-R_10.txt" rend="block"/>
                </ab>
                <p>Como pode observar, este <emph>dataset</emph> contém o nome do país, seu continente e o ano de registro, além dos indicadores de expectativa de vida, total da população e PIB <emph>per capita</emph>, em determinados anos. Conforme mencionamos acima, antes de analisar os dados é importante verificar se estes estão bem ordenados no formato <emph>tidy</emph>. Relembrando os três critérios discutidos, podemos dizer que sim, o <emph>dataset</emph> encontra-se organizado e pronto para ser trabalhado com o pacote dplyr.  </p>
            </div>
            <div type="2">
                <head>O que é dplyr?</head>
                <p>
                    <ref target="https://cran.r-project.org/web/packages/dplyr/vignettes/dplyr.html">Dplyr</ref> (em inglês) também é parte do tidyverse, fornecendo funções para manipulação e transformação dos dados. Porque estamos mantendo nossos dados bem organizados, precisaremos apenas de um pequeno conjunto de ferramentas para explorá-los. Em comparação com o pacote básico do R, usando o dplyr em nosso código, fica geralmente mais rápido e há a garantia de que os dados resultantes (<emph>output</emph>) estarão bem ordenados uma vez que os dados de entrada (<emph>input</emph>) também estarão. Talvez o mais importante seja que o dplyr torna o nosso código mais fácil de ser lido e utiliza "verbos" que são, na maioria das vezes, intuitivos. Cada função do dplyr corresponde a um desses verbos, sendo cinco principais: filtrar (<code rend="inline">filter</code>), selecionar (<code rend="inline">select</code>), ordenar (<code rend="inline">arrange</code>), modificar (<code rend="inline">mutate</code>) e sumarizar (<code rend="inline">summarise</code>). Vamos observar individualmente como cada uma dessas funções funciona na prática.</p>
                <div type="3">
                    <head>Selecionar (select)</head>
                    <p>Se olharmos para o <emph>dataset</emph> dados_gapminder, vamos observar a presença de seis colunas, cada uma contendo diferentes informações. Podemos escolher, para a nossa análise, visualizar apenas algumas dessas colunas. A função <code rend="inline">select()</code> do dplyr nos permite fazer isso. O primeiro argumento da função é o <emph>data frame</emph> que desejamos manipular e os seguintes são os nomes das colunas que queremos manter:</p>
                    <ab>
                        <code xml:id="code_manipulacao-transformacao-dados-R_11" corresp="code_manipulacao-transformacao-dados-R_11.txt" rend="block"/>
                    </ab>
                    <p>Vejamos como escrever o mesmo código utilizando o operador <emph>pipe</emph>
                        <code rend="inline">%&gt;%</code>:</p>
                    <ab>
                        <code xml:id="code_manipulacao-transformacao-dados-R_12" corresp="code_manipulacao-transformacao-dados-R_12.txt" rend="block"/>
                    </ab>
                    <p>Fazer referência a cada uma das colunas que desejamos manter apenas para nos livrar de uma é um tanto tedioso. Podemos usar o símbolo de menos (-) para demonstrar que queremos remover uma coluna.</p>
                    <ab>
                        <code xml:id="code_manipulacao-transformacao-dados-R_13" corresp="code_manipulacao-transformacao-dados-R_13.txt" rend="block"/>
                    </ab>
                </div>
                <div type="3">
                    <head>Filtrar (filter)</head>
                    <p>A função <code rend="inline">filter()</code> faz o mesmo que a função select, mas ao invés de escolher o nome da coluna, podemos usá-lo para filtrar linhas usando um teste de requisito. Por exemplo, se quisermos selecionar somente os registros dos países em 2007:</p>
                    <ab>
                        <code xml:id="code_manipulacao-transformacao-dados-R_14" corresp="code_manipulacao-transformacao-dados-R_14.txt" rend="block"/>
                    </ab>
                </div>
                <div type="3">
                    <head>Modificar (mutate)</head>
                    <p>A função <code rend="inline">mutate()</code> permite adicionar uma coluna ao seu <emph>dataset</emph>. No momento, temos país e continente em duas colunas separadas. Podemos utilizar a função <code rend="inline">paste()</code> para combinar as duas informações e especificar um separador. Vamos colocá-las em uma única coluna chamada "localizacao".</p>
                    <ab>
                        <code xml:id="code_manipulacao-transformacao-dados-R_15" corresp="code_manipulacao-transformacao-dados-R_15.txt" rend="block"/>
                    </ab>
                    <p>Novamente, é preciso lembrar que o dplyr não salva os dados, nem transforma o original. Em vez disso, ele cria um <emph>data frame</emph> temporário em cada etapa. Se deseja manter os dados, é necessário criar uma variável permanente.</p>
                    <ab>
                        <code xml:id="code_manipulacao-transformacao-dados-R_16" corresp="code_manipulacao-transformacao-dados-R_16.txt" rend="block"/>
                    </ab>
                </div>
                <div type="3">
                    <head>Ordenar (arrange)</head>
                    <p>A função <code rend="inline">arrange()</code> nos permite ordenar as colunas de novas formas. Atualmente, o nosso conjunto de dados está organizado em ordem alfabética pelo nome do país. Vamos ordená-lo em ordem decrescente de acordo com o total da população.</p>
                    <ab>
                        <code xml:id="code_manipulacao-transformacao-dados-R_17" corresp="code_manipulacao-transformacao-dados-R_17.txt" rend="block"/>
                    </ab>
                </div>
                <div type="3">
                    <head>Sumarizar (summarise)</head>
                    <p>A última função do dplyr que veremos é a <code rend="inline">summarise()</code>, usada geralmente para criar uma tabela contendo dados estatísticos resumidos que podemos plotar. Vamos utilizar a função <code rend="inline">summarise()</code> para calcular a média da expectativa de vida nos países, considerando todo o conjunto dados_gapminder.</p>
                    <ab>
                        <code xml:id="code_manipulacao-transformacao-dados-R_18" corresp="code_manipulacao-transformacao-dados-R_18.txt" rend="block"/>
                    </ab>
                </div>
            </div>
            <div type="2">
                <head>Juntando tudo</head>
                <p>Agora, após termos visto os cinco principais verbos do dplyr, podemos criar rapidamente uma visualização dos nossos dados. Vamos criar um gráfico de barras mostrando o número de países com expectativa de vida maior que 50 anos, em 2007.</p>
                <ab>
                    <code xml:id="code_manipulacao-transformacao-dados-R_19" corresp="code_manipulacao-transformacao-dados-R_19.txt" rend="block"/>
                </ab>
                <figure>
                    <desc>Expectativa de vida nos países em 2007</desc>
                    <figDesc>Imagem com a representação de um gráfico de barras com dados sobre o número de países onde a expectativa de vida é maior ou menor que 50 anos, em 2007</figDesc>
                    <graphic url="manipulacao-transformacao-dados-R-03.png"/>
                </figure>
                <p>Novamente, fazendo uma pequena mudança no nosso código, podemos ver também o número de países com expectativa de vida maior que 50 anos, em 1952.</p>
                <ab>
                    <code xml:id="code_manipulacao-transformacao-dados-R_20" corresp="code_manipulacao-transformacao-dados-R_20.txt" rend="block"/>
                </ab>
                <p>(<figure>
                        <desc>Expectativa de vida nos países em 1952</desc>
                        <figDesc>Imagem com a representação de um gráfico de barras com dados sobre o número de países onde a expectativa de vida é maior ou menor que 50 anos, em 1952</figDesc>
                        <graphic url="manipulacao-transformacao-dados-R-04.png"/>
                    </figure>
                </p>
            </div>
            <div type="2">
                <head>Conclusão</head>
                <p>Este tutorial deve encaminhar seus conhecimentos para pensar sobre como organizar e manipular dados usando R. Posteriormente, provavelmente vai querer visualizar esses dados de alguma forma, usando gráficos, como fizemos em partes desta lição. Recomendamos que comece a estudar o <ref target="http://www.ggplot2.org">ggplot2</ref> (em inglês), pacote com uma coleção de ferramentas que funcionam bem em conjunto com o dplyr. Além disso, você deve buscar conhecer as outras funções do pacote dplyr que não vimos aqui, para aprimorar suas habilidades de manipulação de dados. Por enquanto, esta lição deve proporcionar um bom ponto de partida, cobrindo muitos dos principais problemas que poderá encontrar.</p>
                <div type="3">
                    <head>Notas</head>
                    <p>
                        <ref type="footnotemark" target="#pt_note_1"/> : O pacote "dados" disponibiliza a tradução de conjuntos de dados originalmente em inglês encontrados em outros pacotes de R. Está disponível em <ref target="https://github.com/cienciadedatos/dados">https://github.com/cienciadedatos/dados</ref>
                    </p>
                </div>
            </div>
        </body>
    </text>
</TEI>
