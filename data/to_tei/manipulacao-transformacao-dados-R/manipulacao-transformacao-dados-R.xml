<TEI xmlns="http://www.tei-c.org/ns/1.0" xml:id="manipulacao-transformacao-dados-R">
  <teiHeader>
 <fileDesc>
  <titleStmt>
   <title>Manipula&#231;&#227;o e transforma&#231;&#227;o de dados com R</title>
  <author role="original_author">Nabeel Siddiqui</author><editor role="reviewers"><persName>Lauren Tilton</persName><persName>Ryan Deschamps</persName></editor><author role="translators">Ian Araujo</author><editor role="translation-reviewers"><persName>Suemi Higuchi</persName><persName>Joana Paulino</persName></editor><editor role="editors">Ian Milligan</editor></titleStmt>
  <publicationStmt>
   <idno type="doi">10.46430/phpt0035</idno><date type="published">08/01/2017</date><date type="translated">11/26/2022</date><p>Lesson reviewed and published in Programming Historian.</p>
  </publicationStmt>
  <sourceDesc>
  <p>Born digital, in a markdown format. Original file: <ref type="original_file" target="#data_wrangling_and_management_in_R"/>.</p><p>There are other translations: <ref target="#administracion-de-datos-en-r"/></p></sourceDesc>
 </fileDesc>
 <profileDesc><abstract><p>Esta li&#231;&#227;o explora como os investigadores podem tornar seus dados organizados, entender os pacotes do R para manipula&#231;&#227;o de dados e conduzir an&#225;lises de dados b&#225;sicas usando esta linguagem.</p></abstract><textClass><keywords><term xml:lang="en">data-manipulation</term><term xml:lang="en">data-management</term><term xml:lang="en">distant-reading</term><term xml:lang="en">r</term><term xml:lang="en">data-visualization</term></keywords></textClass></profileDesc>
</teiHeader>
  <text xml:lang="pt">
    <body>
      <div type="2"><head>Requisitos</head>
<p>Nesta li&#231;&#227;o consideramos que j&#225; possui algum conhecimento da linguagem R. Se ainda n&#227;o completou a li&#231;&#227;o <ref target="/pt/licoes/nocoes-basicas-R-dados-tabulares">No&#231;&#245;es b&#225;sicas de R com dados tabulares</ref>, recomendamos que o fa&#231;a primeiro. Ter experi&#234;ncia com outras linguagens de programa&#231;&#227;o tamb&#233;m pode ser ben&#233;fico. Se est&#225; buscando por onde come&#231;ar aprendendo outras linguagens, recomendamos os excelentes tutoriais de Python do <emph>Programming Historian</emph>.</p>
<p>Nota da tradu&#231;&#227;o: o conte&#250;do da programa&#231;&#227;o utilizado na li&#231;&#227;o original foi alterado para esta vers&#227;o em portugu&#234;s para que o contexto e os exemplos sejam pr&#243;ximos da realidade da comunidade que fala o idioma. Por conta disso, parte do texto da li&#231;&#227;o traduzida, bem como os exemplos e as interpreta&#231;&#245;es dos dados s&#227;o diferente da li&#231;&#227;o original. No entanto, o conte&#250;do e a estrutura da li&#231;&#227;o s&#227;o fidedignos &#224; li&#231;&#227;o original, como os tipos de dados e as an&#225;lises desenvolvidas. Mudamos, por exemplo, a compara&#231;&#227;o entre Mississipi e Virg&#237;nia por Brasil e Argentina, mantendo os recursos e procedimentos realizados por Nabeel Siddiqui.</p>
</div>
      <div type="2"><head>Objetivos da li&#231;&#227;o</head>
<p>Ao fim desta li&#231;&#227;o, voc&#234;:</p>
<list type="ordered">
<item>Saber&#225; como tornar seus dados bem ordenados (<emph>tidy</emph>) e entender&#225; por que isso &#233; importante.</item>
<item>Ter&#225; assimilado o uso do pacote <ref target="https://cran.r-project.org/web/packages/dplyr/index.html">dplyr</ref> (em ingl&#234;s) e sua aplica&#231;&#227;o na manipula&#231;&#227;o e controle de dados.</item>
<item>Estar&#225; familiarizado com o operador <emph>pipe</emph> <code rend="inline">%&gt;%</code> na linguagem R e ver&#225; como ele pode auxiliar na cria&#231;&#227;o de c&#243;digos mais leg&#237;veis.</item>
<item>Ter&#225; ganho experi&#234;ncia com an&#225;lise explorat&#243;ria de dados atrav&#233;s de exemplos b&#225;sicos de manipula&#231;&#227;o de dados.</item>
</list>
</div>
      <div type="2"><head>Introdu&#231;&#227;o</head>
<p>Os dados que encontra dispon&#237;veis nas diversas plataformas raramente est&#227;o no formato adequado para serem analisados, e precisar&#225; manipul&#225;-los antes de explorar as perguntas de seu interesse. Isso pode tomar mais tempo que a pr&#243;pria an&#225;lise dos dados! Neste tutorial, vamos aprender t&#233;cnicas b&#225;sicas para manipula&#231;&#227;o, gest&#227;o e controle de dados usando R. Especificamente, nos debru&#231;aremos sobre a filosofia do <ref target="https://www.jstatsoft.org/article/view/v059i10">"<emph>tidy data</emph>"</ref> (em ingl&#234;s) conforme apresentada por Hadley Wickham.</p>
<p>De acordo com <ref target="http://hadley.nz/">Wickham</ref> (em ingl&#234;s), os dados est&#227;o <emph>tidy</emph> ou bem-organizados quando satisfazem tr&#234;s crit&#233;rios chave:</p>
<list type="ordered">
<item>Cada unidade de observa&#231;&#227;o est&#225; em uma linha</item>
<item>Cada vari&#225;vel est&#225; em uma coluna</item>
<item>Cada valor possui a sua pr&#243;pria c&#233;lula.</item>
</list>
<p>Estar atento a estes crit&#233;rios nos permite reconhecer quando os nossos dados est&#227;o adequados ou n&#227;o. Tamb&#233;m nos fornece um esquema padr&#227;o e um conjunto de solu&#231;&#245;es para lidar com alguns dos problemas mais comuns encontrados em <emph>datasets</emph> "mal-arranjados", como por exemplo:</p>
<list type="ordered">
<item>Nomes de colunas como valores ao inv&#233;s de nomes de vari&#225;veis</item>
<item>M&#250;ltiplas vari&#225;veis contidas em uma &#250;nica coluna</item>
<item>Vari&#225;veis armazenadas tanto em linhas quanto em colunas</item>
<item>Unidades de observa&#231;&#227;o de diferentes categorias armazenadas na mesma tabela</item>
<item>Uma &#250;nica unidade de observa&#231;&#227;o armazenada em m&#250;ltiplas tabelas.</item>
</list>
<p>Talvez o mais importante seja que manter os dados nesse formato nos permite utilizar uma s&#233;rie de pacotes do <ref target="http://tidyverse.org/">"tidyverse,"</ref> (em ingl&#234;s), concebidos para trabalhar especificamente com dados neste formato <emph>tidy</emph>. Dessa forma, assegurando-nos de que os dados de entrada e de sa&#237;da est&#227;o bem organizados, precisaremos apenas de um pequeno conjunto de ferramentas para resolver um grande n&#250;mero de quest&#245;es. Podemos combinar, manipular e dividir os <emph>datasets</emph> que criamos, conforme considerarmos mais adequado.</p>
<p>Neste tutorial focaremos no pacote <ref target="https://cran.r-project.org/web/packages/dplyr/index.html">dplyr</ref> (em ingl&#234;s) presente no tidyverse, mas tamb&#233;m &#233; importante mencionar alguns outros que ser&#227;o vistos na li&#231;&#227;o:</p>
<list type="unordered">
<item><ref target="http://magrittr.tidyverse.org"><hi rend="bold">magittr</hi></ref> (em ingl&#234;s) -- Este pacote nos garante acesso ao operador <emph>pipe</emph> <code rend="inline">%&gt;%</code>, que torna o nosso c&#243;digo mais leg&#237;vel.  </item>
<item><ref target="http://ggplot2.tidyverse.org/"><hi rend="bold">ggplot2</hi></ref> (em ingl&#234;s) -- Este pacote utiliza a <ref target="http://www.springer.com/us/book/9780387245447">"Gram&#225;tica de Gr&#225;ficos"</ref> (em ingl&#234;s) para fornecer uma forma f&#225;cil de visualizar nossos dados.   </item>
<item><ref target="http://tibble.tidyverse.org/"><hi rend="bold">tibble</hi></ref> (em ingl&#234;s) -- Este pacote nos fornece uma releitura dos tradicionais <emph>data frames</emph>, mais f&#225;ceis de serem trabalhados e visualizados.</item>
</list>
<p>Instale o "tidyverse", se ainda n&#227;o o fez, e carregue-o antes de come&#231;armos. Al&#233;m disso, certifique-se de que possui instaladas a
<ref target="https://cran.rstudio.com/">vers&#227;o mais recente do R</ref> e a <ref target="https://www.rstudio.com/products/rstudio/download/">vers&#227;o mais recente do RStudio</ref> compat&#237;veis com o seu sistema operacional.</p>
<p>Copie o c&#243;digo a seguir para o seu RStudio. Para execut&#225;-lo, precisa selecionar as linhas e pressionar Ctrl+Enter (Command+Enter no Mac OS):</p>
<ab><code xml:id="code_manipulacao-transformacao-dados-R_0" corresp="code_manipulacao-transformacao-dados-R_0.txt" rend="block"/></ab>
</div>
      <div type="2"><head>Um exemplo do dplyr em a&#231;&#227;o</head>
<p>Vejamos um exemplo de como o dplyr pode auxiliar historiadores. Vamos utilizar o pacote "dados" <ref type="footnotemark" target="#note_1"/> e importar alguns indicadores socioecon&#244;micos de pa&#237;ses entre 1952 e 2007.</p>
<p>O pacote "remotes" permite a instala&#231;&#227;o de pacotes R a partir de reposit&#243;rios remotos, incluindo o GitHub, como &#233; o caso de "dados".</p>
<ab><code xml:id="code_manipulacao-transformacao-dados-R_1" corresp="code_manipulacao-transformacao-dados-R_1.txt" rend="block"/></ab>
<p>Em seguida, para termos acesso ao <emph>dataset</emph> "dados_gapminder", que se encontra no pacote "dados", basta executar o seguinte c&#243;digo:</p>
<ab><code xml:id="code_manipulacao-transformacao-dados-R_2" corresp="code_manipulacao-transformacao-dados-R_2.txt" rend="block"/></ab>
<p>Os dados do <ref target="https://www.gapminder.org/">Gapminder</ref> (em ingl&#234;s) cont&#234;m o progresso de pa&#237;ses ao longo do tempo, observando as estat&#237;sticas de alguns &#237;ndices. Ap&#243;s importar o <emph>dataset</emph>, notar&#225; que ele possui seis vari&#225;veis: pa&#237;s, continente, ano, expectativa de vida, popula&#231;&#227;o e PIB <emph>per capita</emph>. Os dados j&#225; est&#227;o em formato <emph>tidy</emph>, possibilitando uma infinidade de op&#231;&#245;es para explora&#231;&#227;o futura.</p>
<p>Neste exemplo, vamos visualizar o crescimento populacional de Brasil e Argentina ao longo dos anos. Para isso utilizaremos o pacote dplyr a fim de filtrar os dados que contenham apenas informa&#231;&#245;es dos pa&#237;ses de nosso interesse. Em seguida, utilizaremos o ggplot2 para visualizar tais dados. Este exerc&#237;cio &#233; apenas uma breve demonstra&#231;&#227;o do que &#233; poss&#237;vel fazer com o dplyr, portanto, n&#227;o se preocupe se n&#227;o entender o c&#243;digo por enquanto.</p>
<ab><code xml:id="code_manipulacao-transformacao-dados-R_3" corresp="code_manipulacao-transformacao-dados-R_3.txt" rend="block"/></ab>
<figure><desc>Gr&#225;fico da popula&#231;&#227;o de Brasil e Argentina, ao longo dos anos</desc><graphic url="manipulacao-transformacao-dados-R-01.png"/></figure>
<p>Como podemos observar, a popula&#231;&#227;o absoluta do Brasil &#233; consideravelmente maior em compara&#231;&#227;o com a popula&#231;&#227;o da Argentina. Embora isso pare&#231;a &#243;bvio devido ao tamanho do territ&#243;rio brasileiro, o c&#243;digo nos fornece uma base sobre a qual podemos formular uma infinidade de quest&#245;es similares. Por exemplo, com uma pequena mudan&#231;a no c&#243;digo podemos criar um gr&#225;fico similar com dois pa&#237;ses diferentes, como Portugal e B&#233;lgica.</p>
<ab><code xml:id="code_manipulacao-transformacao-dados-R_4" corresp="code_manipulacao-transformacao-dados-R_4.txt" rend="block"/></ab>
<figure><desc>Gr&#225;fico da popula&#231;&#227;o de Portugal e B&#233;gica, ao longo dos anos</desc><graphic url="manipulacao-transformacao-dados-R-02.png"/></figure>
<p>Promover mudan&#231;as r&#225;pidas no c&#243;digo e revisar nossos dados &#233; parte fundamental do processo de an&#225;lise explorat&#243;ria de dados (AED). Ao inv&#233;s de tentar "provar" uma hip&#243;tese, a an&#225;lise explorat&#243;ria nos ajuda a entender melhor os dados e a levantar quest&#245;es sobre eles. Para os historiadores, a AED fornece uma forma f&#225;cil de saber quando aprofundar mais em um tema e quando voltar atr&#225;s, e esta &#233; uma &#225;rea onde o R se sobressai.</p>
</div>
      <div type="2"><head>Operador Pipe</head>
<p>Antes de olharmos para o dplyr, precisamos entender o que &#233; o operador <emph>pipe</emph> <code rend="inline">%&gt;%</code> no R, uma vez que iremos utiliz&#225;-lo em muitos exemplos adiante. Como mencionado anteriormente, este operador &#233; parte do pacote <ref target="https://cran.r-project.org/web/packages/magrittr/vignettes/magrittr.html">magrittr</ref> (em ingl&#234;s), criado por <ref target="http://stefanbache.dk/">Stefan Milton Bache</ref> e <ref target="http://hadley.nz/">Hadley Wickham</ref>, e est&#225; inclu&#237;da no tidyverse. O seu nome &#233; uma refer&#234;ncia ao pintor surrealista Rene Magritte, criador da obra <ref target="https://www.renemagritte.org/the-treachery-of-images.jsp">"A Trai&#231;&#227;o das Imagens"</ref>, que mostra um cachimbo com a frase "isto n&#227;o &#233; um cachimbo" (<emph>ceci n'est pas une pipe</emph>, em franc&#234;s).</p>
<p>O operador <emph>pipe</emph> <code rend="inline">%&gt;%</code> permite passar o que est&#225; &#224; sua esquerda como a primeira vari&#225;vel em uma fun&#231;&#227;o especificada &#224; sua direita. Embora possa parecer estranho no in&#237;cio, uma vez que aprende a usar o <emph>pipe</emph> descobrir&#225; que ele torna seu c&#243;digo mais leg&#237;vel, evitando instru&#231;&#245;es aninhadas. N&#227;o se preocupe se estiver um pouco confuso por agora. Tudo ficar&#225; mais claro &#224; medida que observarmos os exemplos.</p>
<p>Vamos dizer que estamos interessados em obter a raiz quadrada de cada popula&#231;&#227;o e, ent&#227;o, somar todas as ra&#237;zes antes de calcular a m&#233;dia. Obviamente, essa n&#227;o &#233; uma medi&#231;&#227;o &#250;til, mas demonstra a rapidez com que o c&#243;digo do R pode se tornar dif&#237;cil de ler. Normalmente, usar&#237;amos declara&#231;&#245;es aninhadas:</p>
<ab><code xml:id="code_manipulacao-transformacao-dados-R_5" corresp="code_manipulacao-transformacao-dados-R_5.txt" rend="block"/></ab>
<p>Veja que com tantos comandos aninhados fica dif&#237;cil lembrar quantos par&#234;nteses s&#227;o necess&#225;rios no final da linha, tornando o c&#243;digo complicado de ler. Para atenuar esse problema, algumas pessoas criam vetores tempor&#225;rios entre cada chamada de fun&#231;&#227;o.</p>
<ab><code xml:id="code_manipulacao-transformacao-dados-R_6" corresp="code_manipulacao-transformacao-dados-R_6.txt" rend="block"/></ab>
<p>Embora obtenha o mesmo resultado, este c&#243;digo &#233; muito mais leg&#237;vel. No entanto, se esquecer de excluir os vetores tempor&#225;rios, seu espa&#231;o de trabalho pode se tornar confuso. O operador <emph>pipe</emph> faz esse trabalho por voc&#234;. Aqui est&#225; o mesmo c&#243;digo usando o operador <emph>pipe</emph>:</p>
<ab><code xml:id="code_manipulacao-transformacao-dados-R_7" corresp="code_manipulacao-transformacao-dados-R_7.txt" rend="block"/></ab>
<p>Este c&#243;digo &#233; mais f&#225;cil de ler que os anteriores e pode torn&#225;-lo ainda mais limpo escrevendo em linhas diferentes.</p>
<ab><code xml:id="code_manipulacao-transformacao-dados-R_8" corresp="code_manipulacao-transformacao-dados-R_8.txt" rend="block"/></ab>
<p>Note que os vetores ou <emph>data frames</emph> criados pelo operador pipe s&#227;o descartados quando se completa a opera&#231;&#227;o. Se quiser salvar o resultado da opera&#231;&#227;o, ser&#225; preciso atribu&#237;-lo a uma nova vari&#225;vel:</p>
<ab><code xml:id="code_manipulacao-transformacao-dados-R_9" corresp="code_manipulacao-transformacao-dados-R_9.txt" rend="block"/></ab>
<p>Agora que adquirimos uma compreens&#227;o do operador <emph>pipe</emph>, estamos prontos para come&#231;ar a analisar e manipular alguns dados. Ao longo da li&#231;&#227;o vamos continuar trabalhando com o <emph>dataset</emph> dados_gapminder:</p>
<ab><code xml:id="code_manipulacao-transformacao-dados-R_10" corresp="code_manipulacao-transformacao-dados-R_10.txt" rend="block"/></ab>
<p>Como pode observar, este <emph>dataset</emph> cont&#233;m o nome do pa&#237;s, seu continente e o ano de registro, al&#233;m dos indicadores de expectativa de vida, total da popula&#231;&#227;o e PIB <emph>per capita</emph>, em determinados anos. Conforme mencionamos acima, antes de analisar os dados &#233; importante verificar se estes est&#227;o bem ordenados no formato <emph>tidy</emph>. Relembrando os tr&#234;s crit&#233;rios discutidos, podemos dizer que sim, o <emph>dataset</emph> encontra-se organizado e pronto para ser trabalhado com o pacote dplyr.  </p>
</div>
      <div type="2"><head>O que &#233; dplyr?</head>
<p><ref target="https://cran.r-project.org/web/packages/dplyr/vignettes/dplyr.html">Dplyr</ref> (em ingl&#234;s) tamb&#233;m &#233; parte do tidyverse, fornecendo fun&#231;&#245;es para manipula&#231;&#227;o e transforma&#231;&#227;o dos dados. Porque estamos mantendo nossos dados bem organizados, precisaremos apenas de um pequeno conjunto de ferramentas para explor&#225;-los. Em compara&#231;&#227;o com o pacote b&#225;sico do R, usando o dplyr em nosso c&#243;digo, fica geralmente mais r&#225;pido e h&#225; a garantia de que os dados resultantes (<emph>output</emph>) estar&#227;o bem ordenados uma vez que os dados de entrada (<emph>input</emph>) tamb&#233;m estar&#227;o. Talvez o mais importante seja que o dplyr torna o nosso c&#243;digo mais f&#225;cil de ser lido e utiliza "verbos" que s&#227;o, na maioria das vezes, intuitivos. Cada fun&#231;&#227;o do dplyr corresponde a um desses verbos, sendo cinco principais: filtrar (<code rend="inline">filter</code>), selecionar (<code rend="inline">select</code>), ordenar (<code rend="inline">arrange</code>), modificar (<code rend="inline">mutate</code>) e sumarizar (<code rend="inline">summarise</code>). Vamos observar individualmente como cada uma dessas fun&#231;&#245;es funciona na pr&#225;tica.</p>
<div type="3"><head>Selecionar (select)</head>
<p>Se olharmos para o <emph>dataset</emph> dados_gapminder, vamos observar a presen&#231;a de seis colunas, cada uma contendo diferentes informa&#231;&#245;es. Podemos escolher, para a nossa an&#225;lise, visualizar apenas algumas dessas colunas. A fun&#231;&#227;o <code rend="inline">select()</code> do dplyr nos permite fazer isso. O primeiro argumento da fun&#231;&#227;o &#233; o <emph>data frame</emph> que desejamos manipular e os seguintes s&#227;o os nomes das colunas que queremos manter:</p>
<ab><code xml:id="code_manipulacao-transformacao-dados-R_11" corresp="code_manipulacao-transformacao-dados-R_11.txt" rend="block"/></ab>
<p>Vejamos como escrever o mesmo c&#243;digo utilizando o operador <emph>pipe</emph> <code rend="inline">%&gt;%</code>:</p>
<ab><code xml:id="code_manipulacao-transformacao-dados-R_12" corresp="code_manipulacao-transformacao-dados-R_12.txt" rend="block"/></ab>
<p>Fazer refer&#234;ncia a cada uma das colunas que desejamos manter apenas para nos livrar de uma &#233; um tanto tedioso. Podemos usar o s&#237;mbolo de menos (-) para demonstrar que queremos remover uma coluna.</p>
<ab><code xml:id="code_manipulacao-transformacao-dados-R_13" corresp="code_manipulacao-transformacao-dados-R_13.txt" rend="block"/></ab>
</div><div type="3"><head>Filtrar (filter)</head>
<p>A fun&#231;&#227;o <code rend="inline">filter()</code> faz o mesmo que a fun&#231;&#227;o select, mas ao inv&#233;s de escolher o nome da coluna, podemos us&#225;-lo para filtrar linhas usando um teste de requisito. Por exemplo, se quisermos selecionar somente os registros dos pa&#237;ses em 2007:</p>
<ab><code xml:id="code_manipulacao-transformacao-dados-R_14" corresp="code_manipulacao-transformacao-dados-R_14.txt" rend="block"/></ab>
</div><div type="3"><head>Modificar (mutate)</head>
<p>A fun&#231;&#227;o <code rend="inline">mutate()</code> permite adicionar uma coluna ao seu <emph>dataset</emph>. No momento, temos pa&#237;s e continente em duas colunas separadas. Podemos utilizar a fun&#231;&#227;o <code rend="inline">paste()</code> para combinar as duas informa&#231;&#245;es e especificar um separador. Vamos coloc&#225;-las em uma &#250;nica coluna chamada "localizacao".</p>
<ab><code xml:id="code_manipulacao-transformacao-dados-R_15" corresp="code_manipulacao-transformacao-dados-R_15.txt" rend="block"/></ab>
<p>Novamente, &#233; preciso lembrar que o dplyr n&#227;o salva os dados, nem transforma o original. Em vez disso, ele cria um <emph>data frame</emph> tempor&#225;rio em cada etapa. Se deseja manter os dados, &#233; necess&#225;rio criar uma vari&#225;vel permanente.</p>
<ab><code xml:id="code_manipulacao-transformacao-dados-R_16" corresp="code_manipulacao-transformacao-dados-R_16.txt" rend="block"/></ab>
</div><div type="3"><head>Ordenar (arrange)</head>
<p>A fun&#231;&#227;o <code rend="inline">arrange()</code> nos permite ordenar as colunas de novas formas. Atualmente, o nosso conjunto de dados est&#225; organizado em ordem alfab&#233;tica pelo nome do pa&#237;s. Vamos orden&#225;-lo em ordem decrescente de acordo com o total da popula&#231;&#227;o.</p>
<ab><code xml:id="code_manipulacao-transformacao-dados-R_17" corresp="code_manipulacao-transformacao-dados-R_17.txt" rend="block"/></ab>
</div><div type="3"><head>Sumarizar (summarise)</head>
<p>A &#250;ltima fun&#231;&#227;o do dplyr que veremos &#233; a <code rend="inline">summarise()</code>, usada geralmente para criar uma tabela contendo dados estat&#237;sticos resumidos que podemos plotar. Vamos utilizar a fun&#231;&#227;o <code rend="inline">summarise()</code> para calcular a m&#233;dia da expectativa de vida nos pa&#237;ses, considerando todo o conjunto dados_gapminder.</p>
<ab><code xml:id="code_manipulacao-transformacao-dados-R_18" corresp="code_manipulacao-transformacao-dados-R_18.txt" rend="block"/></ab>
</div></div>
      <div type="2"><head>Juntando tudo</head>
<p>Agora, ap&#243;s termos visto os cinco principais verbos do dplyr, podemos criar rapidamente uma visualiza&#231;&#227;o dos nossos dados. Vamos criar um gr&#225;fico de barras mostrando o n&#250;mero de pa&#237;ses com expectativa de vida maior que 50 anos, em 2007.</p>
<ab><code xml:id="code_manipulacao-transformacao-dados-R_19" corresp="code_manipulacao-transformacao-dados-R_19.txt" rend="block"/></ab>
<figure><desc>Expectativa de vida nos pa&#237;ses em 2007</desc><graphic url="manipulacao-transformacao-dados-R-03.png"/></figure>
<p>Novamente, fazendo uma pequena mudan&#231;a no nosso c&#243;digo, podemos ver tamb&#233;m o n&#250;mero de pa&#237;ses com expectativa de vida maior que 50 anos, em 1952.</p>
<ab><code xml:id="code_manipulacao-transformacao-dados-R_20" corresp="code_manipulacao-transformacao-dados-R_20.txt" rend="block"/></ab>
<p>(<figure><desc>Expectativa de vida nos pa&#237;ses em 1952</desc><graphic url="manipulacao-transformacao-dados-R-04.png"/></figure></p>
</div>
      <div type="2"><head>Conclus&#227;o</head>
<p>Este tutorial deve encaminhar seus conhecimentos para pensar sobre como organizar e manipular dados usando R. Posteriormente, provavelmente vai querer visualizar esses dados de alguma forma, usando gr&#225;ficos, como fizemos em partes desta li&#231;&#227;o. Recomendamos que comece a estudar o <ref target="http://www.ggplot2.org">ggplot2</ref> (em ingl&#234;s), pacote com uma cole&#231;&#227;o de ferramentas que funcionam bem em conjunto com o dplyr. Al&#233;m disso, voc&#234; deve buscar conhecer as outras fun&#231;&#245;es do pacote dplyr que n&#227;o vimos aqui, para aprimorar suas habilidades de manipula&#231;&#227;o de dados. Por enquanto, esta li&#231;&#227;o deve proporcionar um bom ponto de partida, cobrindo muitos dos principais problemas que poder&#225; encontrar.</p>
<div type="3"><head>Notas</head>
<p><ref type="footnotemark" target="#note_1"/> : O pacote "dados" disponibiliza a tradu&#231;&#227;o de conjuntos de dados originalmente em ingl&#234;s encontrados em outros pacotes de R. Est&#225; dispon&#237;vel em <ref target="https://github.com/cienciadedatos/dados">https://github.com/cienciadedatos/dados</ref></p>
</div></div>
    </body>
  </text>
</TEI>
