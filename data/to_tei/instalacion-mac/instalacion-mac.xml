<TEI xmlns="http://www.tei-c.org/ns/1.0" xml:id="instalacion-mac">
    <teiHeader>
        <fileDesc>
            <titleStmt>
                <title>Creación de un entorno de desarrollo integrado para Python (Mac)</title>
                <author role="original_author">
                    <persName>William J. Turkel</persName>
                    <persName>Adam Crymble</persName>
                </author>
                <editor role="reviewers">
                    <persName>Jim Clifford</persName>
                    <persName>Amanda Morton</persName>
                </editor>
                <author role="translators">Víctor Gayol</author>
                <editor role="translation-reviewers">
                    <persName>Jairo A. Melo</persName>
                    <persName>Maria José Afanador-Llach</persName>
                    <persName>Antonio Rojas Castro</persName>
                </editor>
                <editor role="editors">Miriam Posner</editor>
            </titleStmt>
            <publicationStmt>
                <distributor>Programming Historian</distributor>
                <date type="translated">03/15/2017</date>
                <idno type="doi">10.46430/phes0010</idno>
                <date type="published">07/17/2012</date>
            </publicationStmt>
            <sourceDesc>
                <p>Born digital, in a markdown format. Original file: <ref type="original_file" target="#mac-installation"/>.</p>
                <p>There are other translations: <ref target="#instalacao-mac"/>
                </p>
            </sourceDesc>
        </fileDesc>
        <profileDesc>
            <abstract>
                <p>Este tutorial te ayudará a configurar un entorno de desarrollo integrado para Python en un computador con el sistema operativo de Apple.</p>
            </abstract>
            <textClass>
                <keywords>
                    <term xml:lang="en">get-ready</term>
                    <term xml:lang="en">python</term>
                </keywords>
            </textClass>
        </profileDesc>
    </teiHeader>
    <text xml:lang="es">
        <body>
            <h3>Haz respaldo (copia de seguridad) de toda tu computadora</h3>
            <p>Los usuarios de Mac pueden aprovechar <ref target="https://support.apple.com/es-mx/HT201250">Time Machine</ref> para esta labor.</p>
            <h3>Instalar Python v.3</h3>
            <p>A partir de enero 2020, Python versión 2 dejará de recibir actualizaciones y la versión 3 será la única desarrollada activamente. Ya que Mac OS X tiene preinstalado Python v.2., podrás continuar utilizando los programas que todavía dependen de esa versión pero necesitarás descargar la versión 3 para seguir las lecciones que encontrarás en <emph>The Programming Historian</emph>. Puedes corroborar si tu Mac cuenta con Python versión 3 instalado abriendo Terminal en el directorio ´<code rend="inline">'/Aplicaciones/Utilidades'´</code>. En la ventana de Terminal escribe ´<code rend="inline">which Python3´</code> seguido de Enter. Al oprimir la tecla Enter se envía el comando a la computadora cuando se utiliza Terminal. Si ves que en Terminal aparece: ´<code rend="inline">'/usr/bin/python3'´</code> o algo por el estilo que contiene la palabra ´python3 y un manojo de barras oblicuas, puedes tener la seguridad de que tu equipo y sistema lo tienen. Si no fuese así, cierra Terminal y descarga la última versión estable del lenguaje de programación Python (v.3.8 es la más actualizada hasta noviembre de 2019), e instálalo siguiendo las instrucciones del <ref target="https://www.python.org">sitio web de Python</ref>.</p>
            <h3>Creación de un directorio</h3>
            <p>Para mantener organizados los datos en tu equipo, lo mejor es crear un directorio o carpeta en tu computadora dedicado exclusivamente a almacenar todos los programas que escribas con Python (por ejemplo: <hi rend="bold">programming-historian</hi> y manténlo en el lugar de tu disco duro que mejor te acomode).</p>
            <h3>Beautiful Soup</h3>
            <p>Descarga la más reciente versión de <ref target="https://www.crummy.com/software/BeautifulSoup/">Beautiful Soup</ref> y cópiala en el directorio o carpeta donde vas a alojar tus propios programas. Beautiful Soup es una librería (una colección de código previamente escrito) que permite que los programas escritos con Python puedan seccionar más fácilmente páginas web en partes significativas que pueden seguir procesándose después.</p>
            <h3>Instalar un editor de texto</h3>
            <p>Hay muchos editores de texto que puedes utilizar para escribir, guardar y ejecutar comandos de Python. En esta lección vamos a utilizar Sublime Text. Si prefieres otro editor de texto, hay [otras opciones][]. Algunos de nuestros usuarios prefieren un editor llamado <ref target="https://www.barebones.com/products/bbedit/">BBEdit</ref>. Puedes descargar una copia de Sublime Text de [la página web de Sublime Text][].</p>
            <h4>Inicia Sublime Text</h4>
            <p>Ahora necesitas instalar el editor de texto para ejecutar programas de Python. </p>
            <p>Desde el menú, elige</p>
            <p>
                <code rend="inline">Tools -&gt; Build System -&gt; Python</code>. </p>
            <div type="2">
                <head>Paso 2 – “Hola Mundo” en Python</head>
                <p>Como la mayoría sabe, es tradicional que para comenzar a programar en un nuevo lenguaje tratemos de crear un programa que despliegue la frase “Hola Mundo” y termine. Vamos a mostrar cómo hacer esto en Python y en HTML.</p>
                <p>Python es un buen lenguaje de programación para principiantes gracias a que es un lenguaje de programación de muy alto nivel, es decir, expresa el algoritmo de una manera muy parecida a la capacidad cognitiva humana en vez de la capacidad ejecutora de las computadoras (lenguaje de bajo nivel). En otras palabras (y entre otras cosas), en él es posible escribir programas cortos que realizan una gran cantidad de procesos. Entre más corto es el programa, lo más probable es que todo quepa en una pantalla y que sea más fácil hacer un seguimiento comprehensivo de todo en tu mente.</p>
                <p>Todos los lenguajes que estaremos utilizando son capaces de ser interpretados en términos informáticos. Es decir, que existe un programa especial en la computadora (conocido como intérprete) que sabe exactamente cómo seguir las instrucciones escritas en dicho lenguaje. Una manera de utilizar un intérprete es guardando todas las instrucciones en un archivo para luego ejecutar el intérprete sobre él. El intérprete ejecutará cada una de las instrucciones que le hayas dado en tu programa y luego se detendrá. Vamos a intentarlo con un ejemplo.</p>
                <p>En tu editor de texto crea un nuevo archivo y escribe el siguiente programa de dos líneas y guárdalo en tu carpeta <code rend="inline">‘programming-historian</code> con el nombre <code rend="inline">hola-mundo.py</code>
                </p>
                <ab>
                    <code lang="language-python" xml:id="code_instalacion-mac_0" corresp="code_instalacion-mac_0.txt" rend="block"/>
                </ab>
                <p>El editor de texto que seleccionaste debe tener un botón "<code rend="inline">run</code>" o "<code rend="inline">Build</code>" que te permitirá ejecutar tu programa. Por ejemplo, si estás utilizando Sublime Text , haz clic en <code rend="inline">Tools -&gt; Build</code> (o presiona <code rend="inline">⌘B</code>). O si estás en BBEdit, haz clic en el botón “#!” y Run. Si todo funciona bien (es posible que no, con lo cual habrá que revisar las diversas instalaciones y configuraciones), deberás ver algo como sigue:</p>
                <figure>
                    <desc>'Hola Mundo' en Python en una Mac, con BBEdit</desc>
                    <graphic url="BBEdit-hola-mundo.png"/>
                </figure>
                <p>O, con Sublime Text:</p>
                <figure>
                    <desc>'Hola Mundo' en Python en una Mac, con Sublime Text</desc>
                    <graphic url="es-tr-sublimetext-hola-mundo.png"/>
                </figure>
                <div type="3">
                    <head>Interactuar con el intérprete de comandos (<emph>shell</emph>) de Python</head>
                    <p>Otra manera de interactuar con un intérprete es usando lo que se conoce como <emph>shell</emph> o intérprete de comandos. Se puede escribir en una declaración y oprimir la tecla Enter, y el <emph>shell</emph> responderá a tus comandos. Utilizar un <emph>shell</emph> es una excelente forma de comprobar que la construcción de tus declaraciones es adecuada al asegurarte que hace lo que tu piensas que debería hacer. Esto se puede hacer de maneras un tanto distintas en las diversas plataformas (Mac, Windows o Linux).</p>
                    <p>Puedes ejecutar un <emph>shell</emph> de Python iniciando Terminal. En la Mac, abre el Finder, haz doble click en  <code rend="inline">Aplicaciones -&gt; Utilidades -&gt; Terminal</code>. Escribe "<code rend="inline">python3</code>" en la ventana que se abre en tu pantalla y oprime la tecla Enter. Ante el <emph>shell prompt</emph> de Python escribe:</p>
                    <ab>
                        <code lang="language-python" xml:id="code_instalacion-mac_1" corresp="code_instalacion-mac_1.txt" rend="block"/>
                    </ab>
                    <p>Oprime la tecla Enter. La computadora responderá con:</p>
                    <ab>
                        <code lang="language-python" xml:id="code_instalacion-mac_2" corresp="code_instalacion-mac_2.txt" rend="block"/>
                    </ab>
                    <p>Cuando queramos representar gráficamente la interacción con el intérprete de comandos usaremos <code rend="inline">-&gt;</code> para indicar la respuesta del <emph>shell</emph> a tus comandos, como se muestra inmediatamente:</p>
                    <ab>
                        <code lang="language-python" xml:id="code_instalacion-mac_3" corresp="code_instalacion-mac_3.txt" rend="block"/>
                    </ab>
                    <p>En la pantalla de tu computadora aparecerá de esta manera:</p>
                    <figure>
                        <desc>Intérprete de comandos de Python en Terminal de Mac</desc>
                        <graphic url="hola-mundo-terminal.png"/>
                    </figure>
                    <p>Para salir del shell de Python en Terminal debes escribir en el prompt shell:</p>
                    <ab>
                        <code lang="language-python" xml:id="code_instalacion-mac_4" corresp="code_instalacion-mac_4.txt" rend="block"/>
                    </ab>
                    <p>Ahora que tú y tu computadora están en marcha y funcionando, podemos movernos hacia unas tareas algo más interesantes. Si estás trabajando de manera ordenada las lecciones de Python, te sugerimos que pases ahora a la lección <ref target="/es/lecciones/ver-archivos-html">Para entender páginas web y HTML</ref>.</p>
                </div>
            </div>
        </body>
    </text>
</TEI>
