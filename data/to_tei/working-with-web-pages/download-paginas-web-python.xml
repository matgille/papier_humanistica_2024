<TEI xmlns="https://tei-c.org/ns/1-0/">
  <metadata>
  <title>Download de p&#225;ginas Web com Python</title>
  <layout>lesson</layout>
  <slug>download-paginas-web-python</slug>
  <date>2012-07-17</date>
  <translation_date>2021-03-26</translation_date>
  <authors>William J. Turkel,Adam Crymble</authors>
  <reviewers>Jim Clifford,Frederik Elwert</reviewers>
  <editors>Miriam Posner</editors>
  <translator>Bruno Gasparotto Ponne</translator>
  <translation-editor>Josir Cardoso Gomes</translation-editor>
  <translation-reviewer>Felipe Lamarca,Daniel Alves</translation-reviewer>
  <difficulty>2</difficulty>
  <review-ticket>https://github.com/programminghistorian/ph-submissions/issues/360</review-ticket>
  <activity>acquiring</activity>
  <topics>python</topics>
  <abstract>Esta li&#231;&#227;o apresenta o conceito de *Localizador Uniforme de Recursos* (URL em ingl&#234;s) e explica como usar o Python para fazer o download de uma p&#225;gina *Web* no seu disco local.</abstract>
  <original>working-with-web-pages</original>
  <avatar_alt>Um homem alto ao lado de uma mulher baixa</avatar_alt>
  <doi>10.46430/phpt0010</doi>
</metadata>
  <text>
    <body>
      <div n="1"><head>Objetivos da Li&#231;&#227;o</head>
<p>Esta li&#231;&#227;o apresenta o conceito de <emph>Localizador Uniforme de Recursos</emph> (URL em ingl&#234;s) e explica como usar o Python para fazer o download de uma p&#225;gina <emph>Web</emph> no seu disco local.</p>
</div>
      <div n="1"><head>Sobre URLs</head>
<p>Uma p&#225;gina <emph>Web</emph> &#233; um ficheiro hospedado noutro computador, conhecido como <emph>servidor</emph>. Quando um site &#233; acessado, na realidade, o seu computador (o <emph>cliente</emph>) envia um pedido ao <emph>servidor de hospedagem</emph> por meio da rede e o servidor responde enviando uma c&#243;pia da p&#225;gina ao seu computador. Uma forma de acessar uma p&#225;gina por meio do seu navegador &#233; seguir um link. &#201; poss&#237;vel tamb&#233;m colar ou digitar uma URL (localizador uniforme de recursos) diretamente no seu navegador. A URL informa ao seu navegador onde encontrar um recurso online, especificando o servidor, o diret&#243;rio e o nome do ficheiro a ser recuperado, bem como o tipo de <emph>protocolo</emph> que o servidor e o seu navegador utilizar&#227;o para troca de informa&#231;&#245;es (como o HTTP, <emph>protocolo de transfer&#234;ncia de hipertexto</emph>). A estrutura b&#225;sica de uma URL &#233;</p>
<pre><code xml:id="code_download-paginas-web-python_0" type="block" corresp="code_download-paginas-web-python_0.txt"></code></pre>
<p>Vejamos alguns exemplos:</p>
<pre><code class="language-xml" xml:id="code_download-paginas-web-python_1" type="block" corresp="code_download-paginas-web-python_1.txt"></code></pre>
<p>O tipo mais b&#225;sico de URL especifica apenas o protocolo e o dom&#237;nio. Quando inserido em seu navegador, essa URL retornar&#225; a p&#225;gina principal do site <link target="https://www.oldbaileyonline.org">Old Bailey Online</link>. O pressuposto convencional &#233; que a p&#225;gina principal num determinado diret&#243;rio se chamar&#225; <emph>index</emph>, geralmente <code type="inline">index.html</code>.</p>
<p>A URL pode incluir tamb&#233;m um <emph>n&#250;mero de porta</emph> opcional. Sem entrar em muitos detalhes, o protocolo de rede em que se baseia a troca de informa&#231;&#245;es na Internet permite que computadores se conectem de diferentes maneiras. N&#250;meros de portas s&#227;o utilizados para distinguir esses diferentes tipos de conex&#227;o. Uma vez que a porta padr&#227;o para HTTP &#233; a 80, a seguinte URL &#233; equivalente &#224; anterior. </p>
<pre><code class="language-xml" xml:id="code_download-paginas-web-python_2" type="block" corresp="code_download-paginas-web-python_2.txt"></code></pre>
<p>Geralmente h&#225; diversas p&#225;ginas <emph>Web</emph> num determinado site. Essas p&#225;ginas s&#227;o armazenadas em diret&#243;rios no servidor e &#233; poss&#237;vel especificar o caminho para uma p&#225;gina em particular. A p&#225;gina "About" para o site <emph>The Old Bailey Online</emph> tem a seguinte URL:</p>
<pre><code class="language-xml" xml:id="code_download-paginas-web-python_3" type="block" corresp="code_download-paginas-web-python_3.txt"></code></pre>
<p>Por fim, algumas p&#225;ginas permitem inserir <emph>queries</emph>, termo em ingl&#234;s que significa pedido, solicita&#231;&#227;o. O site <emph>The Old Bailey Online</emph>, por exemplo, foi desenvolvido de forma que &#233; poss&#237;vel requisitar uma de suas p&#225;ginas utilizando uma <emph>query string</emph> (conjunto de caracteres que cont&#233;m uma solicita&#231;&#227;o). A seguinte URL acessar&#225; uma p&#225;gina de resultado de buscas por registros de julgamentos criminais contendo a palavra "arsenic".</p>
<pre><code class="language-xml" xml:id="code_download-paginas-web-python_4" type="block" corresp="code_download-paginas-web-python_4.txt"></code></pre>
<p>O fragmento a seguir ao sinal "?" representa a <emph>query</emph>. Aprenda mais sobre como criar <emph>queries</emph> na li&#231;&#227;o <link target="/en/lessons/downloading-multiple-records-using-query-strings">Downloading Multiple Records Using Query Strings</link> (em ingl&#234;s).</p>
</div>
      <div n="1"><head>Acessando URLs com Python</head>
<p>Como um historiador da era digital, voc&#234; frenquentemente desejar&#225; utilizar dados mantidos em sites acad&#234;micos. Para acessar esses dados, seria poss&#237;vel abrir as URLs uma por uma e copiar e colar os conte&#250;dos num ficheiro de texto. Alternativamente, &#233; poss&#237;vel utilizar Python para, automaticamente, coletar e processar os dados. Para isso, &#233; preciso aprender como abrir uma URL por meio do seu pr&#243;prio c&#243;digo. A linguagem Python inclui uma s&#233;rie de padr&#245;es para fazer isso.</p>
<p>Como exemplo, vamos trabalhar com o tipo de documento que provavelmente voc&#234; vai encontrar ao realizar uma pesquisa na &#225;rea de Hist&#243;ria. Suponhamos que haja interesse nas rela&#231;&#245;es raciais na Inglaterra do s&#233;culo XVIII. O site <emph>The Old Bailey Online</emph> &#233; uma fonte rica de informa&#231;&#245;es hist&#243;ricas e disponibiliza transcri&#231;&#245;es de julgamentos que ocorreram entre 1674 e 1913.</p>
<figure><desc>A homepage do site The Old Bailey Online</desc><graphic url="old-bailey.png"/></figure>
<p>Para esse exemplo, utilizaremos a transcri&#231;&#227;o do julgamento de Benjamin Bowsey, um negro condenado por perturbar a paz durante os protestos de Gordon em 1780. A URL para o registro &#233;</p>
<pre><code class="language-xml" xml:id="code_download-paginas-web-python_5" type="block" corresp="code_download-paginas-web-python_5.txt"></code></pre>
<p>Estudando a URL, podemos verificar algumas coisas. Primeiro, o site &#233; programado em JSP (<emph>JavaServer Pages</emph>, uma linguagem de programa&#231;&#227;o para a <emph>web</emph> cujo resultado &#233; um ficheiro HTML). Segundo, &#233; poss&#237;vel acessar registros de julgamentos individuais fazendo uso de <emph>query strings</emph>. Cada registro recebe um n&#250;mero &#250;nico (<emph>id=t</emph> na URL), formado a partir da data da sess&#227;o de julgamento no formato (<emph>AAAAMMDD</emph>) e o n&#250;mero do julgamento naquela sess&#227;o do tribunal. Neste caso, <emph>33</emph>. Caso as duas ocorr&#234;ncias de <code type="inline">33</code> sejam trocadas por <code type="inline">34</code> no link acima, o seu navegador o encaminhar&#225; ao pr&#243;ximo julgamento. Infelizmente, nem todos os sites possuem URLs t&#227;o acess&#237;veis e confi&#225;veis quanto essa.</p>
<figure><desc>Transcri&#231;&#227;o do julgamento de Benjamin Bowsey, 1780</desc><graphic url="bowsey-trial-page.png"/></figure>
<p>Observe a p&#225;gina do julgamento de Benjamin Bowsey. Mais importante do que o conte&#250;do s&#227;o os elementos presentes na p&#225;gina. Note o link <link target="http://www.oldbaileyonline.org/browse.jsp?foo=bar&amp;path=sessionsPapers/17800628.xml&amp;div=t17800628-33&amp;xml=yes">View as XML</link> na parte inferior. Esse link apresenta uma vers&#227;o repleta de marca&#231;&#245;es no texto que podem ser &#250;teis para certos tipos de pesquisa. O <link target="http://www.oldbaileyonline.org/images.jsp?doc=178006280084">documento original digitalizado</link> do julgamento tamb&#233;m pode ser acessado.</p>
<p>Agora vamos tentar abrir a p&#225;gina utilizando Python. Copie o seguinte programa no <emph>Komodo Edit</emph> e salve o ficheiro como <code type="inline">open-webpage.py</code>. Quando executar o programa, a p&#225;gina do julgamento ser&#225; acessada, seus conte&#250;dos ser&#227;o lidos e copiados numa string chamada <code type="inline">webContent</code>. Na sequ&#234;ncia, os primeiros 300 caracteres ser&#227;o exibidos no <emph>painel de sa&#237;da de comandos</emph>. Utilize <code type="inline">Ferramentas -&gt; Ferramentas do Navegador -&gt; Fonte da p&#225;gina</code> no navegador Firefox para verificar que o c&#243;digo HTML da p&#225;gina &#233; o mesmo que o seu programa acessou. Outros navegadores podem ter caminhos distintos para acessar o c&#243;digo fonte. Caso n&#227;o consiga encontrar o caminho no seu navegador, tente utilizar um mecanismo de busca para encontr&#225;-lo. (Consulte a biblioteca de refer&#234;ncia do Python para aprender mais sobre <link target="https://docs.python.org/3/library/urllib.html?highlight=urllib">urllib</link>.)</p>
<pre><code class="language-python" xml:id="code_download-paginas-web-python_6" type="block" corresp="code_download-paginas-web-python_6.txt"></code></pre>
<p>Utilizando apenas essas cinco linhas de c&#243;digo, &#233; poss&#237;vel obter resultados substanciais. Agora, vamos nos assegurar de que cada linha de c&#243;digo est&#225; clara e que &#233; poss&#237;vel distinguir os blocos que permitem ao programa realizar a tarefa que desejamos.</p>
<p><emph>url</emph>, <emph>response</emph> e <emph>webContent</emph> s&#227;o todas vari&#225;veis nomeadas por n&#243;s.</p>
<p><emph>url</emph> cont&#233;m a URL da p&#225;gina que queremos baixar. Neste exemplo, trata-se do julgamento de Benjamin Bowsey.</p>
<p>Na linha seguinte, chamamos a fun&#231;&#227;o <code type="inline">urlopen</code>, contida no m&#243;dulo do Python chamado <code type="inline">urllib.py</code>, e solicitamos que ela acesse o site especificado na vari&#225;vel <emph>url</emph>. Em seguida, salvamos o resultado desse processo numa vari&#225;vel chamada <emph>response</emph>. Essa vari&#225;vel cont&#233;m agora uma vers&#227;o aberta do site solicitado.</p>
<p>No pr&#243;ximo passo, utilizamos o m&#233;todo <code type="inline">read</code>, que j&#225; utilizamos anteriormente, para copiar os conte&#250;dos do site numa nova vari&#225;vel chamada <emph>webContent</emph>.</p>
<p>Assegure-se de ser capaz de identificar as vari&#225;veis (3), o m&#243;dulo (1), os m&#233;todos (2) e os par&#226;metros (1) antes de prosseguir.</p>
<p>No resultado do c&#243;digo acima, alguns marcadores da linguagem HTML poder&#227;o ser identificados:</p>
<pre><code class="language-xml" xml:id="code_download-paginas-web-python_7" type="block" corresp="code_download-paginas-web-python_7.txt"></code></pre>
<p>O conte&#250;do do julgamento fica na parte inferior da p&#225;gina. O que vemos aqui &#233; o c&#243;digo HTML no in&#237;cio do documento. Isso n&#227;o &#233; exatamente o que precisamos para pesquisa hist&#243;rica, mas n&#227;o se preocupe: aprenderemos noutra li&#231;&#227;o a eliminar o excesso de marcadores e obter o conte&#250;do que procuramos.</p>
</div>
      <div n="1"><head>Salvando uma c&#243;pia local da p&#225;gina</head>
<p>Considerando o que foi visto sobre atribuir conte&#250;do a um ficheiro, &#233; bem f&#225;cil modificar o programa acima para salvar o conte&#250;do da vari&#225;vel <emph>webContent</emph> num ficheiro local no seu computador. Copie o seguinte programa no <emph>Komodo Edit</emph>, salve-o como <code type="inline">save-webpage.py</code> e o execute. Utilizando o comando <code type="inline">File -&gt; Open File</code> no Firefox, abra o ficheiro criado no seu disco local (<code type="inline">obo-t17800628-33.html</code>) para confirmar que a c&#243;pia salva &#233; a mesma que a online.</p>
<pre><code class="language-python" xml:id="code_download-paginas-web-python_8" type="block" corresp="code_download-paginas-web-python_8.txt"></code></pre>
<p>Se &#233; poss&#237;vel salvar um &#250;nico ficheiro dessa maneira, seria poss&#237;vel escrever um programa para baixar um conjunto de ficheiros? Por exemplo, seria poss&#237;vel percorrer os identificadores de um conjunto de p&#225;ginas e copi&#225;-las para o seu computador? Sim. Aprenda como na li&#231;&#227;o <link target="/en/lessons/downloading-multiple-records-using-query-strings">Downloading Multiple Files using Query Strings</link> (em ingl&#234;s), que recomendamos depois que tenha terminado as li&#231;&#245;es introdut&#243;rias dessa s&#233;rie.</p>
</div>
      <div n="1"><head>Leitura Sugerida</head>
<ul>
<li>Mitchell, Ryan. &#8220;Web Scraping com Python: Coletando Mais Dados da Web Moderna" (O&#8217;Reilly, 2019).</li>
</ul>
</div>
      <div n="1"><head>Sincroniza&#231;&#227;o do C&#243;digo</head>
<p>Para acompanhar futuras li&#231;&#245;es, &#233; importante ter os ficheiros e programas corretos no seu diret&#243;rio &#8220;programming-historian&#8221;. Ao final de cada li&#231;&#227;o, &#233; poss&#237;vel baixar o ficheiro zip &#8220;programming-historian&#8221; para ter certeza de que o ficheiro correto est&#225; sendo utilizado.</p>
<ul>
<li>programming-historian-1 (<link target="/assets/python-lessons1.zip">zip</link>)</li>
</ul>
</div>
    </body>
  </text>
</TEI>
