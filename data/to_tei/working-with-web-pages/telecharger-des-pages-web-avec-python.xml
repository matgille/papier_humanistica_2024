<TEI xmlns="https://tei-c.org/ns/1-0/">
  <metadata>
  <title>T&#233;l&#233;charger des pages web avec Python</title>
  <layout>lesson</layout>
  <slug>telecharger-des-pages-web-avec-python</slug>
  <date>2012-07-17</date>
  <authors>William J. Turkel,Adam Crymble</authors>
  <reviewers>Jim Clifford,Frederik Elwert</reviewers>
  <editors>Miriam Posner</editors>
  <translator>Fran&#231;ois Dominic Laram&#233;e</translator>
  <translation_date>2021-06-10</translation_date>
  <translation-editor>Marie-Christine Boucher</translation-editor>
  <translation-reviewer>Antoine Henry,C&#233;lian Ringwald</translation-reviewer>
  <difficulty>2</difficulty>
  <original>working-with-web-pages</original>
  <review-ticket>https://github.com/programminghistorian/ph-submissions/issues/364</review-ticket>
  <activity>acquiring</activity>
  <topics>python</topics>
  <abstract>Cette le&#231;on pr&#233;sente les URL et explique comment utiliser Python pour t&#233;l&#233;charger et sauvegarder le contenu d'une page Web sur votre poste de travail.</abstract>
  <categories>lessons,python,original-ph</categories>
  <python_warning>False</python_warning>
  <avatar_alt>Un homme de grande taille et une femme de petite taille</avatar_alt>
  <doi>10.46430/phfr0017</doi>
</metadata>
  <text>
    <body>
      <div n="2"><head>Objectifs de la le&#231;on</head>
<p>Cette le&#231;on pr&#233;sente les URL (un acronyme tir&#233; de l'anglais <emph>Uniform Resource Locator</emph>, soit localisateur uniforme de ressource) et explique comment utiliser Python pour t&#233;l&#233;charger et sauvegarder le contenu d'une page Web sur votre poste de travail.</p>
<div n="3"><head>&#192; propos des URL</head>
<p>Une <emph>page web</emph> est un fichier entrepos&#233; sur un autre ordinateur, commun&#233;ment appel&#233; un <emph>serveur web</emph>. Lorsque vous visitez une page web, votre ordinateur (le <emph>client</emph>) envoie une requ&#234;te au serveur (<emph>l'h&#244;te</emph>) par l'interm&#233;diaire du r&#233;seau, et le serveur r&#233;pond en transmettant une copie de la page demand&#233;e &#224; votre poste de travail. Pour acc&#233;der &#224; une page web &#224; partir de votre navigateur, vous pouvez suivre un lien &#224; partir d'un autre site. Vous pouvez aussi, bien entendu, copier-coller ou entrer un URL directement dans le champ de recherche du navigateur. L'URL indique au navigateur comment trouver la ressource que vous d&#233;sirez, en sp&#233;cifiant le serveur, le r&#233;pertoire et le nom du fichier appropri&#233;s, ainsi que le <emph>protocole</emph> de communication que le serveur et votre navigateur s'engageront &#224; suivre pendant la transaction (par exemple: HTTP, le protocole de transfert hypertexte ou <emph>Hypertext Transfer Protocol</emph>.) Un URL est constitu&#233; des composantes suivantes&#8239;:</p>
<pre><code xml:id="code_telecharger-des-pages-web-avec-python_0" type="block" corresp="code_telecharger-des-pages-web-avec-python_0.txt"></code></pre>
<p>Voyons quelques exemples.</p>
<pre><code class="language-xml" xml:id="code_telecharger-des-pages-web-avec-python_1" type="block" corresp="code_telecharger-des-pages-web-avec-python_1.txt"></code></pre>
<p>Le type d'URL le plus &#233;l&#233;mentaire se contente de sp&#233;cifier le protocole et l'h&#244;te. Si vous fournissez cet URL &#224; votre navigateur, vous obtiendrez la page d'accueil du site <link target="http://www.oldbaileyonline.org/">Old Bailey Online</link>. Par d&#233;faut, on assume que la page principale dans un r&#233;pertoire donn&#233; est nomm&#233;e 'index', le plus souvent <code type="inline">index.html</code>.</p>
<p>L'URL peut aussi inclure un <emph>num&#233;ro de port</emph> (optionnel). Sans entrer dans les d&#233;tails, le protocole de communication qui gouverne les &#233;changes d'information sur Internet permet aux ordinateurs de connecter de multiples fa&#231;ons. Les num&#233;ros de ports servent &#224; identifier ces diff&#233;rentes mani&#232;res de se connecter. Puisque le port par d&#233;faut pour les connexions HTTP est le 80, l'URL suivant est &#233;quivalent au pr&#233;c&#233;dent&#8239;:</p>
<pre><code class="language-xml" xml:id="code_telecharger-des-pages-web-avec-python_2" type="block" corresp="code_telecharger-des-pages-web-avec-python_2.txt"></code></pre>
<p>Comme vous le savez, on retrouve habituellement plusieurs pages web sur un m&#234;me site. Ces pages sont stock&#233;es dans des r&#233;pertoires sur le serveur et il est possible de sp&#233;cifier le chemin &#224; parcourir pour acc&#233;der &#224; la page qui nous int&#233;resse. La page d'information g&#233;n&#233;rale du site <emph>The Old Bailey Online</emph>, par exemple, se retrouve &#224; l'URL suivant&#8239;:</p>
<pre><code class="language-xml" xml:id="code_telecharger-des-pages-web-avec-python_3" type="block" corresp="code_telecharger-des-pages-web-avec-python_3.txt"></code></pre>
<p>Enfin, certaines pages web vous permettent d'envoyer des requ&#234;tes au serveur. <emph>The Old Bailey Online</emph>, par exemple, est con&#231;u de sorte que l'on puisse demander au serveur d'effectuer des recherches dans sa base de donn&#233;es &#224; l'aide d'une <emph>cha&#238;ne d'interrogation</emph>. L'URL suivant vous donnera acc&#232;s &#224; une liste des proc&#232;s criminels dont les archives contiennent le mot "arsenic".</p>
<pre><code class="language-xml" xml:id="code_telecharger-des-pages-web-avec-python_4" type="block" corresp="code_telecharger-des-pages-web-avec-python_4.txt"></code></pre>
<p>Le code qui suit le "?" englobe les param&#232;tres de recherche. Pour en savoir plus sur la mani&#232;re de construire des requ&#234;tes, consultez la le&#231;on <link target="/en/lessons/downloading-multiple-records-using-query-strings">Downloading Multiple Records Using Query Strings</link> (en anglais).</p>
</div></div>
      <div n="2"><head>Ouvrir des URL en Python</head>
<p>En tant qu'historiens et historiennes num&#233;riques, nous avons souvent besoin d'acc&#233;der aux informations enregistr&#233;es dans des bases de donn&#233;es en ligne. Nous pourrions ouvrir les URL appropri&#233;s un par un et copier leur contenu dans des fichiers textes. Mais il est aussi possible d'utiliser Python pour r&#233;colter et traiter automatiquement le contenu d'un ensemble de pages web. Pour ce faire, il faut d'abord savoir comment ouvrir des URL &#224; l'int&#233;rieur de nos programmes. Le langage Python propose un ensemble de fonctionnalit&#233;s qui permettent de r&#233;aliser cela.</p>
<p>Voici un exemple qui exploite le genre de fichier que vous risquez de rencontrer pendant vos propres recherches historiques. Supposons que vous vous int&#233;ressez aux relations interethniques en Grande-Bretagne au XVIIIe si&#232;cle. <emph>The Old Bailey Online</emph> contient des transcriptions de proc&#232;s tenus entre 1674 et 1913&#8239;; il s'agit donc d'une source potentiellement utile pour votre projet.</p>
<figure><desc>Page d'accueil du site Old Bailey Online</desc><graphic url="old-bailey.png"/></figure>
<p>Pour les besoins de cet exemple, nous allons obtenir la transcription du proc&#232;s de Benjamin Bowsey, un homme noir ('black moor' dans le texte) reconnu coupable d'avoir troubl&#233; la paix pendant les <link target="https://fr.wikipedia.org/wiki/Gordon_Riots">Gordon Riots</link> de 1780. L'URL de cette transcription est&#8239;:</p>
<pre><code class="language-xml" xml:id="code_telecharger-des-pages-web-avec-python_5" type="block" corresp="code_telecharger-des-pages-web-avec-python_5.txt"></code></pre>
<p>En &#233;tudiant la structure de l'URL, il est possible d'apprendre plusieurs choses. Par exemple, le <emph>Old Bailey Online</emph> a &#233;t&#233; programm&#233; en langage JSP (<emph>JavaServer Pages</emph>), un langage qui sert &#224; produire du code HTML. On apprend aussi qu'il est possible d'acc&#233;der &#224; un proc&#232;s sp&#233;cifique &#224; l'aide de la cha&#238;ne de requ&#234;te. Il semble aussi que chaque proc&#232;s poss&#232;de son propre code d'identification (<emph>id=t</emph> dans l'URL) compos&#233; de la date de l'audience en format <emph>AAAAMMJJ</emph> et d'un num&#233;ro de s&#233;rie &#224; l'int&#233;rieur de cette audience, <emph>33</emph> dans le cas qui nous concerne. Si vous remplacez les deux copies du nombre <emph>33</emph> par <emph>34</emph> dans votre navigateur, vous devriez obtenir la transcription du proc&#232;s suivant. Mais malheureusement, tous les sites web ne structurent pas leurs URL de fa&#231;on aussi lisible, ni de fa&#231;on aussi r&#233;guli&#232;re.</p>
<figure><desc>Page de la transcription du proc&#232;s de Benjamin Bowsey, 1780</desc><graphic url="bowsey-trial-page.png"/></figure>
<p>Examinez la page du proc&#232;s de Benjamin Bowsey pendant quelques minutes. Concentrez-vous sur les caract&#233;ristiques de la page plut&#244;t que sur la transcription elle-m&#234;me. Par exemple, notez la pr&#233;sence du lien <link target="http://www.oldbaileyonline.org/browse.jsp?foo=bar&amp;path=sessionsPapers/17800628.xml&amp;div=t17800628-33&amp;xml=yes">View as XML</link> au bas de la page, qui vous am&#232;nera vers une version abondamment balis&#233;e du texte qui pourrait &#234;tre utile pour certains types de recherche. Vous pouvez aussi consulter une <link target="http://www.oldbaileyonline.org/images.jsp?doc=178006280084">image num&#233;ris&#233;e du document d'origine</link> qui a &#233;t&#233; transcrit pour construire cette ressource.</p>
<p>Essayons maintenant d'ouvrir cette page en Python. Copiez le programme suivant dans votre &#233;diteur de texte et sauvegardez-le sous le titre <code type="inline">open-webpage.py</code>. Lorsque vous ex&#233;cuterez le programme, il ouvrira (<code type="inline">open</code>) la page du proc&#232;s, il lira (<code type="inline">read</code>) son contenu dans une cha&#238;ne de caract&#232;res Python nomm&#233;e contenu_web, puis il affichera les 300 premiers caract&#232;res du fichier &#224; l'&#233;cran. Utilisez la commande <code type="inline">Outils -&gt; D&#233;veloppement web -&gt; Code source de la page</code> de Firefox (ou son &#233;quivalent dans votre propre navigateur) pour v&#233;rifier que le code source HTML de la page est bien identique &#224; ce que vous venez de t&#233;l&#233;charger. Notez aussi que chaque navigateur poss&#232;de son propre raccourci clavier qui permet d'acc&#233;der au code source HTML d'une page&#8239;; dans le cas de la version Windows de Firefox, il s'agit de <code type="inline">CTRL+u</code>. Si vous ne parvenez pas &#224; trouver l'&#233;quivalent pour votre propre navigateur, essayez de faire appel &#224; votre moteur de recherche favori pour y arriver. (Consultez la documentation de Python pour en savoir plus au sujet de <link target="https://docs.python.org/fr/3/library/urllib.html?highlight=urllib">urllib</link>.)</p>
<pre><code class="language-python" xml:id="code_telecharger-des-pages-web-avec-python_6" type="block" corresp="code_telecharger-des-pages-web-avec-python_6.txt"></code></pre>
<p>Ces quelques lignes de code accomplissent un travail consid&#233;rable en un rien de temps. Prenons un moment pour nous assurer que tout est bien clair et que nous ma&#238;trisons bien le r&#244;le de chacun des blocs qui permettent &#224; ce programme de bien remplir sa mission.</p>
<p>Nous avons nous-m&#234;me instanci&#233; les variables <emph>url</emph>, <emph>reponse</emph> et <emph>contenu_web</emph>.</p>
<p><emph>url</emph> contient l'URL de la page que nous voulons t&#233;l&#233;charger. Dans le cas qui nous concerne, il s'agit de la transcription du proc&#232;s de Benjamin Bowsey.</p>
<p>&#192; la ligne suivante, nous invoquons la fonction <code type="inline">urlopen</code>, qui fait partie d'un module Python nomm&#233; <code type="inline">urllib.py</code>. Cette fonction sert &#224; &#233;tablir une connexion vers le site web dont l'URL a &#233;t&#233; pass&#233; en param&#232;tre. Nous enregistrons ensuite le r&#233;sultat de la requ&#234;te dans la variable <emph>reponse</emph>, qui contient maintenant une liaison vers le site web en question.</p>
<p>Nous utilisons ensuite la m&#233;thode <code type="inline">read</code> pour copier le contenu de cette page web dans une nouvelle variable nomm&#233;e <emph>contenu_web</emph>.</p>
<p>Assurez-vous de bien identifier les variables (il y en a trois), le module, les m&#233;thodes (il y en a deux) et le param&#232;tre avant de continuer.</p>
<p>Dans le texte affich&#233; en sortie, vous remarquerez la pr&#233;sence de certains &#233;l&#233;ments de code HTML&#8239;:</p>
<pre><code class="language-xml" xml:id="code_telecharger-des-pages-web-avec-python_7" type="block" corresp="code_telecharger-des-pages-web-avec-python_7.txt"></code></pre>
<p>La transcription du proc&#232;s elle-m&#234;me appara&#238;t beaucoup plus bas dans la page. Ce que vous voyez ici fait partie de l'en-t&#234;te du document. Ce n'est pas exactement ce dont nous avons besoin pour mener de la recherche historique, mais ne vous d&#233;couragez pas&#8239;: vous apprendrez bient&#244;t comment mettre de c&#244;t&#233; ces marques de balisage et extraire le contenu dont vous avez besoin.</p>
</div>
      <div n="2"><head>Sauvegarder une copie locale d'une page web</head>
<p>Si vous savez d&#233;j&#224; comment <link target="/fr/lecons/travailler-avec-des-fichiers-texte">&#233;crire des fichiers textes en Python</link>, il est assez facile de modifier le programme ci-dessus pour qu'il sauvegarde les donn&#233;es enregistr&#233;es dans <emph>contenu_web</emph> dans un fichier sur votre poste de travail plut&#244;t que de l'afficher &#224; l'&#233;cran. Copiez le programme ci-dessous dans votre &#233;diteur de texte, sauvegardez-le dans un fichier nomm&#233; <code type="inline">save-webpage.py</code> et ex&#233;cutez celui-ci. Utilisez ensuite la commande <code type="inline">Fichier -&gt; Ouvrir un fichier</code> de Firefox, ou son &#233;quivalent dans votre propre navigateur, pour ouvrir le fichier que le programme <code type="inline">save-webpage.py</code> vient de cr&#233;er sur votre poste de travail (<code type="inline">obo-t17800628-33.html</code>) et v&#233;rifiez que le r&#233;sultat correspond bien &#224; la page du proc&#232;s Bowsey que vous avez consult&#233;e en ligne un peu plus t&#244;t.</p>
<pre><code class="language-python" xml:id="code_telecharger-des-pages-web-avec-python_8" type="block" corresp="code_telecharger-des-pages-web-avec-python_8.txt"></code></pre>
<p>Maintenant que vous savez comment sauvegarder une page web dans un fichier, pourriez-vous &#233;crire un programme capable de t&#233;l&#233;charger toute une collection de pages? Pourriez-vous parcourir une liste de codes d'identification de proc&#232;s, par exemple, et sauvegarder des copies locales de chacune des pages correspondantes? Oui. Vous apprendrez notamment &#224; faire cela dans la le&#231;on <link target="/en/lessons/downloading-multiple-records-using-query-strings">Downloading Multiple Records Using Query Strings</link>, que nous vous recommandons d'&#233;tudier lorsque vous aurez ma&#238;tris&#233; la pr&#233;sente s&#233;rie de le&#231;ons d'introduction.</p>
</div>
      <div n="2"><head>Lectures recommand&#233;es</head>
<ul>
<li>Lutz, Mark. &#8220;Ch. 4&#8239;: Introducing Python Object Types&#8221;, <emph>Learning Python</emph> (O&#8217;Reilly, 1999).</li>
</ul>
<div n="3"><head>Synchronisation du code</head>
<p>Pour bien suivre la progression de la pr&#233;sente s&#233;rie de le&#231;ons, il est important que vous disposiez des bons fichiers et des bons programmes dans votre r&#233;pertoire "programming-historian". &#192; la fin de chacune des le&#231;ons, vous pourrez t&#233;l&#233;charger une archive zip "programming-historian" &#224; jour pour vous assurer d'avoir acc&#232;s au code source n&#233;cessaire.</p>
<ul>
<li>programming-historian-1 (<link target="/assets/python-lessons1.zip">zip</link>)</li>
</ul>
</div></div>
    </body>
  </text>
</TEI>
