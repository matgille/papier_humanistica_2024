def read_handwriting_in_stored_image(read_image_path):
    # If the path to the image does not exist, print an error and return an empty string.
    if not os.path.exists(read_image_path):
        print("Image not found. Path", read_image_path, " does not exist.")
        return("")

    # The text_in_image will be returned. Set it to an empty string to start.
    text_in_image = ""

    read_image = open(read_image_path, "rb")

    # Call API with image and raw response (allows you to get the operation location). Call Azure using computervision_client with the image.
    read_response = computervision_client.read_in_stream(read_image, raw=True)

    # Get the operation location (URL with ID as last appendage)
    read_operation_location = read_response.headers["Operation-Location"]

    # Take the ID off and use to get results
    operation_id = read_operation_location.split("/")[-1]

    # Call the "GET" API and wait for the retrieval of the results.
    while True:
        read_result = computervision_client.get_read_result(operation_id)
        if read_result.status.lower() not in ['notstarted', 'running']:
            break
            print('Waiting for result...')
            time.sleep(10)

    # Print results, line by line.
    if read_result.status == OperationStatusCodes.succeeded:
        for text_result in read_result.analyze_result.read_results:
            for line in text_result.lines:
                text_in_image = text_in_image + "\n"+ line.text

    # return the text
    return(text_in_image)
