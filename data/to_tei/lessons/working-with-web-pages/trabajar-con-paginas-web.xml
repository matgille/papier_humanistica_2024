<TEI xmlns="https://tei-c.org/ns/1-0/">
  <metadata>
  <title>Descargar p&#225;ginas web con Python</title>
  <authors>William J. Turkel,Adam Crymble</authors>
  <date>2012-07-17</date>
  <translation_date>2017-03-15</translation_date>
  <editors>Miriam Posner</editors>
  <reviewers>Miriam Posner,Jim Clifford,Frederik Elwert</reviewers>
  <translator>V&#237;ctor Gayol</translator>
  <translation-editor>Adam Crymble</translation-editor>
  <translation-reviewer>Jairo A. Melo,Maria Jos&#233; Afanador-Llach,Antonio Rojas Castro</translation-reviewer>
  <review-ticket>https://github.com/programminghistorian/ph-submissions/issues/42</review-ticket>
  <layout>lesson</layout>
  <categories>lessons,python,original-ph</categories>
  <difficulty>2</difficulty>
  <activity>acquiring</activity>
  <topics>python</topics>
  <abstract>Esta lecci&#243;n muestra qu&#233; es un Localizador de recursos uniforme (Uniform Resource Locator = URL) y explica c&#243;mo utilizar Python para descargar y guardar los contenidos de una p&#225;gina web en tu disco duro.</abstract>
  <next>manipular-cadenas-de-caracteres-en-python</next>
  <previous>reutilizacion-de-codigo-y-modularidad</previous>
  <original>working-with-web-pages</original>
  <python_warning>False</python_warning>
  <avatar_alt>Grabado de una mujer y un hombre de pies.</avatar_alt>
  <doi>10.46430/phes0029</doi>
  <sequence>5</sequence>
  <series_total>15</series_total>
</metadata>
  <text xml:lang="es">
    <body>
      <div type="2"><head>Objetivos de la lecci&#243;n</head>
<p>Esta lecci&#243;n muestra qu&#233; es un Localizador de recursos uniforme (<emph>Uniform Resource Locator</emph> = URL) y explica c&#243;mo utilizar Python para descargar y guardar los contenidos de una p&#225;gina web en tu disco duro.</p>
</div>
      <div type="2"><head>Acerca de los URL</head>
<p>Una <emph>p&#225;gina web</emph> es un archivo que est&#225; almacenado en otra computadora, una m&#225;quina conocida como <emph>servidor web</emph>. Cuando t&#250; &#8220;vas&#8221; a una p&#225;gina web, lo que en realidad sucede es que tu computadora (el <emph>cliente</emph>) env&#237;a una solicitud al servidor (el <emph>alojamiento</emph> o <emph>host</emph>) a trav&#233;s de la red, y el servidor responde envi&#225;ndote una copia de la p&#225;gina a tu m&#225;quina. Una manera de ir a una p&#225;gina web con tu navegador es seguir un enlace a alguna otra parte. Tambi&#233;n tienes la posibilidad de pegar o escribir un localizador de recursos uniforme (URL) directamente en tu navegador. El URL le indica a tu navegador d&#243;nde encontrar un recurso en l&#237;nea especificando el servidor, directorio y nombre del archivo que tiene que ser recuperado, as&#237; como el tipo de <emph>protocolo</emph> que tu navegador y el servidor estar&#225;n de acuerdo en usar mientras intercambian informaci&#243;n (como HTTP o <emph>protocolo de transferencia de hipertexto</emph>). La estructura b&#225;sica de un URL es:</p>
<pre><code xml:id="code_trabajar-con-paginas-web_0" type="block" corresp="code_trabajar-con-paginas-web_0.txt"></code></pre>
<p>Veamos algunos ejemplos.</p>
<pre><code class="language-xml" xml:id="code_trabajar-con-paginas-web_1" type="block" corresp="code_trabajar-con-paginas-web_1.txt"></code></pre>
<p>El tipo m&#225;s b&#225;sico de URL simplemente especifica el protocolo y el alojamiento. Si introduces este URL en tu navegador, te mostrar&#225; la p&#225;gina principal del sitio <link target="http://oldbaileyonline.org">The Old Bailey Online</link>. Por defecto, la p&#225;gina principal en un directorio se denomina &#237;ndice, por lo general <code type="inline">index.html</code>.</p>
<p>El URL tambi&#233;n pude incluir un <emph>n&#250;mero de puerto</emph> opcional. Sin entrar en detalles, el protocolo de red que subyace en el intercambio de informaci&#243;n en la Internet permite a las computadoras conectarse de diferentes maneras. Los n&#250;meros de puerto se usan para distinguir estas diferentes formas de conexi&#243;n. Dado que, por defecto, el puerto para HTTP es el n&#250;mero 80, el siguiente URL es equivalente al previo.</p>
<pre><code class="language-xml" xml:id="code_trabajar-con-paginas-web_2" type="block" corresp="code_trabajar-con-paginas-web_2.txt"></code></pre>
<p>Como sabes, generalmente hay muchas p&#225;ginas en un determinado sitio web. &#201;stas est&#225;n almacenadas en directorios del servidor y t&#250; puedes especificar la ruta (<emph>path</emph>) a una p&#225;gina en particular. La p&#225;gina &#8220;Acerca de&#8221; del <emph>The Old Bailey Online</emph> tiene el siguiente URL:</p>
<pre><code class="language-xml" xml:id="code_trabajar-con-paginas-web_3" type="block" corresp="code_trabajar-con-paginas-web_3.txt"></code></pre>
<p>Por &#250;ltimo, muchas p&#225;ginas web te permiten introducir consultas. El sitio web <emph>The Old Bailey Online</emph>, por ejemplo, est&#225; dise&#241;ado de tal manera que puedes solicitar una p&#225;gina en particular utilizando una <link target="https://es.wikipedia.org/wiki/Query_string"><emph>cadena de consulta</emph></link>. EL siguiente URL te llevar&#225; a la p&#225;gina de resultados de b&#250;squeda de registros de juicios criminales que contienen la palabra &#8220;arsenic&#8221; (ars&#233;nico)</p>
<pre><code class="language-xml" xml:id="code_trabajar-con-paginas-web_4" type="block" corresp="code_trabajar-con-paginas-web_4.txt"></code></pre>
<p>El fragmento de texto despu&#233;s de &#8220;?&#8221; representa la consulta. Puedes aprender m&#225;s acerca de la construcci&#243;n de consultas en <link target="/lessons/downloading-multiple-records-using-query-strings">Descarga de registros m&#250;ltiples usando cadenas de consulta</link> (en ingl&#233;s).</p>
</div>
      <div type="2"><head>Abrir URLS con Python</head>
<p>Como historiador digital a menudo quer&#225;s utilizar los datos alojados en una base de datos acad&#233;mica en l&#237;nea. Para obtener estos datos puedes abrir una URL a la vez y copiar y pegar su contenido a un archivo de texto, o puedes utilizar Python para hacer una cosecha por  procesamiento autom&#225;tico de las p&#225;ginas web. Para hacer esto tienes que ser capaz de abrir cualquier URL con tus propios programas. El lenguaje Python incluye un n&#250;mero de formas est&#225;ndar para hacer esto.</p>
<p>Como ejemplo, vamos a trabajar con una tipo de archivo que podr&#225;s encontrar haciendo investigaci&#243;n hist&#243;rica. Digamos que te interesan las relaciones &#233;tnicas en la Gran Breta&#241;a del siglo XVIII. The Old Bailey Online (OBO) es una rica fuente que proporciona transcripciones de juicios de 1674 a 1913 y es un buen lugar para buscar documentaci&#243;n.</p>
<figure><desc>P&#225;gina principal del sitio The Old Bailey Online</desc><graphic url="old-bailey.png"/></figure>
<p>Para este ejemplo vamos a utilizar la relator&#237;a del juicio de Benjamin Bowsey, un &#8220;moro negro&#8221; que fue procesado por romper la paz durante las <link target="http://en.wikipedia.org/wiki/Gordon_Riots">revueltas de Gordon</link> en 1780. El URL para esa entrada es:</p>
<pre><code class="language-xml" xml:id="code_trabajar-con-paginas-web_5" type="block" corresp="code_trabajar-con-paginas-web_5.txt"></code></pre>
<p>Si estudiamos el URL podemos aprender varias cosas. En primer lugar, OBO fue escrito en JSP (+JavaServer Pages*, un lenguaje de programaci&#243;n que genera HTML), y es posible obtener entradas de procesos judiciales individuales haciendo uso de cadenas de consulta. A cada proceso se le asign&#243;, aparentemente un n&#250;mero de identificaci&#243;n (ID) (<emph>id=t</emph> en el URL), compuesto a partir de la fecha del juicio en formato (<emph>AAAA-MM-DD</emph>) y el n&#250;mero de proceso dentro de esa sesi&#243;n de la corte, en este caso: <emph>33</emph>. Si cambias <code type="inline">33</code> por <code type="inline">34</code> en tu navegador y presionas Enter, eso te deber&#225; llevar al siguiente proceso. Desafortunadamente no todos los sitios web tienen estos URL tan legibles y fiables.</p>
<figure><desc>P&#225;gina de la transcripci&#243;n del juicio de Benjamin Bowsey, 1780</desc><graphic url="bowsey-trial-page.png"/></figure>
<p>T&#243;mate unos minutos para ver la p&#225;gina del proceso contra Benjamin Bowsey. No estamos muy interesados en lo que dice la relator&#237;a sino en la informaci&#243;n que proporciona la p&#225;gina. Al final de la misma notar&#225;s que hay un enlace <link target="http://www.oldbaileyonline.org/browse.jsp?foo=bar&amp;path=sessionsPapers/17800628.xml&amp;div=t17800628-33&amp;xml=yes">View as XML</link> que te lleva a una versi&#243;n de la p&#225;gina del texto profusamente etiquetado con <link target="https://es.wikipedia.org/wiki/Extensible_Markup_Language">XML</link> que es muy &#250;til para cierto tipo de investigaciones. Tambi&#233;n puedes ver un escaneo del <link target="http://www.oldbaileyonline.org/images.jsp?doc=178006280084">documento original</link> que fue transcrito para hacer construir esta fuente.</p>
<p>Ahora vamos a tratar de abrir la p&#225;gina usando Python. Copia el siguiente programa en Komodo Edit y gu&#225;rdalo como <code type="inline">abre-paginaweb.py</code> Cuando ejecutes el programa abrir&#225; la p&#225;gina del proceso judicial, leer&#225; (<code type="inline">read</code>) su contenido en una cadena de texto de Python llamada <code type="inline">contenidoWeb</code> y luego te mostrar&#225; mediante <code type="inline">print</code> los primeros trescientos caracteres de la cadena en el panel de salida de comando. Usa el comando de Firefox <code type="inline">Herramientas -&gt; Desarrollador web -&gt; C&#243;digo fuente de esta p&#225;gina</code> (Ctrl-U) para verificar que la fuente de la p&#225;gina de ese URL es la misma fuente que tu programa recupera. Consulta la biblioteca de referencias de Python para saber m&#225;s de <link target="https://docs.python.org/3/library/urllib.html">urllib</link>.</p>
<pre><code class="language-python" xml:id="code_trabajar-con-paginas-web_6" type="block" corresp="code_trabajar-con-paginas-web_6.txt"></code></pre>
<p>Estas cinco l&#237;neas de c&#243;digo logran mucho r&#225;pidamente. Vamos a detenernos un momento para asegurarnos de que todo est&#225; claro y que puedes reconocer los bloques que permiten que este programa haga lo que queremos que haga.</p>
<p><emph>url</emph>, <emph>respuesta</emph> y <emph>contenidoWeb</emph> son variables que nosotros mismos hemos llamado as&#237;.</p>
<p><emph>url</emph> contiene el URL de la p&#225;gina web que queremos descargar. En este caso, el juicio contra Benjamien Bowsey.</p>
<p>En la l&#237;nea siguiente invocamos a la funci&#243;n <code type="inline">urlopen</code> que est&#225; almacenada en un m&#243;dulo de Python llamado <code type="inline">urllib.py</code> y le hemos pedido a esa funci&#243;n que abra el sitio web en el URL que le especificamos. Entonces, guardamos el resultado de ese proceso en una variable denominada <emph>respuesta</emph>. Esta variable contiene una versi&#243;n abierta del sitio web solicitado.</p>
<p>Utilizamos entonces el m&#233;todo <code type="inline">read</code>, que ya usamos anteriormente, para copiar el contenido de esa p&#225;gina web abierta en una nueva variable llamada <emph>contenidoWeb</emph>.</p>
<p>Aseg&#250;rate de que puedes reconocer las variables (hay 3), los m&#243;dulos (1), los m&#233;todos (2) y los par&#225;metros (1) antes de seguir adelante.</p>
<p>Al ejecutar el programa, te dar&#225;s cuenta que en el panel de salida se muestra algo etiquetado en HTML:</p>
<pre><code class="language-xml" xml:id="code_trabajar-con-paginas-web_7" type="block" corresp="code_trabajar-con-paginas-web_7.txt"></code></pre>
<p>El contenido del proceso judicial est&#225; mucho m&#225;s adelante en la p&#225;gina. Lo que vemos aqu&#237; es solamente en c&#243;digo HTML de la parte superior del documento. Esto no es lo que necesitamos para una investigaci&#243;n hist&#243;rica, pero no te preocupes: en breve aprender&#225;s c&#243;mo quitar el exceso de etiquetas y obtener el contenido que est&#225;s buscando.</p>
</div>
      <div type="2"><head>Guardar una copia local de una p&#225;gina web</head>
<p>Dado que ya sabes lo suficiente acerca de escribir en archivos, resulta bastante sencillo modificar el programa anterior para que escriba el contenido de la cadena de texto <emph>contenidoWeb</emph> en un archivo local de nuestra computadora en vez de en el panel de salida. Copia el siguiente programa en Komodo Edit, gu&#225;rdalo como <code type="inline">guardar-paginaweb.py</code> y ejec&#250;talo. Abre en tu navegador el archivo creado en tu disco duro (<code type="inline">obo-t17800628-33.html</code>) para confirmar que la copia que guardaste es igual a la que est&#225; en l&#237;nea.</p>
<pre><code class="language-python" xml:id="code_trabajar-con-paginas-web_8" type="block" corresp="code_trabajar-con-paginas-web_8.txt"></code></pre>
<p>Ahora, si tu puedes guardar un solo archivo as&#237; de f&#225;cil, &#191;es posible escribir un programa que te permita descargar un pu&#241;ado de archivos? &#191;Es posible incrementar la cantidad de IDs de los juicios y obtener copias de todos ellos en una sola descarga? Efectivamente. Puedes aprender c&#243;mo hacerlo en la lecci&#243;n <link target="/lessons/downloading-multiple-records-using-query-strings">Downloading Multiple Files using Query Strings</link>, que te recomendamos ver una vez completadas las lecciones introductorias de esta serie.</p>
</div>
      <div type="2"><head>Lecturas sugeridas</head>
<ul>
<li>Lutz, Mark. &#8220;Ch. 4: Introducing Python Object Types&#8221;, <emph>Learning
Python</emph> (O&#8217;Reilly, 1999).</li>
</ul>
</div>
      <div type="2"><head>Sicronizaci&#243;n de c&#243;digo</head>
<p>Para seguir a lo largo de las lecciones futuras es importante que tengas los archivos correctos y programas en el directorio "programming-historian" de tu disco duro. Al final de cada lecci&#243;n puedes descargar el archivo zip "python-es-lecciones" para asegurarte que tienes el c&#243;digo correcto.</p>
<ul>
<li>python-es-lecciones1.zip (<link target="/assets/python-es-lecciones1.zip">zip</link>)</li>
</ul>
</div>
    </body>
  </text>
</TEI>
