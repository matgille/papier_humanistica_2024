<TEI xmlns="http://www.tei-c.org/ns/1.0" xml:id="introduccion-a-ffmpeg">
  <teiHeader>
 <fileDesc>
  <titleStmt>
   <title>Introducci&#243;n a la transcodificaci&#243;n, edici&#243;n y visualizaci&#243;n de datos audiovisuales con FFmpeg</title>
  <author role="original_author">Dave Rodriguez</author><editor role="reviewers"><persName>Tesla Cariani</persName><persName>Josh Romphf</persName></editor><author role="translators"><persName>Dave Rodriguez</persName><persName>Sebastian Fiori</persName></author><editor role="translation-reviewers"><persName>Jennifer Isasi</persName><persName>Jos&#233; Antonio Motilla</persName></editor><editor role="editors">Brandon Walsh</editor></titleStmt>
  <publicationStmt>
   <idno type="doi">10.46430/phes0049</idno><date type="published">12/20/2018</date><date type="translated">12/11/2020</date><p>Lesson reviewed and published in Programming Historian.</p>
  </publicationStmt>
  <sourceDesc>
  <p>Born digital, in a markdown format. Original file: <ref type="original_file" target="#introduction-to-ffmpeg"/>.</p><p>There are other translations: <ref target=""/></p></sourceDesc>
 </fileDesc>
 <profileDesc><abstract><p>Esta lecci&#243;n introduce las funciones b&#225;sicas de FFmpeg, una herramienta libre de l&#237;nea de comandos utilizada para manipular y analizar materiales audiovisuales.</p></abstract><textClass><keywords><term xml:lang="en">data-manipulation</term><term xml:lang="en">data-visualization</term></keywords></textClass></profileDesc>
</teiHeader>
  <text xml:lang="es">
    <body>
      <div type="2"><head>Introducci&#243;n</head>
<p>Historicamente, las Humanidades Digitales se han enfocado casi exclusivamente en el analisis de fuentes textuales a trav&#233;s de m&#233;todos computacionales (Hockey, 2004). Sin embargo, hay un inter&#233;s creciente en el campo de la utilizaci&#243;n de m&#233;todos computacionales para el an&#225;lisis de materiales audiovisuales de patrimonio cultural, como refleja la creaci&#243;n de la <ref target="https://avindhsig.wordpress.com/">Alianza de Organizaciones de Humanidades Digitales Grupo de Inter&#233;s Especial: Materiales audiovisuales en Humanidades Digitales</ref> y <ref target="https://figshare.com/articles/AV_in_DH_State_of_the_Field/5680114">el aumento de las presentaciones relacionadas con temas audiovisuales en la conferencia global de AOHD</ref> en los a&#241;os anteriores. Investigaciones recientes, tal como <ref target="https://distantviewing.org">Distant Viewing TV</ref>, indican un cambio en el campo hacia proyectos relacionados con el uso de t&#233;cnicas computacionales para ampliar el alcance de los materiales que los y las humanistas digitales pueden explorar. Como afirma Erik Champion, "la audiencia de Humanidades Digitales no siempre est&#225; enfocada en la literatura o est&#225; interesada en las formas tradicionales de alfabetizaci&#243;n" y la aplicaci&#243;n de metodolog&#237;as digitales para estudiar cultura audiovisual es una faceta emergente y emocionante de las humanidades digitales (Champion, 2017, traducido por el autor). Hay muchas herramientas valiosas, gratuitas y de c&#243;digo abierto disponibles para aquellos interesados en trabajar con materiales audiovisuales (por ejemplo, el tutorial de <emph>Programming Historian</emph> <ref target="/es/lecciones/editar-audio-con-audacity">Editar Audio con Audacity</ref>). Este tutorial presentar&#225; otra: FFmpeg.</p>
<p><ref target="https://www.ffmpeg.org/about.html">FFmpeg</ref> es el <emph>framework</emph> multimedia de c&#243;digo abierto l&#237;der para transcodificar, editar, filtrar y reproducir casi cualquier tipo de formato audiovisual digital (sitio web de FFmpeg - "About"). Muchos programas comunes y sitios web usan FFmpeg para leer y escribir archivos audiovisuales, por ejemplo, VLC, Google Chrome, YouTube y <ref target="https://trac.ffmpeg.org/wiki/Projects">muchos m&#225;s</ref>. Adem&#225;s de ser una herramienta de programa y de desarrollo web, FFmpeg se puede usar en la interfaz de la l&#237;nea de comandos para realizar muchas tareas comunes, complejas e importantes, relacionadas con la gesti&#243;n, modificaci&#243;n y an&#225;lisis de archivos audiovisuales. Estos tipos de procesos, tales como editar, transcodificar o extraer los metadatos de archivos, generalmente requieren acceso a otro programa (tal como editores de v&#237;deo no lineal, como Adobe Premiere o Final Cut Pro); sin embargo, FFmpeg permite a un usuario operar directamente en archivos audiovisuales sin el uso de interfaces o programa de terceros. Como tal, el conocimiento del <emph>framework</emph> permite a los usuarios manipular materiales audiovisuales para satisfacer sus necesidades con una soluci&#243;n de c&#243;digo abierto y gratuita, que ofrece gran parte de la funcionalidad de un costoso programa de audio y v&#237;deo. Este tutorial ofrece una introducci&#243;n a la lectura y escritura de comandos de FFmpeg y una gu&#237;a paso a paso a partir de un caso pr&#225;ctico para aprender a utilizar el <emph>framework</emph> en un trabajo espec&#237;fico para los humanistas digitales. Espec&#237;ficamente, se mostrar&#225; c&#243;mo FFmpeg puede ser utilizado para extraer y analizar datos de color en un video archiv&#237;stico.</p>
<div type="3"><head>Objetivos de aprendizaje</head>
<list type="unordered">
<item>Instalar FFmpeg en tu computadora o usar una versi&#243;n "demo" en el navegador web</item>
<item>Comprender la estructura b&#225;sica y la sintaxis de los comandos de FFmpeg</item>
<item>
Aprender varios comandos &#250;tiles, tales como:<list type="unordered">
<item>"Re-wrap" (cambiar el contenedor) y transcodificar (recodificar archivos)</item>
<item>"Demux" de archivos (separar audio y v&#237;deo)</item>
<item>Recortar/Editar archivos</item>
<item>Usar FFplay para reproducir archivos</item>
<item>Crear vectorscopios para visualizar los datos de color</item>
<item>Usar FFprobe para generar informes de los datos de color</item>
</list>
</item>
<item>Introducir recursos para mayor exploraci&#243;n y experimentaci&#243;n</item>
</list>
</div><div type="3"><head>Requisitos previos</head>
<p>Antes de comenzar con este tutorial, es necesario que localices la <ref target="https://es.wikipedia.org/wiki/Terminal_(macOS)">Terminal</ref> de tu computadora u otra interfaz de l&#237;nea de comandos, ya que ah&#237; es donde ingresar&#225;s y ejecutar&#225;s los comandos de FFmpeg. Si necesitas instrucci&#243;n para acceder y usar la interfaz de l&#237;nea de comandos, te recomendamos la lecci&#243;n de <emph>Programming Historian</emph> <ref target="/es/lecciones/introduccion-a-bash">Introducci&#243;n a la l&#237;nea de comandos en Bash</ref> para usarios de Mac y Linux o, para usarios de Windows, <ref target="/es/lecciones/introduccion-a-powershell">Introducci&#243;n a la l&#237;nea de comandos de Windows con PowerShell</ref>. Adicionalmente, ser&#225; de utilidad tener conocimientos b&#225;sicos de <ref target="https://es.wikipedia.org/wiki/C%C3%B3dec">c&#243;decs</ref> y <ref target="https://es.wikipedia.org/wiki/Formato_contenedor">contenedores</ref> audiovisuales para entender con mayor detalle el funcionamiento de FFmpeg. Proporcionaremos informaci&#243;n adicional y revisaremos con mayor detalle sobre c&#243;decs y contenedores en la secci&#243;n sobre ejemplos de comandos preliminares de este tutorial.</p>
</div></div>
      <div type="2"><head>C&#243;mo instalar FFmpeg</head>
<p>La instalaci&#243;n de FFmpeg es posiblemente la parte m&#225;s dif&#237;cil de usar esta herramienta. Afortunadamente, existen algunas gu&#237;as y recursos disponibles para instalar el <emph>framework</emph> para cada sistema operativo.</p>
<p style="alert alert-warning">
Nuevas versiones de FFmpeg son lanzadas aproximadamente cada seis meses. Para mantenerse al tanto de ellas, es recomendable seguir a FFmpeg en <ref target="https://twitter.com/FFmpeg">Twitter</ref> o en su sitio web. Las nuevas versiones de FFmpeg generalmente contienen caracter&#237;sticas tales como filtros nuevos y actualizados, compatibilidades de c&#243;decs y correcci&#243;n de errores. La sintaxis de FFmpeg no cambia con estas actualizaciones y las capacidades antiguas rara vez se eliminan. Puedes aprender m&#225;s sobre estas actualizaciones consultando los anuncios de actualizaciones anteriores en la secci&#243;n de <ref target="https://www.ffmpeg.org/index.html#news">News</ref> en el sitio web de FFmpeg.
</p>
<div type="3"><head>Para usuarios de Mac OS</head>
<p>La opci&#243;n m&#225;s simple es usar un administrador de paquetes como <ref target="https://brew.sh/">Homebrew</ref> para instalar FFmpeg y asegurar que permanezca en la versi&#243;n m&#225;s reciente. Para completar este tipo de instalaci&#243;n, sigue estos pasos:</p>
<list type="unordered">
<item>
<p>Instala Homebrew de acuerdo a las instrucctiones en el enlace de arriba</p>
</item>
<item>
<p>Para comenzar con una instalaci&#243;n b&#225;sica, ejecuta <code rend="inline">brew install ffmpeg</code> en tu Terminal para comenzar una instalaci&#243;n b&#225;sica
<hi rend="bold">Nota</hi>: generalmente se recomienda instalar FFmpeg con opciones adicionales a la incluidas en la instalaci&#243;n b&#225;sica; esto proporcionar&#225; acceso a m&#225;s herramientas y funciones. <ref target="https://avpres.net/FFmpeg/install_Apple.html">La Gu&#237;a de Instalaci&#243;n de Apple de Reto Kromer</ref> proporciona un buen conjunto de opciones adicionales:</p>
<ab><code xml:id="code_introduccion-a-ffmpeg_0" corresp="code_introduccion-a-ffmpeg_0.txt" lang="language-bash" rend="block"/></ab>
<list type="unordered">
<item>
<p>Para una explicaci&#243;n de estas opciones adicionales, revisa <ref target="https://training.ashleyblewer.com/presentations/ffmpeg.html#10">La Gu&#237;a FFmpeg de Ashley Blewer</ref>.</p>
</item>
<item>
<p>Adem&#225;s, puedes ejecutar <code rend="inline">brew options ffmpeg</code> para ver qu&#233; caracter&#237;sticas est&#225;n o han estado disponibles en la versi&#243;n actual de FFmpeg</p>
</item>
<item>
<p>Para actualizar tu instalaci&#243;n a la versi&#243;n m&#225;s reciente, ejecuta:</p>
<ab><code xml:id="code_introduccion-a-ffmpeg_1" corresp="code_introduccion-a-ffmpeg_1.txt" lang="language-bash" rend="block"/></ab>
</item>
</list>
</item>
<item>
<p>Para m&#225;s opciones de instalaci&#243;n para Mac OS, revisa <ref target="https://trac.ffmpeg.org/wiki/CompilationGuide/macOS">La Gu&#237;a de Compilaci&#243;n de FFmpeg para Mac OS</ref> (la gu&#237;a solo est&#225; disponible en ingl&#233;s).</p>
</item>
</list>
</div><div type="3"><head>Para usuarios de Windows</head>
<p>Los usarios de Windows pueden usar el adminstratdor de paquetes <ref target="https://chocolatey.org/">Chocolately</ref> para instalar y mantener FFmpeg. <ref target="https://avpres.net/FFmpeg/install_Windows.html">La Gu&#237;a de Instalaci&#243;n de Windows de Reto Kromer</ref> proporciona toda la informaci&#243;n necesaria para usar Chocolately o construir el <emph>framework</emph> a partir del c&#243;digo fuente (la gu&#237;a solo est&#225; disponible en ingl&#233;s).</p>
</div><div type="3"><head>Para usuarios de Linux</head>
<p><ref target="ttp://linuxbrew.sh/">Linuxbrew</ref> es un programa similar a Homebrew que se puede utilizar para instalar y mantener FFmepg en Linux. Reto Kromer tambi&#233;n proporciona una gu&#237;a &#250;til, <ref target="https://avpres.net/FFmpeg/install_Linux.html">la Gu&#237;a de Instalaci&#243;n de Linux</ref>, que es similar a la instalaci&#243;n en Mac OS. Tu distribuci&#243;n de Linux puede tener su <ref target="https://www.linode.com/docs/tools-reference/linux-package-management/">propio administrador de paquetes</ref> que incluye paquetes FFmpeg (la gu&#237;a solo est&#225; disponible en ingl&#233;s). Dependiendo de tu distribuci&#243;n de Linux (Ubuntu, Fedora, Arch Linux, etc.) estas versiones pueden variar, as&#237; que usar Linuxbrew podr&#237;a ser &#250;til para asegurar que la versi&#243;n es la misma independientemente del tipo de Linux que utilices.</p>
</div><div type="3"><head>Otros recursos de instalaci&#243;n</head>
<list type="unordered">
<item>
<ref target="https://www.ffmpeg.org/download.html">Descarga de paquetes</ref><list type="unordered">
<item>FFmpeg permite el accesso a archivos binarios, c&#243;digo fuente y versiones est&#225;ticas para Mac, Windows y Linux directamente en su sitio web. Los usuarios pueden construir el <emph>framework</emph> sin un administrador de paquetes con estos recursos. Es probable que solo los usuarios avanzados quieran usar esta opci&#243;n.</item>
</list>
</item>
<item>
<ref target="https://trac.ffmpeg.org/wiki/CompilationGuide">La Gu&#237;a de Compilaci&#243;n de FFmpeg</ref><list type="unordered">
<item>La p&#225;gina Wiki de FFmpeg tambi&#233;n proporciona un compendio de gu&#237;as y estrategias para instalar FFmpeg en tu computadora (la gu&#237;a solo est&#225; disponible en ingl&#233;s).</item>
</list>
</item>
</list>
</div><div type="3"><head>Probando la instalaci&#243;n</head>
<list type="unordered">
<item>
<p>Para asegurarte de que FFmpeg se haya instalado correctamente, ejecuta:</p>
<ab><code xml:id="code_introduccion-a-ffmpeg_2" corresp="code_introduccion-a-ffmpeg_2.txt" lang="language-bash" rend="block"/></ab>
</item>
<item>
<p>Si ves una lista larga con informaci&#243;n, &#161;la instalaci&#243;n fue exitosa! Debe ser similar a lo siguiente:</p>
</item>
</list>
<ab><code xml:id="code_introduccion-a-ffmpeg_3" corresp="code_introduccion-a-ffmpeg_3.txt" lang="language-bash" rend="block"/></ab>
<list type="unordered">
<item>
Si el sistema arroja <code rend="inline">-bash: ffmpeg: command not found</code>, algo ha ido mal.<list type="unordered">
<item>Nota: Si est&#225;s usando un administrador de paquetes, es improbable que encuentres este mensaje de error. Sin embargo, si hay un problema despu&#233;s de instalar con un administrador de paquetes, es probable que haya un problema con el administrador de paquetes y no con FFmpeg. Consulta la soluci&#243;n de problemas en <ref target="https://docs.brew.sh/Troubleshooting">Homebrew</ref>, <ref target="https://chocolatey.org/docs/troubleshooting">Chocolatey</ref>, o <ref target="http://linuxbrew.sh/">Linuxbrew</ref> para asegurar que el administrador de paquetes est&#225; funcionando correctamente en tu computadora (las gu&#237;as solo est&#225; disponible en ingl&#233;s). Si est&#225;s intentando instalar sin un administrador de paquetes y ves este mensaje de error, haz una referencia cruzada de tu m&#233;todo con la La Gu&#237;a de Compilaci&#243;n de FFmpeg anterior.</item>
</list>
</item>
</list>
</div><div type="3"><head>Usando FFmpeg en el navegador</head>
<p>Si no quieres instalar FFmepg en tu computadora pero te gustar&#237;a familiarizarte con el <emph>framework</emph> y usarlo en la interfaz de l&#237;nea de comandos, <ref target="https://bgrins.github.io/videoconverter.js/demo/">videoconverter.js</ref> de Brian Grinstead proporciona un m&#233;todo para ejecutar los comandos FFmpeg en tu navegador (la interfaz est&#225; en ingl&#233;s).</p>
  <p style="alert alert-warning">
  Esta interfaz del navegador no tiene las funcionalidades como para completar todo este tutorial, pero es &#250;til para aprender los comandos esenciales de FFmpeg. Adicionalmente, este recurso opera en una versi&#243;n anterior de FFmpeg y posiblemente no tenga todas las caracter&#237;sticas de la versi&#243;n m&#225;s reciente.
</p>
</div><div type="3"><head>Estructura b&#225;sica y sintaxis de los comandos FFmpeg</head>
<p>El comando b&#225;sico tiene cuatro partes:</p>
<ab><code xml:id="code_introduccion-a-ffmpeg_4" corresp="code_introduccion-a-ffmpeg_4.txt" lang="language-bash" rend="block"/></ab>
<list type="unordered">
<item>Cada comando comenzar&#225; con un s&#237;mbolo del sistema. Dependiendo del uso, este ser&#225; <code rend="inline">ffmpeg</code> (cambiar archivos), <code rend="inline">ffprobe</code> (generar metadatos de archivos) o <code rend="inline">ffplay</code> (reproducir archivos).</item>
<item>Los archivos de entradas son los archivos que est&#225;n siendo le&#237;dos, editados o examinados.</item>
<item>Las banderas y acciones son las cosas que le est&#225;s diciendo a FFmpeg que haga con los archivos de entrada. La mayor&#237;a de los comandos contendr&#225;n m&#250;ltiples banderas y acciones de complejidad variable.</item>
<item>Los archivos de salida son los archivos creados por el comando o los informes creados por los commandos de <code rend="inline">ffprobe</code>.</item>
</list>
<p>Escrito gen&#233;ricamente, el comando b&#225;sico es parecido a lo siguiente:</p>
<ab><code xml:id="code_introduccion-a-ffmpeg_5" corresp="code_introduccion-a-ffmpeg_5.txt" lang="language-bash" rend="block"/></ab>
<p style="alert alert-warning">
Como con cualquier interfaz de l&#237;nea de comandos, tendr&#225;s que escribir las rutas de los archivos de entrada y de salida dependiendo de las ubicaciones de tus directorios de trabajo. En los ejemplos proporcionados en este tutorial, las rutas de archivos no estar&#225;n escritas completamente y se supone que el usuario ha navegado al directorio de trabajo para ejecutar los comandos.</p>
<p>A continuaci&#243;n, examinaremos algunos ejemplos de varios comandos diferentes que usan esta estructura y sintaxis. Adicionalmente, estos comandos demostrar&#225;n algunas de las caracter&#237;sticas m&#225;s &#250;tiles de FFmpeg y nos permitir&#225;n familiarizarnos con la forma en que se construyen los archivos audiovisuales digitales.</p>
</div></div>
      <div type="2"><head>Para empezar</head>
<p>Para este tutorial, utilizaremos una pel&#237;cula archiv&#237;stica que se llama <ref target="https://archive.org/details/4050_Destination_Earth_01_47_33_28"><emph>Destination Earth</emph></ref> como nuestro objeto de estudio. Esta pel&#237;cula est&#225; publicada por los <ref target="https://es.wikipedia.org/wiki/Archivos_Prelinger">Archivos Prelinger</ref> y en el <ref target="https://archive.org/">Internet Archive</ref>. Esta pel&#237;cula, estrenada en 1956 y producida por <ref target="https://es.wikipedia.org/wiki/American_Petroleum_Institute">El American Petroleum Institute</ref> y <ref target="https://en.wikipedia.org/wiki/John_Sutherland_(producer)">John Sutherland Productions</ref>, es un excelente ejemplo de la propaganda de la &#233;poca de la Guerra Fr&#237;a que exalta las virtudes del capitalismo y el estilo de vida estadounidense. Utilizando el proceso de <ref target="https://es.wikipedia.org/wiki/Technicolor">Technicolor</ref>, este corto animado de ciencia ficci&#243;n cuenta la historia de una sociedad marciana que vive bajo un gobierno opresivo y sus esfuerzos para mejorar sus m&#233;todos industriales. Env&#237;an un emisario a la Tierra que descubre que la clave para esto es la refinaci&#243;n de petr&#243;leo y la libre empresa. Utilizaremos el v&#237;deo para introducir algunas de las funcionalidades b&#225;sicas de FFmpeg y analizar sus propiedades de color con relaci&#243;n a su ret&#243;rica propagand&#237;stica.</p>
<figure><desc>Destination Earth (1956)</desc><graphic url="destEarth_titlecard.png"/></figure>
<p>En este tutorial se llevar&#225;n a cabo los siguientes pasos:</p>
<list type="unordered">
<item>Navegar a la p&#225;gina de <ref target="https://archive.org/details/4050_Destination_Earth_01_47_33_28"><emph>Destination Earth</emph></ref> en el Internet Archive</item>
<item>Descargar dos archivos v&#237;deos: las versiones "MPEG4" (extensi&#243;n de archivo <code rend="inline">.m4v</code>) y "OGG" (extensi&#243;n de archivo <code rend="inline">.ogv</code>) de la pel&#237;cula</item>
<item>Guardar estos archivos en la misma carpeta en alg&#250;n lugar de tu computadora. Gu&#225;rdalos con los nombres de archivos <code rend="inline">destEarth</code>, seguido por su extensi&#243;n.</item>
</list>
<p>T&#243;mate unos minutos para ver el v&#237;deo y tener una idea de su estructura, mensaje y motivos visuales antes de continuar con los siguientes comandos.</p>
</div>
      <div type="2"><head>Ejemplos de comandos preliminares</head>
<div type="3"><head>Ver metadatos b&#225;sicos con FFprobe</head>
<p>Antes de comenzar a manipular nuestros archivos <code rend="inline">destEarth</code>, usemos FFmpeg para examinar informaci&#243;n b&#225;sica sobre el archivo utilizando un simple comando de <code rend="inline">ffprobe</code>. Esto ayudar&#225; a comprender c&#243;mo se construyen los archivos audiovisuales digitales y proporcionar&#225; una base para el resto del tutorial. Navega hasta el directorio del archivo y ejecuta:</p>
<ab><code xml:id="code_introduccion-a-ffmpeg_6" corresp="code_introduccion-a-ffmpeg_6.txt" lang="language-bash" rend="block"/></ab>
<p>Ver&#225;s los metadatos t&#233;cnicos b&#225;sicos del archivo impresos en <code rend="inline">stdout</code>:</p>
<figure><desc>El output de un comando b&#225;sico `ffprobe` con destEarth.ogv</desc><graphic url="ffprobe_ogg_es.png"/></figure>
<p>La l&#237;nea <code rend="inline">Input # 0</code> del informe identifica el <hi rend="bold">contenedor</hi> como <ref target="https://es.wikipedia.org/wiki/Ogg">ogg</ref>. Los contenedores (tambi&#233;n llamados "envoltorios" o "wrappers", en ingl&#233;s) proporcionan al archivo la estructura de sus diversas pistas. Los diferentes contenedores (otros m&#225;s comunes incluyen <code rend="inline">.mkv</code>, <code rend="inline">.avi</code> y <code rend="inline">.flv</code>) tienen diferentes caracter&#237;sticas y compatibilidad con diversos programas. Examinaremos c&#243;mo y por qu&#233; es posible que desees cambiar el contenedor de un archivo en el siguiente comando.</p>
<p>Las l&#237;neas <code rend="inline">Stream #0:0</code> y <code rend="inline">Stream #0:1</code> proporcionan informaci&#243;n sobre las pistas del archivo (es decir, el contenido que ves en la pantalla y escuchas a trav&#233;s de sus altavoces) y tambi&#233;n identifican el <hi rend="bold">c&#243;dec</hi> de cada pista. Los c&#243;decs especifican c&#243;mo se codifica/comprime (se escribe y almacena) y se decodifica (se reproduce) la informaci&#243;n. La pista v&#237;deo (<code rend="inline">Stream #0:0</code>) de nuestro archivo <code rend="inline">.ogv</code> usa el c&#243;dec <ref target="https://es.wikipedia.org/wiki/Theora">theora</ref> y la pista audio (<code rend="inline">Stream #0:1</code>) usa el c&#243;dec <ref target="https://es.wikipedia.org/wiki/Vorbis">vorbis</ref>. Estas l&#237;neas tambi&#233;n proporcionan informaci&#243;n importante relacionada con el espacio de color de la pista de v&#237;deo (<code rend="inline">yuv420p</code>), resoluci&#243;n (<code rend="inline">400x300</code>) y marcos por segundo (<code rend="inline">29.97 fps</code>). Adicionalmente, proporcionan informaci&#243;n de audio como la tasa de muestreo (<code rend="inline">44100 Hz</code>) y la tasa de bits (<code rend="inline">128 kb/s</code>).</p>
<p>Los c&#243;decs, en mayor medida que los contenedores, determinan la calidad y la compatibilidad de un archivo audiovisual con diferentes programas y plataformas (otros c&#243;decs comunes incluyen <code rend="inline">DNxHD</code> y<code rend="inline"> ProRes</code> para v&#237;deo y <code rend="inline">mp3</code> y<code rend="inline"> FLAC</code> para audio). Examinaremos c&#243;mo y por qu&#233; es posible que tambi&#233;n desees cambiar el c&#243;dec de un archivo en el siguiente comando.</p>
<p>Ejecuta otro comando de <code rend="inline">ffprobe</code>, esta vez con el archivo <code rend="inline">.m4v</code>:</p>
<ab><code xml:id="code_introduccion-a-ffmpeg_7" corresp="code_introduccion-a-ffmpeg_7.txt" lang="language-bash" rend="block"/></ab>
<p>Una vez m&#225;s, ver&#225;s los metadatos t&#233;cnicos b&#225;sicos impresos en el <code rend="inline">stdout</code>:</p>
<figure><desc>El output de un comando b&#225;sico `ffprobe` con destEarth.m4v</desc><graphic url="ffprobe_mp4_es.png"/></figure>
<p>Tambi&#233;n notar&#225;s que el informe para el archivo <code rend="inline">.m4v</code> contiene m&#250;ltiples contenedores en la l&#237;nea <code rend="inline">Input # 0</code> como <code rend="inline">mov</code> y <code rend="inline">m4a</code>. No es necesario profundizar en los detalles para los fines de este tutorial, pero ten en cuenta que los contenedores <code rend="inline">mp4</code> y<code rend="inline"> mov</code> se presentan en m&#250;ltiples "sabores" y diferentes extensiones de archivo. Sin embargo, todos son muy similares en su construcci&#243;n t&#233;cnica y, como tal, pueden verse agrupados en metadatos t&#233;cnicos. De manera similar, el archivo <code rend="inline">ogg</code> tiene la extensi&#243;n<code rend="inline"> .ogv</code>, un "sabor" o variante del formato <code rend="inline">ogg</code>.</p>
<p>Al igual que en nuestro comando anterior, las l&#237;neas <code rend="inline">Stream # 0: 0</code> y<code rend="inline"> Stream # 0: 1</code> identifican el c&#243;dec de cada pista. Podemos ver que nuestro archivo <code rend="inline">.m4v</code> usa el c&#243;dec v&#237;deo <ref target="https://es.wikipedia.org/wiki/H.264/MPEG-4_AVC">H.264</ref> y el c&#243;dec audio <ref target="https://es.wikipedia.org/wiki/Advanced_Audio_Coding">aac</ref>. Ten en cuenta que se nos proporcionan metadatos similares a nuestro archivo <code rend="inline">.ogv</code>, pero algunas caracter&#237;sticas importantes relacionadas con el an&#225;lisis visual (como la resoluci&#243;n) son significativamente diferentes. Nuestro <code rend="inline">.m4v</code> tiene una resoluci&#243;n m&#225;s alta (<code rend="inline">640x480</code>) y, por lo tanto, utilizaremos esta versi&#243;n de <emph>Destination Earth</emph> como nuestro v&#237;deo de origen.</p>
<p>Ahora que sabemos m&#225;s sobre la composici&#243;n t&#233;cnica de nuestro archivo, podemos comenzar a explorar las caracter&#237;sticas y funcionalidades transformadoras de FFmpeg (volveremos a utilizar <code rend="inline">ffprobe</code> m&#225;s adelante en el tutorial para realizar una extracci&#243;n de metadatos de color m&#225;s avanzada).</p>
</div><div type="3"><head>Cambiar el contenedor (volver a envolver, "re-wrap")</head>
<p>Dependiendo de tu sistema operativo, puedes tener uno o m&#225;s reproductores de medios instalados. Para efectos de demostraci&#243;n veamos qu&#233; sucede si intentas abrir <code rend="inline">destEarth.ogv</code> usando el reproductor de medios QuickTime que viene con Mac OSX:</p>
<figure><desc>Los reproductores multimedia patentados como Quicktime a menudo est&#225;n limitados en los tipos de archivos con los que pueden trabajar</desc><graphic url="QT_fail.png"/></figure>
<p>Una opci&#243;n cuando te enfrentas a un mensaje de este tipo es simplemente usar otro reproductor de medios. <ref target="https://www.videolan.org/vlc/index.es.html">VLC</ref>, que est&#225; construido con FFmpeg, es una excelente alternativa de c&#243;digo abierto, pero simplemente "usar otro programa" puede no ser siempre una soluci&#243;n viable (y es posible que no siempre tengas otra versi&#243;n de archivo con la que trabajar). Muchos editores de v&#237;deo populares, como Adobe Premiere, Final Cut Pro y DaVinci Resolve, tienen sus propias limitaciones en cuanto a los tipos de formatos con los que son compatibles. Adem&#225;s, las diferentes plataformas web y sitios de alojamiento/transmisi&#243;n, como Vimeo, <ref target="https://help.vimeo.com/hc/es/articles/12426043233169-Video-and-audio-compression-guidelines">tambi&#233;n tienen sus propios requisitos.</ref> Por lo tanto, es importante poder volver a envolver y transcodificar tus archivos para cumplir con las diversas especificaciones para la reproducci&#243;n, edici&#243;n, publicaci&#243;n digital y ajuste de archivos a los est&#225;ndares requeridos por las plataformas de archivo o preservaci&#243;n digital.</p>
<p style="alert alert-warning">
Para obtener una lista completa de los c&#243;decs y contenedores compatibles con tu instalaci&#243;n de FFmpeg, ejecuta <code rend="inline">ffmpeg -codecs</code> y <code rend="inline">ffmpeg -formats</code>, respectivamente, para ver la lista impresa de tu <code rend="inline">stdout</code>.
</p>
<p>Como un ejercicio para aprender la sintaxis b&#225;sica de FFmpeg y aprender a transcodificar entre formatos, comenzaremos con nuestro archivo <code rend="inline">destEarth.ogv</code> y escribiremos un nuevo archivo con v&#237;deo codificado en<code rend="inline"> H.264</code>, audio en <code rend="inline">AAC</code> y envuelto en un contenedor <code rend="inline">.mp4</code>, una combinaci&#243;n muy com&#250;n y altamente port&#225;til de c&#243;decs y contenedores que es pr&#225;cticamente id&#233;ntico al archivo<code rend="inline"> .m4v</code> que originalmente descargamos. Aqu&#237; est&#225; el comando que ejecutar&#225;s, junto con una explicaci&#243;n de cada parte de la sintaxis:</p>
<ab><code xml:id="code_introduccion-a-ffmpeg_8" corresp="code_introduccion-a-ffmpeg_8.txt" lang="language-bash" rend="block"/></ab>
<list type="unordered">
<item><code rend="inline">ffmpeg</code> = comienza el comando</item>
<item><code rend="inline">-i destEarth.ogv</code> = especifica el archivo de entrada</item>
<item><code rend="inline">-c:v libx264</code> = transcodifica la pista de v&#237;deo al codec H.264</item>
<item><code rend="inline">-c:a aac</code> = transcodifica la pista de audio al codec AAC</item>
<item><code rend="inline">destEarth_transcoded.mp4</code> = especifica el archivo de salida. Ten en cuenta que aqu&#237; es donde se especifica el nuevo tipo de contenedor.</item>
</list>
<p>Si ejecutas como est&#225; escrito y en el mismo directorio que <code rend="inline">destEarth.ogv</code>, ver&#225;s un nuevo archivo llamado<code rend="inline"> destEarth_transcoded.mp4</code>, que aparecer&#225; en el directorio. Si est&#225;s operando en Mac OSX, tambi&#233;n podr&#225;s reproducir este nuevo archivo con QuickTime. Una exploraci&#243;n completa de los convenios de c&#243;decs, contenedores, compatibilidad y extensi&#243;n de archivos est&#225; m&#225;s all&#225; del alcance de este tutorial; sin embargo, este conjunto de ejemplos preliminares deber&#237;a darles a aquellos que no est&#233;n familiarizados con la forma en que se construyen los archivos audiovisuales digitales un conjunto de conocimientos de referencia que les permitir&#225; completar el resto del tutorial.</p>
</div><div type="3"><head>Creaci&#243;n de extractos y "demuxing" de audio y v&#237;deo</head>
<p>Ahora que tenemos un mejor entendimiento de las pistas, c&#243;decs, y contenedores, veamos formas en que FFmpeg puede trabajar con materiales de v&#237;deo a un nivel m&#225;s granular. Para este tutorial, examinaremos dos secciones separadas de <emph>Destination Earth</emph> para comparar c&#243;mo se usa el color en relaci&#243;n con la ret&#243;rica propagand&#237;stica de la pel&#237;cula. Crearemos y prepararemos estos extractos para el an&#225;lisis utilizando un comando que realiza dos funciones diferentes simult&#225;neamente:</p>
<list type="unordered">
<item>Primero, el comando crear&#225; dos extractos de <code rend="inline">destEarth.m4v</code>.</item>
<item>
Segundo, el comando eliminar&#225; ("demux") los componentes de audio (<code rend="inline">Stream # 0: 1</code>) de estos extractos.<p style="alert alert-warning">
Estamos eliminando el audio para ahorrar espacio de almacenamiento (la informaci&#243;n de audio no es necesaria para el an&#225;lisis de color). Esto probablemente ser&#225; &#250;til si esperas utilizar este tipo de an&#225;lisis a escalas m&#225;s grandes. Cerca del final del tutorial, se discutir&#225; m&#225;s informaci&#243;n sobre la ampliaci&#243;n del an&#225;lisis de color.
</p>
</item>
</list>
<p>El primer extracto que haremos contiene una secuencia correspondiente al comienzo de la pel&#237;cula que describe las dif&#237;ciles condiciones y la vida oprimida de la sociedad marciana. El siguiente comando especifica los puntos de inicio y finalizaci&#243;n del extracto, le dice a FFmpeg que retenga toda la informaci&#243;n en la pista de v&#237;deo sin transcodificar nada y le indica que escriba nuestro nuevo archivo sin la pista de audio:</p>
<ab><code xml:id="code_introduccion-a-ffmpeg_9" corresp="code_introduccion-a-ffmpeg_9.txt" lang="language-bash" rend="block"/></ab>
<list type="unordered">
<item><code rend="inline">ffmpeg</code> = comienza el comando</item>
<item><code rend="inline">-i destEarth.m4v</code> = especifica el archivo de entrada</item>
<item><code rend="inline">-ss 00:01:00</code> = establece el punto de inicio a 1 minuto del inicio del archivo</item>
<item><code rend="inline">-to 00:04:45</code> = establece el punto final a 4 minutos y 45 segundos desde el inicio del archivo</item>
<item><code rend="inline">-c:v copy</code> = copia la pista de v&#237;deo directamente, sin transcodificar</item>
<item><code rend="inline">-an</code> = le dice a FFmpeg que ignore la pista de audio al escribir el archivo de salida.</item>
<item><code rend="inline">destEarth_Mars_video.mp4</code> = especifica el archivo de salida</item>
</list>
<figure><desc>Vida en Marte</desc><graphic url="Mars_screenshot.png"/></figure>
<p>Ahora, ejecutaremos un comando similar para crear un extracto de "Tierra". Esta parte de la pel&#237;cula tiene una secuencia similar que describe las maravillas de la vida en la Tierra y la riqueza de su sociedad gracias al capitalismo de libre empresa y al uso de petr&#243;leo y productos derivados de este:</p>
<ab><code xml:id="code_introduccion-a-ffmpeg_10" corresp="code_introduccion-a-ffmpeg_10.txt" lang="language-bash" rend="block"/></ab>
<figure><desc>La abundancia de la Tierra</desc><graphic url="Earth_screenshot.png"/></figure>
<p>Ahora deber&#237;as tener dos archivos nuevos en tu directorio llamados <code rend="inline">destEarth_Mars_video.mp4</code> y<code rend="inline"> destEarth_Earth_video.mp4</code>. Puedes probar uno o ambos archivos (o cualquiera de los otros archivos en el directorio) usando la funci&#243;n <code rend="inline">ffplay</code> de FFmpeg. Simplemente ejecuta:</p>
<ab><code xml:id="code_introduccion-a-ffmpeg_11" corresp="code_introduccion-a-ffmpeg_11.txt" lang="language-bash" rend="block"/></ab>
<p>y/o</p>
<ab><code xml:id="code_introduccion-a-ffmpeg_12" corresp="code_introduccion-a-ffmpeg_12.txt" lang="language-bash" rend="block"/></ab>
<p>Ver&#225;s una ventana abierta y el v&#237;deo comenzar&#225; en el punto de iniicio especificado. Se reproducir&#225; una vez y luego la ventana se cerrar&#225; (adem&#225;s, notar&#225;s que no hay sonido en tu v&#237;deo). Tambi&#233;n notar&#225;s que los comandos <code rend="inline">ffplay</code> no requieren que se especifique una entrada (<code rend="inline">-i</code>) o una salida porque la reproducci&#243;n en s&#237; misma es la salida.</p>
<p style="alert alert-warning">
<code rend="inline">FFplay</code> es un reproductor multimedia muy vers&#225;til que viene con una serie de <ref target="https://ffmpeg.org/ffplay.html#Options">opciones</ref> para personalizar la reproducci&#243;n. Por ejemplo, si agregas `-loop 0` al comando se reproducir&#225; en bucle indefinidamente.</p>
<p>Ahora hemos creado nuestros dos extractos para el an&#225;lisis. Si vemos estos clips por separado, parece haber diferencias significativas en la forma en que se utilizan el color y la variedad de colores. En la siguiente parte del tutorial examinaremos y extraeremos datos de los archivos de v&#237;deo para cuantificar y apoyar esta hip&#243;tesis.</p>
</div><div type="3"><head>An&#225;lisis de datos de color</head>
<p>El uso de herramientas digitales para analizar la informaci&#243;n de color en pel&#237;culas es otra faceta emergente de las Humanidades Digitales que se superpone con los estudios cinematogr&#225;ficos tradicionales. En particular, el proyecto <ref target="https://filmcolors.org/">FilmColors</ref> de la Universidad de Zurich cuestiona la intersecci&#243;n cr&#237;tica de las "caracter&#237;sticas est&#233;ticas formales de los aspectos sem&#225;nticos, hist&#243;ricos y tecnol&#243;gicos" de su producci&#243;n, recepci&#243;n y difusi&#243;n a trav&#233;s del uso de herramientas de an&#225;lisis y anotaci&#243;n digital (Flueckiger, 2017, traducido por el autor). Aunque no hay un m&#233;todo estandarizado para este tipo de investigaci&#243;n, en el momento de escribir esta lecci&#243;n el comando <code rend="inline">ffprobe</code> que se describe a continuaci&#243;n es una una herramienta &#250;til para extraer informaci&#243;n de color que se puede usar en el an&#225;lisis computacional. Primero, veamos otra manera estandarizada de representar la informaci&#243;n de color que informa este enfoque cuantitativo, basado en datos, para el an&#225;lisis de color: los vectorscopios.</p>
<div type="4"><head>Vectorscopios</head>
<p>Durante a&#241;os, profesionales del v&#237;deo han confiado en los <ref target="https://es.wikipedia.org/wiki/Vectorscopio">vectorscopios</ref> para ver la informaci&#243;n del color de una manera estandarizada y f&#225;cilmente legible. Un vectorscopio grafica informaci&#243;n de color en una grat&#237;cula circular. La posici&#243;n del gr&#225;fico corresponde a los <ref target="https://es.wikipedia.org/wiki/Tono_(color)">tonos</ref> particulares encontrados en una se&#241;al de v&#237;deo. Otros factores, como la saturaci&#243;n, determinan tambi&#233;n el tama&#241;o de un gr&#225;fico. A continuaci&#243;n se presenta un ejemplo de un vectorscopio que muestra los valores de color de las barras SMPTE.</p>
<figure><desc>Una lectura de vectorescopio que representa las barras SMPTE NTSC est&#225;ndar. Fuente: Wikimedia Commons</desc><graphic url="vectorscope.png"/></figure>
<figure><desc>Las barras SMPTE. Fuente: Wikimedia Commons</desc><graphic url="smpte_bars.png"/></figure>
<p>FFmpeg se puede utilizar para reproducir y crear archivos de v&#237;deo con vectorscopios integrados en ellos para proporcionar una referencia en tiempo real para la informaci&#243;n de color del v&#237;deo. Los siguientes comandos <code rend="inline">ffplay</code> incorporar&#225;n un vectorscopio en la esquina inferior derecha del marco. A medida que se reproduce el v&#237;deo, notar&#225;s el cambio en el gr&#225;fico del vectorscopio a medida que cambia el color en pantalla:</p>
<ab><code xml:id="code_introduccion-a-ffmpeg_13" corresp="code_introduccion-a-ffmpeg_13.txt" lang="language-bash" rend="block"/></ab>
<list type="unordered">
<item><code rend="inline">ffplay</code> = comienza el comando</item>
<item><code rend="inline">-i entrada_archivo.ext</code> = la ruta y el nombre del archivo de entrada</item>
<item><code rend="inline">-vf</code> = crea un <ref target="https://trac.ffmpeg.org/wiki/FilteringGuide"><emph>filter-graph</emph></ref> para usar con las pistas</item>
<item><code rend="inline">"</code> = una comilla para comenzar el <emph>filter-graph.</emph> La informaci&#243;n entre las comillas
especifica los par&#225;metros de la apariencia y posici&#243;n del vectorscopio</item>
<item><code rend="inline">split=2[m][v]</code> = divide la entrada en dos salidas id&#233;nticas llamadas <code rend="inline">[m]</code> y <code rend="inline">[v]</code></item>
<item><code rend="inline">,</code> = la coma indica que viene otro par&#225;metro</item>
<item><code rend="inline">[v]vectorscope=b=0.7:m=color3:g=green[v]</code> = asigna la salida <code rend="inline">[v]</code> al filtro del vectorscopio</item>
<item><code rend="inline">[m][v]overlay=x=W-w:y=H-h</code> = superpone el vectorscopio encima de la imagen de v&#237;deo en una cierta ubicaci&#243;n (en este caso, en la esquina inferior derecha de la pantalla)</item>
<item><code rend="inline">"</code> = termina el <emph>filter-graph</emph></item>
</list>
<p style="alert alert-warning">
Para obtener m&#225;s informaci&#243;n sobre las diversas opciones para crear vectorscopios, consulta <ref target="https://ffmpeg.org/ffmpeg-filters.html#vectorscope"> la documentaci&#243;n oficial</ref> y <ref target="https://trac.ffmpeg.org/wiki/Vectorscope">la p&#225;gina Wiki FFmpeg Vectorscope</ref>. Adem&#225;s, puedes encontrar m&#225;s informaci&#243;n sobre c&#243;mo colocar las superposiciones en <ref target="https://ffmpeg.org/ffmpeg-filters.html#overlay-1">la documentaci&#243;n del filtro de superposici&#243;n FFmpeg</ref>.
</p>
<figure><desc>Captura de pantalla de la ventana de FFplay con vectorscopio incorporado</desc><graphic url="Mars_screenshot_vector.png"/></figure>
<p>Y para el extracto de "Tierra":</p>
<ab><code xml:id="code_introduccion-a-ffmpeg_14" corresp="code_introduccion-a-ffmpeg_14.txt" lang="language-bash" rend="block"/></ab>
<figure><desc>Captura de pantalla de la ventana de FFplay con vectorscopio incorporado</desc><graphic url="Earth_screenshot_vector.png"/></figure>
<p>Tambi&#233;n podemos ajustar este comando para escribir nuevos archivos de v&#237;deo con vectorscopios:</p>
<ab><code xml:id="code_introduccion-a-ffmpeg_15" corresp="code_introduccion-a-ffmpeg_15.txt" lang="language-bash" rend="block"/></ab>
<ab><code xml:id="code_introduccion-a-ffmpeg_16" corresp="code_introduccion-a-ffmpeg_16.txt" lang="language-bash" rend="block"/></ab>
<p>Nota los peque&#241;os pero importantes cambios en sintaxis:</p>
<list type="unordered">
<item>Hemos agregado una bandera de <code rend="inline">-i</code> porque es un comando de <code rend="inline">ffmpeg</code></item>
<item>Hemos especificado el c&#243;dec del v&#237;deo del archivo de salida como <ref target="https://es.wikipedia.org/wiki/H.264/MPEG-4_AVC">H.264</ref> con la bandera <code rend="inline">-c:v libx264</code> y no estamos recodificando el c&#243;dec de audio (<code rend="inline">-c:a copy</code>), aunque puedes especificar otro c&#243;dec de audio si lo necesitas.</item>
<item>Hemos definido el nombre del archivo de salida</item>
</list>
<p>T&#243;mate unos minutos para ver estos v&#237;deos con los vectorscopios integrados en ellos. Observa cu&#225;n din&#225;micos (o no) son los cambios entre los extractos de "Marte" y "Tierra". Compara lo que ves en el vectorscopio con tus propias impresiones del v&#237;deo mismo. Podr&#237;amos usar las observaciones de estos vectorscopios para hacer determinaciones sobre qu&#233; tonos de color aparecen de manera m&#225;s regular o intensa en el v&#237;deo, o podemos comparar diferentes formatos uno al lado del otro para ver c&#243;mo el color se codifica o representa de manera diferente en funci&#243;n de diferentes c&#243;decs, resoluciones, etc.</p>
<p>Aunque los vectorscopios proporcionan una representaci&#243;n &#250;til y en tiempo real de la informaci&#243;n del color, es posible que tambi&#233;n deseemos acceder a los datos sin procesar que se encuentran debajo de ellos. Luego, podemos usar estos datos para desarrollar visualizaciones m&#225;s flexibles que no dependan de ver el archivo de v&#237;deo simult&#225;neamente y que ofrezcan un enfoque m&#225;s cuantitativo para el an&#225;lisis de color. En nuestros pr&#243;ximos comandos, utilizaremos <code rend="inline">ffprobe</code> para producir un conjunto tabular de datos que pueda usarse para crear un gr&#225;fico de datos de color.</p>
</div><div type="4"><head>Extracci&#243;n de datos de color con FFprobe</head>
<p>Al comienzo de este tutorial, utilizamos un comando <code rend="inline">ffprobe</code> para ver los metadatos b&#225;sicos de nuestro archivo impresos en el <code rend="inline">stdout</code>. En los siguientes ejemplos, utilizaremos <code rend="inline">ffprobe</code> para extraer datos de color de nuestros extractos de v&#237;deo y enviar esta informaci&#243;n a archivos<code rend="inline"> .csv</code>. Dentro de nuestro comando <code rend="inline">ffprobe</code>, vamos a utilizar el filtro<code rend="inline"> signalstats</code> para crear reportes <code rend="inline">.csv</code> de informaci&#243;n de tono de color medio para cada marco en la secuencia de v&#237;deo de<code rend="inline"> destEarth_Mars_video.mp4</code> y <code rend="inline">destEarth_Earth_video.mp4</code>, respectivamente.</p>
<ab><code xml:id="code_introduccion-a-ffmpeg_17" corresp="code_introduccion-a-ffmpeg_17.txt" lang="language-bash" rend="block"/></ab>
<list type="unordered">
<item><code rend="inline">ffprobe</code> = comienza el comando</item>
<item><code rend="inline">-f lavfi</code> = especifica el dispositivo de entrada virtual <ref target="https://ffmpeg.org/ffmpeg-devices.html#lavfi">libavfilter</ref> como el formato elegido. Esto es necesario cuando se usa <code rend="inline">signalstats</code> y muchos filtros en comandos FFmpeg m&#225;s complejos.</item>
<item><code rend="inline">-i movie=destEarth_Mars_video.mp4</code> = nombre del archivo de entrada</item>
<item><code rend="inline">,signalstats</code> = especifica el uso del filtro <code rend="inline">signalstats</code> con el archivo de entrada</item>
<item><code rend="inline">-show_entries</code> = establece una lista de entradas que se mostrar&#225;n en el informe. Estos se especifican en las siguientes opciones.</item>
<item><code rend="inline">frame=pkt_pts_time</code> = especifica mostrar cada marco con tu correspondiente <code rend="inline">pkt_pts_time</code>, creando una entrada &#250;nica para cada marco de v&#237;deo</item>
<item><code rend="inline">:frame_tags=lavfi.signalstats.HUEMED</code> = crea una etiqueta para cada marco que contiene el valor de tono medio</item>
<item><code rend="inline">-print_format csv</code> = especifica el formato del informe de metadatos</item>
<item><code rend="inline">&gt; destEarth_Mars_hue.csv</code> = escribe un nuevo archivo <code rend="inline">.csv</code> que contiene el informe de metadatos usando<code rend="inline">&gt; </code>, un <ref target="https://www.gnu.org/software/bash/manual/html_node/Redirections.html">operador de redireccionamiento de Bash</ref>. Este operador toma el comando que lo precede y "redirige" la salida a otra ubicaci&#243;n. En este caso, est&#225; escribiendo la salida en un nuevo archivo <code rend="inline">.csv</code>. La extensi&#243;n de archivo proporcionada aqu&#237; tambi&#233;n debe coincidir con el formato especificado por el indicador <code rend="inline">print_format</code>.</item>
</list>
<p>A continuaci&#243;n, ejecuta el mismo comando para el extracto de "Tierra":</p>
<ab><code xml:id="code_introduccion-a-ffmpeg_18" corresp="code_introduccion-a-ffmpeg_18.txt" lang="language-bash" rend="block"/></ab>
<p style="alert alert-warning">
Para obtener m&#225;s informaci&#243;n sobre el filtro de <code rend="inline">signalstats</code> y las diversas m&#233;tricas que se pueden extraer de las transmisiones de v&#237;deo, consulta <ref target="https://ffmpeg.org/ffmpeg-filters.html#signalstats-1">la documentaci&#243;n del filtro FFmpeg</ref>.
</p>
<p>Ahora deber&#237;as tener dos archivos <code rend="inline">.csv</code> en tu directorio. Si los abres en un editor de texto o en un programa de hoja de c&#225;lculo, ver&#225;s tres columnas de datos:</p>
<figure><desc>Las primeras filas de nuestro informe de color en formato .csv</desc><graphic url="csv_head.png"/></figure>
<p>Comenzando a la izquierda y movi&#233;ndose a la derecha, las dos primeras columnas nos dan informaci&#243;n sobre d&#243;nde estamos en el v&#237;deo. Los n&#250;meros decimales representan fracciones de segundo que tambi&#233;n corresponden aproximadamente a la base de tiempo de v&#237;deo de 30 marcos por segundo. Cada fila en nuestro <code rend="inline">.csv</code> corresponde a un marco de v&#237;deo. La tercera columna lleva un n&#250;mero entero entre 0-360, valor que representa el tono medio para ese marco de v&#237;deo. Estos n&#250;meros son los datos cuantitativos subyacentes del diagrama de vectorscopio y corresponden a su posici&#243;n (en radianes) en la grat&#237;cula circular. Haciendo referencia a nuestra imagen de vectorescopio de antes, puedes ver que comenzando en la parte inferior del c&#237;rculo (0 grados) y movi&#233;ndose a la izquierda, los "verdes" comienzan alrededor de los 38 grados, los "amarillos" en los 99 grados, los "rojos" en los 161 grados, los "magentas" en los 218 grados, los "azules" en los 279 grados y los "cianes" en los 341 grados. Una vez que comprendas estos "rangos" de tono, puedes hacerte una idea de cu&#225;l es el valor de tono medio para un marco de v&#237;deo con solo mirar este valor num&#233;rico.</p>
<p>Adem&#225;s, ten en cuenta que este valor extra&#237;do por el filtro <code rend="inline">signalstats</code> no es una medida absoluta o completa de las cualidades de color de una imagen, sino simplemente un punto de referencia significativo desde el cual podemos explorar una estrategia basada en datos para el an&#225;lisis de color. La percepci&#243;n del color y la teor&#237;a del color son <ref target="https://colourturn.net/">&#225;reas complejas y en evoluci&#243;n de la investigaci&#243;n acad&#233;mica</ref> que incorporan muchas estrategias diferentes de las humanidades, las ciencias sociales y las ciencias cognitivas. Es por eso que debemos tener en cuenta que cualquier estrategia anal&#237;tica debe tomarse dentro del contexto de estos discursos m&#225;s amplios y con un esp&#237;ritu colaborativo y generativo.</p>
</div><div type="4"><head>Visualizando datos de color</head>
<p>Los dos archivos <code rend="inline">.csv</code> que creamos con los comandos anteriores ahora se pueden usar para crear gr&#225;ficos que visualicen los datos. Hay una serie de plataformas (tanto propietarias como de c&#243;digo abierto) que se pueden usar para lograr esto, como <ref target="https://www.wikihow.com/Create-a-Graph-in-Excel">Microsoft Excel</ref>, <ref target="https://rawgraphs.io/">RawGraphs</ref> y/o <ref target="https://plotly.com/graphing-libraries/">plotly</ref>. Una discusi&#243;n en profundidad sobre c&#243;mo usar cualquiera de estas plataformas est&#225; fuera del alcance de este tutorial; sin embargo, a continuaci&#243;n se muestra la visualizaci&#243;n final de los comandos anteriores, que se cre&#243; con los archivos <code rend="inline">.csv</code> y plotly.</p>
<figure><desc>Gr&#225;fico que incluye datos de tono medio de ambos extractos de v&#237;deo</desc><graphic url="Final_Graph_plotly.png"/></figure>
</div><div type="4"><head>Conclusiones</head>
<p>Al observar el gr&#225;fico, podemos ver que las trazas de Marte y la Tierra tienen rangos din&#225;micos muy diferentes en sus valores de tono medio. La traza de Marte es muy limitada y se mantiene dentro de los rangos rojo y amarillo (aproximadamente entre 100 y 160) en la mayor&#237;a del extracto. Esto sugiere algo sobre el uso del color en la pel&#237;cula como un dispositivo ret&#243;rico que sirve como mensaje propagand&#237;stico. Recuerda que esta secci&#243;n presenta una visi&#243;n antip&#225;tica de la forma de vida y el sistema pol&#237;tico marcianos: una poblaci&#243;n uniforme e infeliz, que depende de tecnolog&#237;a y transporte ineficientes mientras se les exige que observen la obediencia total a un gobernante supremo totalitario. La pel&#237;cula conecta esta experiencia negativa con una paleta de tonos relativamente opacos de rojo y amarillo. Tambi&#233;n deber&#237;amos considerar el p&#250;blico objetivo original de esta pel&#237;cula, los j&#243;venes ciudadanos de los Estados Unidos en la d&#233;cada de 1950, y c&#243;mo probablemente habr&#237;an interpretado estas im&#225;genes y usos del color en ese momento hist&#243;rico. En particular, podemos considerar este uso del color en el contexto de las crecientes tensiones geopol&#237;ticas entre la Uni&#243;n Sovi&#233;tica y los Estados Unidos y sus aliados en Europa occidental. El color rojo, espec&#237;ficamente, se usaba com&#250;nmente en los medios impresos y de difusi&#243;n para describir <ref target="https://es.wikipedia.org/wiki/Temor_rojo">la "amenaza" del comunismo global</ref> durante esta era de la historia mundial. Adem&#225;s, la elecci&#243;n de presentar al l&#237;der totalitario marciano con una apariencia muy similar al ic&#243;nico l&#237;der sovi&#233;tico <ref target="https://es.wikipedia.org/wiki/I%C3%B3sif_Stalin">Joseph Stalin</ref> puede leerse como una se&#241;al visual y cultural expl&#237;cita para la audiencia. As&#237;, esta representaci&#243;n de Marte parece ser una caricatura aleg&#243;rica de la vida bajo el velo del comunismo, tal como la percibe un observador externo y un oponente pol&#237;tico/ideol&#243;gico. Esta caricatura emplea no solo una paleta de colores limitada, sino una que est&#225; cargada con otras referencias culturales. El uso del color aprovecha los prejuicios y asociaciones que est&#225;n presentes en el imaginario de la audiencia y, por lo tanto, est&#225; ligado estrechamente al argumento central de la pel&#237;cula, que sostiene que el comunismo no es un sistema pol&#237;tico viable.</p>
<p>En contraste con el uso limitado del color en nuestro extracto de Marte, la traza de la Tierra cubre un rango din&#225;mico mucho m&#225;s amplio de valores de tono. En este pasaje, el emisario marciano est&#225; aprendiendo sobre el maravilloso y rico estilo de vida de los terr&#237;colas gracias a un sistema capitalista y a la explotaci&#243;n de petroleo y de productos derivados de este. La secuencia enfatiza la riqueza material y la libertad empresarial ofrecida bajo un sistema capitalista usando una variedad y vivacidad de color mucho mayor que en el extracto de Marte. Los productos comerciales y las personas se representan utilizando el espectro completo del proceso Technicolor, creando asociaciones positivas entre los resultados de la industria petrolera y el estilo de vida acomodado de quienes se benefician de &#233;l. Al igual que el extracto de Marte, a la audiencia se le ofrece una caricatura unilateral de un sistema pol&#237;tico y una forma de vida, pero en esta secci&#243;n la representaci&#243;n reduccionista es laudable y pr&#243;spera en lugar de desoladora y opresiva.</p>
<p>Como una pieza de propaganda, <emph>Destination Earth</emph> se basa en estas distinciones poderosas pero demasiado simplistas entre dos sistemas pol&#237;ticos para influir en la opini&#243;n p&#250;blica y promover el consumo de productos derivados del petr&#243;leo. La manera en que se usa (o no se usa) el color es una herramienta importante para elaborar y enfatizar este mensaje. Adem&#225;s, una vez que podemos extraer datos de color y visualizarlos utiliza t&#233;cnicas gr&#225;ficas simples, podemos ver que la disparidad en el rango din&#225;mico proporciona una medida cuantitativa para vincular el uso t&#233;cnico y est&#233;tico del color en esta pel&#237;cula animada con la ret&#243;rica propagand&#237;stica presentada por sus productores.</p>
<figure><desc>El petr&#243;leo y los ideales estadounidenses de riqueza y prosperidad se expresan en esplendor colorido</desc><graphic url="lovely_oil.png"/></figure>
</div><div type="4"><head>Escalando el an&#225;lisis de color con FFprobe</head>
<p>Uno de los l&#237;mites de esta metodolog&#237;a es que estamos generando manualmente informes de color en un solo archivo a la vez. Si quisi&#233;ramos adoptar un enfoque de <ref target="https://distantviewing.org/">visi&#243;n distante</ref> m&#225;s en l&#237;nea con las metodolog&#237;as tradicionales de Humanidades Digitales, podr&#237;amos emplear un script de Bash para ejecutar nuestro comando <code rend="inline">ffprobe</code> en todos los archivos en un determinado directorio. Esto es &#250;til si, por ejemplo, un(a) investigador(a) esta interesado en realizar un an&#225;lisis similar en <ref target="https://archive.org/details/prelinger&amp;tab=collection?and%5B%5D=john+sutherland&amp;sin=">todas las pel&#237;culas animadas de John Sutherland encontradas en la colecci&#243;n de Archivos Prelinger</ref> u otro conjunto de material de v&#237;deo de archivo.</p>
<p>Una vez que tengas un conjunto de material para trabajar guardado en un solo lugar, puedes guardar el siguiente <ref target="https://www.shellscript.sh/loops.html">bucle <emph>for</emph> de Bash o "for loop"</ref> dentro del directorio y ejecutarlo para generar archivos <code rend="inline">.csv</code> que contengan los mismos datos de tono medio a nivel de fotograma que extrajimos de nuestros extractos de <emph>Destination Earth</emph>.</p>
<ab><code xml:id="code_introduccion-a-ffmpeg_19" corresp="code_introduccion-a-ffmpeg_19.txt" lang="language-bash" rend="block"/></ab>
<list type="unordered">
<item><code rend="inline">for file in *.m4v; do</code> = inicia el bucle <emph>for</emph>. Esta primera l&#237;nea le dice a FFmpeg "para todos los archivos en este directorio con la extensi&#243;n <code rend="inline">.m4v</code>, ejecuta el siguiente comando."</item>
<item>El <code rend="inline">*</code> es un <ref target="http://tldp.org/LDP/GNU-Linux-Tools-Summary/html/x11655.htm">comod&#237;n de Bash</ref> adjunto a un tipo de archivo dado para especificarlos como archivos de entrada.</item>
<item>La palabra <code rend="inline">file</code> es una variable arbitraria que representar&#225; cada archivo a medida que se ejecuta a trav&#233;s del bucle.</item>
<item>
<code rend="inline">ffprobe -f lavfi -i movie="$file",signalstats -show_entries frame=pkt_pts_time:frame_tags=lavfi.signalstats.HUEMED -print_format csv &gt; "${file%.m4v}.csv"; done</code> = el mismo comando de extracci&#243;n de metadatos de color que ejecutamos en nuestros dos extractos de <emph>Destination Earth</emph>, con algunas peque&#241;as modificaciones en la sintaxis para explicar su uso en varios archivos en un directorio:<list type="unordered">
<item><code rend="inline">"$file"</code> = recuerda cada variable. Las comillas aseguran que se conserva el nombre de archivo original.</item>
<item><code rend="inline">&gt; "${file%.m4v}.csv";</code> = conserva el nombre de archivo original al escribir los archivos de salida <code rend="inline">.csv</code>. Esto asegurar&#225; que los nombres de los archivos de v&#237;deo originales coincidan con sus correspondientes reportes en <code rend="inline">.csv</code>.</item>
<item><code rend="inline">done</code> = termina el script una vez que se hayan completado todos los archivos del directorio.</item>
</list>
</item>
</list>
<p style="alert alert-warning">
Tambi&#233;n puedes usar <code rend="inline">signalstats</code> para obtener otra informaci&#243;n valiosa relacionada con el color. Consulta la <ref target="https://www.ffmpeg.org/ffprobe-all.html#signalstats-1">documentaci&#243;n del filtro</ref> para obtener una lista completa de las m&#233;tricas visuales disponibles.
</p>
<p>Una vez que ejecutas este script, ver&#225;s que cada archivo de v&#237;deo en el directorio ahora tiene un archivo <code rend="inline">.csv</code> correspondiente que contiene el conjunto de datos especificado.</p>
</div></div></div>
      <div type="2"><head>En resumen</head>
<p>En este tutorial, hemos aprendido:</p>
<list type="unordered">
<item>c&#243;mo instalar FFmpeg en diferentes sistemas operativos y c&#243;mo acceder al <emph>framework</emph> en el navegador web</item>
<item>cu&#225;l es la sintaxis b&#225;sica y la estructura de los comandos FFmpeg</item>
<item>c&#243;mo visualizar metadatos t&#233;cnicos b&#225;sicos de un archivo audiovisual</item>
<item>c&#243;mo transformar un archivo audiovisual a trav&#233;s de la transcodificaci&#243;n y el "re-wrapping"</item>
<item>c&#243;mo analizar y editar ese archivo audiovisual separando sus componentes ("demux") y crear extractos</item>
<item>c&#243;mo reproducir archivos audiovisuales usando <code rend="inline">ffplay</code></item>
<item>c&#243;mo crear nuevos archivos de v&#237;deo con vectorscopios integrados</item>
<item>c&#243;mo exportar datos tabulares relacionados con el color de una pista de v&#237;deo usando <code rend="inline">ffprobe</code></item>
<item>c&#243;mo crear un bucle <emph>for</emph> de Bash para extraer informaci&#243;n de datos de color de m&#250;ltiples archivos de v&#237;deo con un solo comando</item>
</list>
<p>A un nivel m&#225;s amplio, este tutorial aspira a proporcionar una introducci&#243;n informada y atractiva sobre c&#243;mo se pueden incorporar las herramientas y metodolog&#237;as audiovisuales en los proyectos y las pr&#225;cticas de Humanidades Digitales. Con herramientas abiertas y potentes como FFmpeg, existe un gran potencial para expandir el alcance del campo para incluir tipos de medios y an&#225;lisis m&#225;s ricos y complejos que nunca.</p>
</div>
      <div type="2"><head>M&#225;s recursos</head>
<p>FFmpeg tiene una comunidad grande y bien apoyada de usarios a trav&#233;s de todo el mundo. Como tal, hay muchos recursos gratuitos y de c&#243;digo abierto para descubir nuevos comandos y t&#233;cnicas para trabajar con materiales audiovisuales. Por favor, contacta al autor con cualquier adici&#243;n a esta lista, especialmente si se trata de recursos educativos en espa&#241;ol para aprender FFmpeg.</p>
<list type="unordered">
<item><ref target="https://www.ffmpeg.org/ffmpeg.html">La documentaci&#243;n oficial de FFmpeg</ref></item>
<item><ref target="https://trac.ffmpeg.org/wiki/WikiStart">FFmpeg Wiki</ref></item>
<item><ref target="https://amiaopensource.github.io/ffmprovisr/">ffmprovisr</ref> de <ref target="https://amianet.org/?lang=es">La Asociaci&#243;n de Archivistas de Im&#225;genes en Movimiento</ref></item>
<item><ref target="https://training.ashleyblewer.com/">Entrenamiento de preservaci&#243;n audiovisual de Ashley Blewer</ref></item>
<item><ref target="https://github.com/privatezero/NDSR/blob/master/Demystifying_FFmpeg_Slides.pdf">La presentaci&#243;n de Andrew Weaver: "Demystifying FFmpeg"</ref></item>
<item><ref target="https://docs.google.com/presentation/d/1NuusF948E6-gNTN04Lj0YHcVV9-30PTvkh_7mqyPPv4/present?ueb=true&amp;slide=id.g2974defaca_0_231">FFmpeg: Presentaci&#243;n de Ben Turkus</ref></item>
<item><ref target="https://avpres.net/FFmpeg/">FFmpeg Cookbook for Archivists de Reto Kromer</ref></item>
</list>
<div type="3"><head>Programas de c&#243;digo abierto de an&#225;lisis audiovisual que usan FFmpeg</head>
<list type="unordered">
<item><ref target="https://mediaarea.net/en/MediaInfo">MediaInfo</ref></item>
<item><ref target="https://bavc.org/preserve-media/preservation-tools">QC Tools</ref></item>
</list>
</div></div>
      <div type="2"><head>Referencias</head>
<list type="unordered">
<item>
<p>Champion, E. (2017) &#8220;Digital Humanities is text heavy, visualization light, and simulation poor,&#8221; Digital Scholarship in the Humanities 32(S1), i25-i32</p>
</item>
<item>
<p>Hockey, S. (2004) &#8220;The History of Humanities Computing,&#8221; A Companion to Digital Humanities, ed. Susan Schreibman, Ray Siemens, John Unsworth. Oxford: Blackwell</p>
</item>
</list>
<p>Este tutorial fue posible gracias al apoyo de la Academia Brit&#225;nica y fue escrito durante el Taller de <emph>Programming Historian</emph>  desarrollado en la Universidad de Los Andes en Bogot&#225;, Colombia, entre el 31 de julio y 3 de agosto de 2018.</p>
</div>
    </body>
  </text>
</TEI>
