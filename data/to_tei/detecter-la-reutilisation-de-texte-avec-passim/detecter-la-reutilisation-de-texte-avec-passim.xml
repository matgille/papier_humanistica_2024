<TEI xmlns="http://www.tei-c.org/ns/1.0" xml:id="detecter-la-reutilisation-de-texte-avec-passim">
  <teiHeader>
 <fileDesc>
  <titleStmt>
   <title>D&#233;tecter la r&#233;utilisation de texte avec Passim</title>
  <author role="original_author"><persName>Matteo Romanello</persName><persName>Simon Hengchen</persName></author><editor role="reviewers"><persName>Ryan Muther</persName><persName>Marco B&#252;chler</persName></editor><author role="translators">Carla Amaya</author><editor role="translation-reviewers">Cyrille Suire</editor><editor role="editors"><persName>A</persName><persName>n</persName><persName>n</persName><persName>a</persName><persName>-</persName><persName>M</persName><persName>a</persName><persName>r</persName><persName>i</persName><persName>a</persName><persName> </persName><persName>S</persName><persName>i</persName><persName>c</persName><persName>h</persName><persName>a</persName><persName>n</persName><persName>i</persName></editor></titleStmt>
  <publicationStmt>
   <idno type="doi">10.46430/phfr0018</idno><date type="published">05/16/2021</date><date type="translated">09/10/2021</date><p>Lesson reviewed and published in Programming Historian.</p>
  </publicationStmt>
  <sourceDesc>
  <p>Born digital, in a markdown format. Original file: <ref type="original_file" target="#detecting-text-reuse-with-passim"/>.</p><p>There are other translations: <ref target=""/></p></sourceDesc>
 </fileDesc>
 <profileDesc><abstract><p>Dans cette le&#231;on, vous serez initi&#233; &#224; la d&#233;tection automatique de la r&#233;utilisation des textes avec la biblioth&#232;que Passim. Vous apprendrez comment installer et ex&#233;cuter Passim et ses d&#233;pendances, comment pr&#233;parer vos textes en tant que fichiers d'entr&#233;e adapt&#233;s &#224; l'utilisation de Passim et, enfin, comment traiter la sortie g&#233;n&#233;r&#233;e par Passim pour effectuer des analyses de base.</p></abstract><textClass><keywords><term xml:lang="en">data-manipulation</term></keywords></textClass></profileDesc>
</teiHeader>
  <text xml:lang="fr">
    <body><p>Dans cette le&#231;on, vous serez initi&#233;(e) &#224; la d&#233;tection automatique de la r&#233;utilisation des textes avec la biblioth&#232;que Passim. Vous apprendrez comment installer et ex&#233;cuter Passim et ses d&#233;pendances, comment pr&#233;parer vos textes en tant que fichiers d'entr&#233;e adapt&#233;s &#224; l'utilisation de Passim et, enfin, comment traiter la sortie g&#233;n&#233;r&#233;e par Passim pour effectuer des analyses de base.</p>
<p>Cette le&#231;on s'adresse aux personnes dont le travail rel&#232;ve des humanit&#233;s num&#233;riques (HN). Aucune connaissance pr&#233;alable de la r&#233;utilisation de texte n'est requise, toutefois, il est n&#233;cessaire d'avoir une compr&#233;hension basique de <ref target="https://fr.wikipedia.org/wiki/Bourne-Again_shell">l'usage de l'environnement bash</ref> et du langage Python, ainsi que de certaines op&#233;rations de manipulation de donn&#233;es. Si vous souhaitez compl&#233;ter vos connaissances concernant l'utilisation du bash et de <ref target="https://fr.wikipedia.org/wiki/Python_(langage)">Python</ref>, r&#233;f&#233;rez-vous aux tutoriels du <emph>Programming Historian</emph> suivants qui offrent une <ref target="/en/lessons/intro-to-bash">introduction au bash</ref> et &#224; la <ref target="/fr/lecons/?topic=python">collection de tutoriels sur Python</ref>.</p>
<p>Plus particuli&#232;rement, la le&#231;on donne un aper&#231;u de <ref target="https://github.com/dasmiq/passim">Passim</ref>, un outil open source con&#231;u pour la d&#233;tection automatique de la r&#233;utilisation de texte. Bien que cet outil ait &#233;t&#233; employ&#233; dans des projets HN, grands comme petits, une documentation destin&#233;e aux utilsateurs et utilisatrices pour une prise en main facile, avec des exemples et des instructions, fait d&#233;faut. Ainsi, nous visons &#224; combler cette lacune gr&#226;ce &#224; cetter le&#231;on du <emph>Programming Historian</emph>.</p>
<div type="2"><head>Introduction &#224; la r&#233;utilisation de texte</head>
<p>La r&#233;utilisation de texte peut &#234;tre d&#233;finie comme &#171;&#8239;une r&#233;it&#233;ration significative d'un texte, g&#233;n&#233;ralement au-del&#224; de la simple r&#233;p&#233;tition du langage courant&#8239;&#187; (Romanello et al. 2014). Il s'agit d'un concept si large, qu'il peut &#234;tre compris &#224; diff&#233;rents niveaux et &#234;tre &#233;tudi&#233; dans une grande vari&#233;t&#233; de contextes. Dans un contexte de publication ou d'enseignement, par exemple, les cas de r&#233;utilisation de texte peuvent &#234;tre consid&#233;r&#233;s comme du plagiat, si des parties de texte d'un(e) autre auteur(e) sont employ&#233;es sans une r&#233;f&#233;rence appropri&#233;e. Dans le cadre des &#233;tudes litt&#233;raires, la r&#233;utilisation de texte n'est bien souvent qu'un synonyme pour d&#233;signer des ph&#233;nom&#232;nes litt&#233;raires tels que les allusions, les paraphrases et les citations directes.</p>
<p>La liste ci-dessous pr&#233;sente une partie des outils qui permettent de d&#233;tecter la r&#233;utilisation de texte : </p>
<list type="unordered">
<item><ref target="https://docs.ropensci.org/textreuse/">Paquet <code rend="inline">textreuse</code></ref> (R) d&#233;velopp&#233; par Lincoln Mullen</item>
<item><ref target="https://www.etrap.eu/research/tracer/">TRACER</ref> (Java) d&#233;velopp&#233; par Marco B&#252;chler et ses collaborateurs</item>
<item><ref target="https://blast.ncbi.nlm.nih.gov/Blast.cgi">Basic Local Alignment Search Tool (BLAST)</ref></item>
<item><ref target="https://github.com/tesserae/tesserae">Tesserae</ref> (PHP, Perl)</item>
<item><ref target="https://github.com/ARTFL-Project/text-pair">TextPAIR (Pairwise Alignment for Intertextual Relations)</ref></item>
<item><ref target="https://github.com/dasmiq/passim">Passim</ref> (Scala) d&#233;velopp&#233; par <ref target="http://www.ccs.neu.edu/home/dasmith/">David Smith</ref> (Universit&#233; Northeastern)</item>
</list>
<p>Pour ce tutoriel, nous avons choisi de nous concentrer sur la biblioth&#232;que Passim et cela pour trois raisons principales. Premi&#232;rement, car celle-ci peut &#234;tre adapt&#233;e &#224; une grande vari&#233;t&#233; d'utilisation, puisqu'elle fonctionne autant sur une petite collection de texte que sur un corpus de grande &#233;chelle. Deuxi&#232;mement, parce que, bien que la documentation au sujet de Passim soit exhaustive, du fait que ses utilisateurs soient relativement avanc&#233;s, un guide &#171;&#8239;pas-&#224;-pas&#8239;&#187; de la d&#233;tection de la r&#233;utilisation de texte avec Passim plus ax&#233; sur l'utilisateur serait b&#233;n&#233;fique pour l'ensemble de la communaut&#233;. Enfin, les exemples suivants illustrent la vari&#233;t&#233; de sc&#233;narios dans lesquels la r&#233;utilisation de texte est une m&#233;thodologie utile :</p>
<list type="unordered">
<item>Pour d&#233;terminer si une biblioth&#232;que num&#233;rique contient plusieurs &#233;ditions de m&#234;mes &#339;uvres</item>
<item>Pour trouver des citations dans un texte, &#224; condition que les &#339;uvres choisies soient connues (par exemple, pour trouver des citations de la Bible au sein de la litt&#233;rature anglaise du 17<sup>e</sup> si&#232;cle) </item>
<item>Pour &#233;tudier la viralit&#233; et la diffusion des textes (par exemple <ref target="https://viraltexts.org/">Viral Texts</ref> par Cordell and Smith pour les journaux historiques)</item>
<item>Pour identifier, et si possible filtrer, les documents en double dans une collection de texte avant d'effectuer d'autres &#233;tapes de traitement (par exemple, la mod&#233;lisation de sujet comme illustr&#233; par Schofield et al. (2017)).</item>
</list>
<p>Pour ces raisons, Passim est un excellent choix. Passim vous aidera &#224; automatiser la recherche de passages textuels r&#233;p&#233;t&#233;s dans un corpus &#8211; qu&#8217;il s&#8217;agisse d&#8217;annonces publicitaires dans les journaux, de copies multiples du m&#234;me po&#232;me ou de citations directes (et l&#233;g&#232;rement indirectes) dans l&#8217;ouvrage d&#8217;un(e) autre auteur(e).<br/>
La d&#233;tection de r&#233;utilisation de texte telle qu'elle est mise en place dans Passim vise &#224; identifier ces copies et r&#233;p&#233;titions automatiquement. Elle produit des clusters de passages qui ont &#233;t&#233; jug&#233;s comme &#233;tant li&#233;s les uns aux autres. En fin de compte, le contenu d'un cluster peut varier et d&#233;pendra beaucoup de votre question de recherche. Passim peut ainsi regrouper des copies d'un m&#234;me article qui ne diff&#232;rent que par des erreurs de reconnaissance optique de caract&#232;res (OCR), mais il peut aussi aider &#224; retrouver des textes qui partagent le m&#234;me mod&#232;le journalistique, comme des horoscopes ou des publicit&#233;s.</p>
</div><div type="2"><head>Pr&#233;requis</head>
<p>Ce tutoriel n&#233;cessite les connaissances suivantes :</p>
<list type="unordered">
<item>Une compr&#233;hension basique du terminal bash. Pour les lecteurs et les lectrices qui auraient besoin d&#8217;informations au sujet du script bash, vous pouvez lire la le&#231;on du <emph>Programming Historian</emph> qui offre une <ref target="/en/lessons/intro-to-bash">introduction</ref> au sujet.</item>
<item>Des connaissances en JSON. Pour en apprendre davantage au sujet de JSON, vous pouvez consulter la le&#231;on du <emph>Programming Historian</emph> intitul&#233;e <ref target="/en/lessons/json-and-jq">&#171;&#8239;Reshaping JSON with jq&#8239;&#187;</ref>.</item>
</list>
<p>De plus, bien qu'une compr&#233;hension de base de Python - et une installation de Python fonctionnelle - ne soient pas strictement n&#233;cessaires pour travailler avec Passim, elles sont requises pour ex&#233;cuter certaines parties de ce tutoriel (par exemple le carnet Jupyter avec l'exploration des donn&#233;es, ou le script de pr&#233;paration des donn&#233;es Early English Books Online (EEBO)). Si vous n'&#234;tes pas familier avec Python, veuillez lire la le&#231;on du <emph>Programming Historian</emph> <ref target="/fr/lecons/introduction-et-installation">&#171;&#8239;Introduction &#224; Python et installation&#8239;&#187;</ref>.   </p>
<p>Notez que l&#8217;installation de Passim sur Windows est plus difficile que celle pour macOS ou pour Linux. Par cons&#233;quent, nous vous recommandons d'utiliser macOS ou Linux (ou une machine virtuelle) pour cette le&#231;on.</p>
</div><div type="2"><head>Installation de Passim</head>
<p>L'installation de Passim exige l&#8217;installation des logiciels ci-dessous :</p>
<list type="unordered">
<item><ref target="https://www.java.com/fr/download/">Java JDK (version 8)</ref></item>
<item><ref target="https://www.scala-sbt.org/">Scala Build Tool</ref> (SBT)</item>
<item><ref target="https://spark.apache.org/">Apache Spark</ref></item>
</list>
<p>Mais pourquoi toutes ces d&#233;pendances sont-elles n&#233;cessaires ?</p>
<p>Passim est &#233;crit dans un langage de programmation appel&#233; Scala. Pour ex&#233;cuter un logiciel &#233;crit en Scala, ses sources doivent &#234;tre compil&#233;es en un fichier JAR ex&#233;cutable, ce qui est r&#233;alis&#233; par <code rend="inline">sbt</code>, l'outil de compilation interactif de Scala. Enfin, puisque Passim est con&#231;u pour travailler &#233;galement sur des grandes collections de textes (avec plusieurs milliers ou millions de documents), il utilise en coulisse Spark, un framework de calcul en cluster qui est &#233;crit en Java. L'utilisation de Spark permet &#224; Passim de g&#233;rer le traitement distribu&#233; de certaines parties du code, ce qui est utile lors de la manipulation de grandes quantit&#233;s de donn&#233;es. Le <ref target="https://spark.apache.org/docs/latest/cluster-overview.html#glossary">Spark glossary</ref> est une ressource utile pour apprendre la terminologie de base de Spark (des mots comme &#171;&#8239;driver&#8239;&#187;, &#171;&#8239;executor&#8239;&#187;, etc.), toutefois apprendre cette terminologie n&#8217;est pas indispensable si vous ex&#233;cutez Passim sur un petit ensemble de donn&#233;es.</p>
<p>Avant d&#8217;installer cet ensemble de logiciels, vous aurez besoin de t&#233;l&#233;charger le code source de la version 1 de Passim depuis GitHub :</p>
<ab><code xml:id="code_detecter-la-reutilisation-de-texte-avec-passim_0" corresp="code_detecter-la-reutilisation-de-texte-avec-passim_0.txt" lang="language-bash" rend="block"/></ab>
<p>ou t&#233;l&#233;chargez le code source <ref target="https://github.com/dasmiq/passim/releases/tag/v1.0.0">depuis la page de la version v1.0</ref>.</p>
<p>Si vous n&#8217;&#234;tes pas familier avec Git et Github, nous vous recommandons de lire la le&#231;on du <emph>Programming Historian</emph> qui offre une introduction <ref target="https://doi.org/10.46430/phen0051">&#224; la gestion de versions Git avec l'application GitHub Desktop</ref>.</p>
<div type="3"><head>Instructions pour macOS</head>
<p>Ces instructions sont destin&#233;es aux utilisateurs de macOS d'Apple et ont &#233;t&#233; test&#233;es sous la version 10.13.4 (alias High Sierra).</p>
<div type="4"><head>V&#233;rification de l'installation de Java</head>
<p>Assurez-vous que vous disposez du kit de d&#233;veloppement Java 8 en tapant la commande suivante dans une nouvelle fen&#234;tre de l'invite de commande :</p>
<ab><code xml:id="code_detecter-la-reutilisation-de-texte-avec-passim_1" corresp="code_detecter-la-reutilisation-de-texte-avec-passim_1.txt" lang="language-bash" rend="block"/></ab>
<p>Si le r&#233;sultat de cette commande ressemble &#224; l'exemple suivant, alors Java 8 est install&#233; sur votre ordinateur.</p>
<ab><code xml:id="code_detecter-la-reutilisation-de-texte-avec-passim_2" corresp="code_detecter-la-reutilisation-de-texte-avec-passim_2.txt" rend="block"/></ab>
</div><div type="4"><head>Installation de Java 8</head>
<p>Si une autre version de Java est d&#233;j&#224; install&#233;e sur votre ordinateur, suivez les prochaines &#233;tapes afin d&#8217;installer Java 8, tout en conservant la version d&#233;j&#224; install&#233;e de Java.</p>
<p>Ceci est important afin de ne pas casser les liens avec les logiciels d&#233;j&#224; install&#233;s qui ont besoin de versions plus r&#233;centes de Java.</p>
<list type="ordered">
<item>
<p>Installez le gestionnaire de paquets <code rend="inline">brew</code> en suivant les instructions d'installation sur le site <ref target="https://brew.sh/">Brew.sh</ref>. Une fois l'installation achev&#233;e, ex&#233;cutez <code rend="inline">brew --help</code> pour qu'elle fonctionne.</p>
</item>
<item>
<p>Utilisez <code rend="inline">brew</code> pour installer Java 8.</p>
</item>
</list>
<ab><code xml:id="code_detecter-la-reutilisation-de-texte-avec-passim_3" corresp="code_detecter-la-reutilisation-de-texte-avec-passim_3.txt" lang="language-bash" rend="block"/></ab>
<p>V&#233;rifiez que Java 8 est bien install&#233;.</p>
<ab><code xml:id="code_detecter-la-reutilisation-de-texte-avec-passim_4" corresp="code_detecter-la-reutilisation-de-texte-avec-passim_4.txt" lang="language-bash" rend="block"/></ab>
<p>Cette commande devrait produire quelque chose de semblable &#224; ce qui suit :</p>
<ab><code xml:id="code_detecter-la-reutilisation-de-texte-avec-passim_5" corresp="code_detecter-la-reutilisation-de-texte-avec-passim_5.txt" lang="language-bash" rend="block"/></ab>
<list start="3" type="ordered">
<item>Installez <code rend="inline">jenv</code>, un outil qui vous permet de g&#233;rer plusieurs versions de Java install&#233;es sur le m&#234;me ordinateur et qui vous permet de passer facilement de l&#8217;une &#224; l&#8217;autre.</item>
</list>
<ab><code xml:id="code_detecter-la-reutilisation-de-texte-avec-passim_6" corresp="code_detecter-la-reutilisation-de-texte-avec-passim_6.txt" lang="language-bash" rend="block"/></ab>
<p>Pour &#234;tre capable d'appeler <code rend="inline">jenv</code> sans sp&#233;cifier le chemin complet du fichier, n&#8217;oubliez pas d&#8217;ajouter <code rend="inline">jenv</code> &#224; votre variable d&#8217;environnement <code rend="inline">$PATH</code> en ouvrant le fichier <code rend="inline">~/.bashrc</code> avec votre &#233;diteur de texte pr&#233;f&#233;r&#233; et en ajoutant les lignes suivantes &#224; la fin du fichier :</p>
<ab><code xml:id="code_detecter-la-reutilisation-de-texte-avec-passim_7" corresp="code_detecter-la-reutilisation-de-texte-avec-passim_7.txt" lang="language-bash" rend="block"/></ab>
<p>Apr&#232;s avoir ajout&#233; ces lignes, vous devez soit ouvrir une autre fen&#234;tre de l'invite de commande soit ex&#233;cuter la ligne suivante pour que la variable <code rend="inline">$PATH</code> soit mise &#224; jour avec le changement que vous venez de faire (la commande <code rend="inline">source</code> d&#233;clenche le rechargement de votre configuration <code rend="inline">bash</code>).</p>
<ab><code xml:id="code_detecter-la-reutilisation-de-texte-avec-passim_8" corresp="code_detecter-la-reutilisation-de-texte-avec-passim_8.txt" lang="language-bash" rend="block"/></ab>
<p>Une fois install&#233;, ajoutez les versions existantes de Java &#224; <code rend="inline">jenv</code> (c'est-&#224;-dire celles list&#233;es par la commande <code rend="inline">/usr/libexec/java_home -V</code>) :</p>
<ab><code xml:id="code_detecter-la-reutilisation-de-texte-avec-passim_9" corresp="code_detecter-la-reutilisation-de-texte-avec-passim_9.txt" lang="language-bash" rend="block"/></ab>
<p>Maintenant vous pouvez d&#233;finir la version par d&#233;faut de Java pour ce projet en ex&#233;cutant ce qui suit :</p>
<ab><code xml:id="code_detecter-la-reutilisation-de-texte-avec-passim_10" corresp="code_detecter-la-reutilisation-de-texte-avec-passim_10.txt" lang="language-bash" rend="block"/></ab>
</div><div type="4"><head>Compilation de Passim &#224; partir des sources (macOS)</head>
<p>Passim est &#233;crit dans un langage de programmation appel&#233; Scala. Avant de pouvoir ex&#233;cuter un logiciel &#233;crit en Scala, ses sources doivent &#234;tre compil&#233;es. Cette t&#226;che est effectu&#233;e par <code rend="inline">sbt</code>, l'outil de compilation interactif.</p>
<p>Pour d&#233;terminer si <code rend="inline">sbt</code> est install&#233; sur votre ordinateur, ex&#233;cutez la commande suivante :</p>
<ab><code xml:id="code_detecter-la-reutilisation-de-texte-avec-passim_11" corresp="code_detecter-la-reutilisation-de-texte-avec-passim_11.txt" lang="language-bash" rend="block"/></ab>
<p>Si votre commande affiche <code rend="inline">bash: sbt: command not found</code> cela signifie que <code rend="inline">sbt</code> n'est pas install&#233;.
Cependant, Passim est livr&#233; avec un script utile (<code rend="inline">build/sbt</code>) qui t&#233;l&#233;chargera et installera sbt automatiquement avant de compiler les sources de Passim.</p>
<p><hi rend="bold">NB</hi> : L'utilisation d'un SBT externe (c'est-&#224;-dire d&#233;j&#224; install&#233;) peut conduire &#224; des probl&#232;mes, nous vous recommandons la m&#233;thode suivante pour compiler Passim.</p>
<p>Pour compiler le programme, ex&#233;cutez la commande suivante depuis le r&#233;pertoire o&#249; vous avez pr&#233;c&#233;demment clon&#233; le d&#233;p&#244;t Github de Passim :</p>
<ab><code xml:id="code_detecter-la-reutilisation-de-texte-avec-passim_12" corresp="code_detecter-la-reutilisation-de-texte-avec-passim_12.txt" lang="language-bash" rend="block"/></ab>
<p>Cette commande prendra un certain temps (environ 3 minutes sur une connexion moderne), mais elle vous tiendra inform&#233;(e) de la progression du t&#233;l&#233;chargement. Au fur et &#224; mesure que votre ordinateur commence &#224; t&#233;l&#233;charger les fichiers requis, un journal sera affich&#233; &#224; l'&#233;cran. &#192; la fin de ce processus, <code rend="inline">sbt</code> aura cr&#233;&#233; une archive <code rend="inline">.jar</code> contenant les sources compil&#233;es pour Passim. Ce fichier se trouve dans le r&#233;pertoire <code rend="inline">target</code>: <code rend="inline">target/scala-2.11/Passim_2.11-0.2.0.jar</code>. Selon la version de Scala et de Passim que vous poss&#232;dez, le chemin r&#233;el peut &#234;tre l&#233;g&#232;rement diff&#233;rent sur votre ordinateur.</p>
<p>Le r&#233;pertoire <code rend="inline">bin</code> contient un fichier Passim : il s'agit de l'ex&#233;cutable qui va lancer Passim. Pour que votre ordinateur connaisse l'emplacement de ce fichier, et donc pour qu'il reconnaisse la commande Passim, il est n&#233;cessaire d'ajouter le chemin &#224; la variable d'environnement <code rend="inline">PATH</code>.</p>
<ab><code xml:id="code_detecter-la-reutilisation-de-texte-avec-passim_13" corresp="code_detecter-la-reutilisation-de-texte-avec-passim_13.txt" lang="language-bash" rend="block"/></ab>
<p>Pour ajouter le chemin de fa&#231;on permanente &#224; la variable d'environnement <code rend="inline">PATH</code> ouvrez le <code rend="inline">~/.bashrc</code> avec votre &#233;diteur de texte pr&#233;f&#233;r&#233; et ajoutez la ligne suivante n'importe o&#249; dans le fichier (puis ex&#233;cutez <code rend="inline">source ~/.bashrc</code> pour appliquer ce changement) :</p>
<ab><code xml:id="code_detecter-la-reutilisation-de-texte-avec-passim_14" corresp="code_detecter-la-reutilisation-de-texte-avec-passim_14.txt" lang="language-bash" rend="block"/></ab>
</div><div type="4"><head>Installation de Spark</head>
<list type="ordered">
<item>
<p>Acc&#233;dez &#224; la <ref target="http://spark.apache.org/downloads">section de t&#233;l&#233;chargement</ref> du site Web de Spark et s&#233;lectionnez la version publi&#233;e de Spark 3.x.x (o&#249; <emph>x.x</emph> indique les &#233;ditions de la version 3.) ainsi que le type de paquetage &#171;&#8239;Pre-built for Apache Hadoop 2.7&#8239;&#187; dans les menus d&#233;roulants.</p>
</item>
<item>
<p>Extrayez les donn&#233;es binaires compress&#233;es dans le r&#233;pertoire de votre choix (par exemple <code rend="inline">/Applications</code>) :</p>
</item>
</list>
<ab><code xml:id="code_detecter-la-reutilisation-de-texte-avec-passim_15" corresp="code_detecter-la-reutilisation-de-texte-avec-passim_15.txt" lang="language-bash" rend="block"/></ab>
<list start="3" type="ordered">
<item>Ajoutez le r&#233;pertoire o&#249; vous avez install&#233; Spark &#224; votre variable d'environnement <code rend="inline">PATH</code>. Pour ce faire, ex&#233;cutez temporairement la commande suivante :</item>
</list>
<ab><code xml:id="code_detecter-la-reutilisation-de-texte-avec-passim_16" corresp="code_detecter-la-reutilisation-de-texte-avec-passim_16.txt" lang="language-bash" rend="block"/></ab>
<p>Pour ajouter le r&#233;pertoire d'installation du chemin de fa&#231;on permanente &#224; votre variable d'environnement <code rend="inline">PATH</code>, ouvrez le fichier <code rend="inline">~/.bashrc</code> avec votre &#233;diteur de texte pr&#233;f&#233;r&#233; et ajoutez la ligne suivante n'importe o&#249; dans le fichier :</p>
<ab><code xml:id="code_detecter-la-reutilisation-de-texte-avec-passim_17" corresp="code_detecter-la-reutilisation-de-texte-avec-passim_17.txt" lang="language-bash" rend="block"/></ab>
<p>Apr&#232;s avoir &#233;dit&#233; <code rend="inline">~/.bashrc</code>, ouvrez une autre fen&#234;tre de l'invite de commande ou bien ex&#233;cutez la commande suivante :</p>
<ab><code xml:id="code_detecter-la-reutilisation-de-texte-avec-passim_18" corresp="code_detecter-la-reutilisation-de-texte-avec-passim_18.txt" lang="language-bash" rend="block"/></ab>
</div></div><div type="3"><head>Instructions pour Linux</head>
<p>Ces instructions sont destin&#233;es aux distributions bas&#233;es sur Debian (Debian, Ubuntu, Linux Mint, etc.). Si vous utilisez un autre type de distribution (Fedora, Gentoo, etc.), remplacez les commandes sp&#233;cifiques &#224; la distribution(par exemple <code rend="inline">apt</code>) par celles que votre distribution impose.</p>
<div type="4"><head>V&#233;rifiez l'installation de Java</head>
<p>Pour vous assurer que le kit de d&#233;veloppement Java 8 est bien install&#233;, ex&#233;cutez la commande suivante :</p>
<ab><code xml:id="code_detecter-la-reutilisation-de-texte-avec-passim_19" corresp="code_detecter-la-reutilisation-de-texte-avec-passim_19.txt" lang="language-bash" rend="block"/></ab>
<p>Si la commande ci-dessus renvoie &#224; <code rend="inline">1.8.0_252</code> ou &#224; quelque chose de semblable, alors vous avez install&#233; le kit de d&#233;veloppement Java 8 (le <code rend="inline">8</code> vous indique qu'il s'agit du bon kit qui a &#233;t&#233; install&#233; et qui a &#233;t&#233; s&#233;lectionn&#233; par d&#233;faut). Si votre r&#233;sultat est diff&#233;rent, choisissez en cons&#233;quence l'une des commandes suivantes :</p>
<ab><code xml:id="code_detecter-la-reutilisation-de-texte-avec-passim_20" corresp="code_detecter-la-reutilisation-de-texte-avec-passim_20.txt" lang="language-bash" rend="block"/></ab>
<ab><code xml:id="code_detecter-la-reutilisation-de-texte-avec-passim_21" corresp="code_detecter-la-reutilisation-de-texte-avec-passim_21.txt" lang="language-bash" rend="block"/></ab>
</div><div type="4"><head>Compilation de Passim &#224; partir des sources</head>
<p>Reportez-vous aux <ref target="#compilation-de-passim-%C3%A0-partir-des-sources-macos">instructions de compilation pour macOS</ref>, car elles sont les m&#234;mes que pour l'environnement Linux.</p>
</div><div type="4"><head>Installation de Spark</head>
<list type="ordered">
<item>T&#233;l&#233;chargez les donn&#233;es binaires Spark en utilisant la commande <code rend="inline">wget</code>:</item>
</list>
<ab><code xml:id="code_detecter-la-reutilisation-de-texte-avec-passim_22" corresp="code_detecter-la-reutilisation-de-texte-avec-passim_22.txt" lang="language-bash" rend="block"/></ab>
<list start="2" type="ordered">
<item>Extrayez les donn&#233;es binaires compress&#233;es dans un r&#233;pertoire de votre choix :</item>
</list>
<ab><code xml:id="code_detecter-la-reutilisation-de-texte-avec-passim_23" corresp="code_detecter-la-reutilisation-de-texte-avec-passim_23.txt" lang="language-bash" rend="block"/></ab>
<list start="3" type="ordered">
<item>Ajoutez le r&#233;pertoire dans lequel vous avez install&#233; Spark &#224; votre variable d'environnement <code rend="inline">PATH</code>. Pour ajouter temporairement le r&#233;pertoire &#224; votre variable d'environnement&#160;<code rend="inline">PATH</code>, ex&#233;cutez la commande suivante :</item>
</list>
<ab><code xml:id="code_detecter-la-reutilisation-de-texte-avec-passim_24" corresp="code_detecter-la-reutilisation-de-texte-avec-passim_24.txt" lang="language-bash" rend="block"/></ab>
<p>Pour ajouter le r&#233;pertoire &#224; votre variable d'environnement&#160;<code rend="inline">PATH</code> de fa&#231;on permanente, ouvrez le fichier <code rend="inline">~/.bashrc</code> avec votre &#233;diteur de texte pr&#233;f&#233;r&#233; et ajoutez la ligne suivante n'importe o&#249; dans le fichier :</p>
<ab><code xml:id="code_detecter-la-reutilisation-de-texte-avec-passim_25" corresp="code_detecter-la-reutilisation-de-texte-avec-passim_25.txt" lang="language-bash" rend="block"/></ab>
<p>Apr&#232;s avoir modifi&#233; <code rend="inline">~/.bashrc</code>, vous devez ouvrir une nouvelle fen&#234;tre de l'invite de commande ou bien ex&#233;cuter la ligne suivante pour que votre variable <code rend="inline">PATH</code> soit mise &#224; jour avec le changement que vous venez de faire.</p>
<ab><code xml:id="code_detecter-la-reutilisation-de-texte-avec-passim_26" corresp="code_detecter-la-reutilisation-de-texte-avec-passim_26.txt" lang="language-bash" rend="block"/></ab>
</div></div><div type="3"><head>V&#233;rifiez l'installation</head>
<p>&#192; ce stade, vous avez install&#233; Passim et tous les paquets n&#233;cessaires sur votre ordinateur. Si vous tapez  <code rend="inline">Passim --help</code> dans la ligne de commande, vous devriez voir une sortie similaire &#224; ce qui suit :</p>
<ab><code xml:id="code_detecter-la-reutilisation-de-texte-avec-passim_27" corresp="code_detecter-la-reutilisation-de-texte-avec-passim_27.txt" lang="language-bash" rend="block"/></ab>
<!--
Doit-on traduire la doccumentation de Passim ?
-->
</div></div><div type="2"><head>Pr&#233;paration des donn&#233;es pour Passim</head>
<p>Le but de l'utilisation de Passim est d'automatiser la recherche de passages de texte r&#233;p&#233;t&#233;s dans un corpus. Par exemple, un corpus de journaux contient de multiples copies d'un m&#234;me article, identiques ou l&#233;g&#232;rement diff&#233;rentes les unes des autres, ainsi que des r&#233;p&#233;titions de plus petites portions d'une page de journal (par exemple, publicit&#233;, liste d'&#233;v&#233;nements, etc.).</p>
<p>Comme le pr&#233;cise la documentation de Passim, &#171;&#8239;l'entr&#233;e de Passim est un ensemble de documents. En fonction du type de donn&#233;es que vous avez, vous pouvez choisir des documents comme des livres entiers, des pages de livres, des num&#233;ros entiers de journaux, des articles de journaux individuels, etc. Au minimum, un document est constitu&#233; d'une cha&#238;ne d'identification et d'une seule cha&#238;ne de contenu textuel&#8239;&#187;. Vous pouvez vous r&#233;f&#233;rer &#224; l'exemple de saisie JSON minimale dans la section suivante pour davantage d'informations sur la structure de la saisie pour Passim.</p>
<p>La figure 1 repr&#233;sente sch&#233;matiquement les donn&#233;es d&#8217;entr&#233;e et de sortie fournies &#224; Passim. &#201;tant donn&#233; qu'il s'agit d'un ensemble de documents en entr&#233;e et qu'il est divis&#233; en s&#233;ries de documents, Passim tentera d'identifier la r&#233;utilisation de texte &#224; partir de documents de diff&#233;rentes s&#233;ries, et non au sein de ces s&#233;ries. Dans le cas d'un corpus de journaux, les articles d'un m&#234;me journal appartiendront &#224; la m&#234;me s&#233;rie de documents, car nous ne sommes pas int&#233;ress&#233;s par la d&#233;tection de la r&#233;utilisation au sein d'un m&#234;me journal, mais entre diff&#233;rents journaux.</p>
<p>En fin de compte, ce qui compose un document et comment ces documents devraient &#234;tre divis&#233;s en s&#233;ries sont les choix que vous devrez faire lorsque vous pr&#233;parerez vos donn&#233;es pour Passim.  Naturellement, la d&#233;cision sur ce qui constitue des <emph>s&#233;ries</emph> de documents d&#233;pend directement de vos objectifs ou de vos questions de recherche. Trouver des citations de la Bible dans un corpus de livres est un cas de <ref target="https://fr.wikipedia.org/wiki/Mod%C3%A8le_relationnel#Relation_1:N">relation &#171;&#8239;un &#224; plusieurs&#8239;&#187; (1,N)</ref> de d&#233;tection de r&#233;utilisation de texte, qui exige que les documents soient group&#233;s en deux s&#233;ries (<code rend="inline">bible</code> et <code rend="inline">non_bible</code>). Au contraire, la comparaison entre plusieurs &#233;ditions de la Bible (&#233;galement nomm&#233;e par collection) peut &#234;tre consid&#233;r&#233;e comme un cas de <ref target="https://fr.wikipedia.org/wiki/Mod%C3%A8le_relationnel#Relation_N:N">relation &#171;&#8239;plusieurs &#224; plusieurs&#8239;&#187; (N,N)</ref>, o&#249; chaque &#233;dition correspondra et constituera une s&#233;rie de documents (par exemple des pages). Si vos questions de recherche changent &#224; un moment donn&#233;, ce qui requiert ainsi une red&#233;finition des s&#233;ries de documents, vous devrez &#233;galement produire de nouvelles donn&#233;es d'entr&#233;e pour Passim, afin de refl&#233;ter ce changement.</p>
<figure><desc>Figure 1. Repr&#233;sentation sch&#233;matique des clusters de r&#233;utilisation de texte ; chaque cluster est form&#233; de passages similaires trouv&#233;s dans plusieurs s&#233;ries de documents.</desc><graphic url="textreuse-generic.png"/></figure>
<div type="3"><head>Format JSON de base</head>
<p>Le format d'entr&#233;e de Passim consiste en des documents JSON qui sont au format <ref target="http://jsonlines.org/">JSON lines</ref> (c'est-&#224;-dire que chaque ligne de texte contient un seul document JSON).</p>
<p>Le contenu suivant d'un fichier nomm&#233; <code rend="inline">test.json</code> illustre le format minimal d'entr&#233;e requis pour Passim :</p>
<ab><code xml:id="code_detecter-la-reutilisation-de-texte-avec-passim_28" corresp="code_detecter-la-reutilisation-de-texte-avec-passim_28.txt" lang="language-json" rend="block"/></ab>
<p>Les champs <code rend="inline">id</code>, <code rend="inline">series</code> et <code rend="inline">text</code> sont les seuls champs obligatoirement requis pour Passim. Avec ce fichier en entr&#233;e, le logiciel va tenter de d&#233;tecter la r&#233;utilisation de texte entre les documents de la s&#233;rie <code rend="inline">abc</code> et ceux de la s&#233;rie <code rend="inline">def</code>, sur la base du contenu de <code rend="inline">text</code>.</p>
<p>Tout au long de ce tutoriel, nous utiliserons l'outil en ligne de commande <ref target="https://stedolan.github.io/jq/"><code rend="inline">jq</code></ref> pour inspecter et effectuer quelques traitements de base sur les donn&#233;es JSON en entr&#233;e et en sortie. Notez que, si vous n'avez pas install&#233; <code rend="inline">jq</code>, vous devrez ex&#233;cuter <code rend="inline">sudo apt-get install jq</code> sous Ubuntu ou <code rend="inline">brew install jq</code> sous macOS (pour les autres syst&#232;mes d'exploitation <ref target="https://stedolan.github.io/jq/download/">r&#233;f&#233;rez-vous &#224; la page officielle d'installation de JQ</ref>).</p>
<p>Par exemple, pour s&#233;lectionner et afficher le champ <code rend="inline">series</code> de votre entr&#233;e <code rend="inline">test.json</code>, ex&#233;cutez la commande suivante :</p>
<ab><code xml:id="code_detecter-la-reutilisation-de-texte-avec-passim_29" corresp="code_detecter-la-reutilisation-de-texte-avec-passim_29.txt" lang="language-bash" rend="block"/></ab>
<p>Note : Si vous employez <code rend="inline">jq</code> pour consulter vos donn&#233;es JSON, vous devez utiliser le param&#232;tre <code rend="inline">--slurp</code> chaque fois que vous voulez traiter le contenu d'un ou plusieurs fichiers de lignes JSON comme un seul tableau de documents JSON et y appliquer des filtres (par exemple, pour s&#233;lectionner et afficher un seul document, utilisez la commande suivante <code rend="inline">jq --slurp '.[-1]' test.json</code>). Sinon <code rend="inline">jq</code> traitera chaque document s&#233;par&#233;ment, ce qui provoquera alors l'erreur suivante :</p>
<ab><code xml:id="code_detecter-la-reutilisation-de-texte-avec-passim_30" corresp="code_detecter-la-reutilisation-de-texte-avec-passim_30.txt" lang="language-bash" rend="block"/></ab>
</div><div type="3"><head>Note au sujet du stockage des donn&#233;es</head>
<p>En fonction de la taille totale de vos donn&#233;es, il peut &#234;tre judicieux de stocker les fichiers d'entr&#233;e de Passim sous forme de fichiers compress&#233;s. Passim supporte plusieurs sch&#233;mas de compression comme .gzip et .bzip2. Notez qu'un flux de donn&#233;es compress&#233; sera plus lent &#224; traiter qu'un flux non compress&#233;, donc l'utilisation de cette option ne sera b&#233;n&#233;fique que si vos donn&#233;es sont volumineuses (par exemple des gigaoctets de texte), si vous avez acc&#232;s &#224; une grande puissance de calcul, ou si vous disposez d'une quantit&#233; limit&#233;e d'espace disque.</p>
<p>Cette commande ou, mieux, cette cha&#238;ne de commandes produira le premier document dans un fichier de lignes JSON compress&#233; par bzip2 (certains champs ont &#233;t&#233; tronqu&#233;s pour des raisons de lisibilit&#233;) :</p>
<ab><code xml:id="code_detecter-la-reutilisation-de-texte-avec-passim_31" corresp="code_detecter-la-reutilisation-de-texte-avec-passim_31.txt" lang="language-bash" rend="block"/></ab>
<p>Et produira le r&#233;sultat suivant :</p>
<ab><code xml:id="code_detecter-la-reutilisation-de-texte-avec-passim_32" corresp="code_detecter-la-reutilisation-de-texte-avec-passim_32.txt" lang="language-json" rend="block"/></ab>
</div><div type="3"><head>Personnalisation du format JSON</head>
<p>Merci de noter d'embl&#233;e que cette sous-section n'est pas strictement n&#233;cessaire pour ex&#233;cuter Passim, comme le montrera la deuxi&#232;me &#233;tude de cas. N&#233;anmoins, ces &#233;tapes peuvent &#234;tre utiles aux lecteurs ayant besoin de connaissances plus avanc&#233;es en ce qui concerne le format et la structure des donn&#233;es d'entr&#233;e.</p>
<p>Dans certains cas, il se peut que vous d&#233;siriez inclure des informations suppl&#233;mentaires (c'est-&#224;-dire des champs JSON) dans chaque document d'entr&#233;e, en plus des champs obligatoires (<code rend="inline">id</code>, <code rend="inline">series</code>, <code rend="inline">text</code>). Par exemple, lorsque vous travaillez avec des donn&#233;es OCR, il est possible que vous souhaitiez passer les informations de coordonn&#233;es de l'image avec le texte de l'article. Passim supporte l'utilisation de donn&#233;es d'entr&#233;e qui suivent un format JSON personnalis&#233;, car, en coulisses, il s'appuie sur Spark pour d&#233;duire la structure des donn&#233;es d'entr&#233;e (c'est-&#224;-dire le sch&#233;ma JSON). Passim n'utilisera pas directement ces champs, mais il les conservera dans la sortie produite.</p>
<p>Cependant, il arrive quelques fois que Spark ne parvienne pas &#224; d&#233;duire la structure correcte des donn&#233;es d'entr&#233;e (par exemple, en d&#233;duisant un type de donn&#233;es erron&#233; pour un champ donn&#233;). Dans cette situation, vous devez informer Passim du sch&#233;ma correct des donn&#233;es d'entr&#233;e. </p>
<p>L'exemple suivant explique une approche pas &#224; pas pour r&#233;soudre cette situation relativement rare dans laquelle il faut corriger le sch&#233;ma JSON qui a &#233;t&#233; d&#233;duit. Passim poss&#232;de de base la commande <code rend="inline">json-df-schema</code>, qui ex&#233;cute un script (Python) pour d&#233;duire le sch&#233;ma &#224; partir de n'importe quelle entr&#233;e JSON. Les &#233;tapes suivantes sont n&#233;cessaires pour d&#233;duire la structure &#224; partir de n'importe quelle donn&#233;e JSON :</p>
<list type="ordered">
<item>Installez les biblioth&#232;ques Python n&#233;cessaires.</item>
</list>
<ab><code xml:id="code_detecter-la-reutilisation-de-texte-avec-passim_33" corresp="code_detecter-la-reutilisation-de-texte-avec-passim_33.txt" lang="language-bash" rend="block"/></ab>
<list start="2" type="ordered">
<item>Extrayez un exemple d'entr&#233;e &#224; partir de l'un des fichiers d'entr&#233;e compress&#233;s.</item>
</list>
<ab><code xml:id="code_detecter-la-reutilisation-de-texte-avec-passim_34" corresp="code_detecter-la-reutilisation-de-texte-avec-passim_34.txt" lang="language-bash" rend="block"/></ab>
<list start="3" type="ordered">
<item>Demandez &#224; <code rend="inline">json-df-schema</code> de d&#233;duire le sch&#233;ma de nos donn&#233;es &#224; partir de notre fichier d'exemple.</item>
</list>
<ab><code xml:id="code_detecter-la-reutilisation-de-texte-avec-passim_35" corresp="code_detecter-la-reutilisation-de-texte-avec-passim_35.txt" lang="language-bash" rend="block"/></ab>
<p><code rend="inline">json-df-schema</code> tentera de d&#233;duire le sch&#233;ma JSON des donn&#233;es d'entr&#233;e et de le sortir dans un fichier. L'exemple suivant nous montre &#224; quoi ressemble le sch&#233;ma g&#233;n&#233;r&#233; par Passim (<code rend="inline">Passim.schema.orig</code>) :</p>
<ab><code xml:id="code_detecter-la-reutilisation-de-texte-avec-passim_36" corresp="code_detecter-la-reutilisation-de-texte-avec-passim_36.txt" lang="language-json" rend="block"/></ab>
<p>Passim n'a pas reconnu que le champ de coordonn&#233;es contient des valeurs enti&#232;res et il l'a interpr&#233;t&#233; comme un type de donn&#233;es <emph>long</emph>.  A ce stade, nous devons changer le type des sous-champs de <code rend="inline">coords</code> (c'est-&#224;-dire <code rend="inline">h</code>, <code rend="inline">w</code>, <code rend="inline">x</code>, et <code rend="inline">y</code>) de <code rend="inline">"type": "long"</code> &#224; <code rend="inline">"type": "integer"</code>. Ce d&#233;calage de type doit &#234;tre corrig&#233;, sinon Passim traitera les valeurs <code rend="inline">int</code> comme si elles &#233;taient  <code rend="inline">long</code>, menant potentiellement &#224; des probl&#232;mes ou des incoh&#233;rences dans la sortie g&#233;n&#233;r&#233;e.</p>
<p>Nous pouvons maintenant enregistrer le sch&#233;ma dans un nouveau fichier  (<code rend="inline">passim.schema</code>) pour une utilisation ult&#233;rieure. Ce sch&#233;ma est n&#233;cessaire pour traiter les donn&#233;es d'entr&#233;e fournies par <ref target="#etude-de-cas-2--r%C3%A9utilisation-de-textes-dans-un-grand-corpus-de-journaux-historiques">la deuxi&#232;me &#233;tude de cas</ref> pr&#233;sent&#233;e dans ce cours.</p>
</div></div><table>
<row>
<cell role="label">Param&#232;tre</cell>
<cell role="label">Valeur par d&#233;faut</cell>
<cell role="label">Description</cell>
<cell role="label">Explication</cell>
</row>
<row>
<cell><code rend="inline">--max-repeat</code> (<code rend="inline">-r</code>)</cell>
<cell>10</cell>
<cell>R&#233;p&#233;tition maximale d'une s&#233;rie dans un cluster</cell>
<cell>Ce param&#232;tre vous permet de pr&#233;ciser la quantit&#233; potentiellement pr&#233;sente d'une s&#233;rie donn&#233;e dans un cluster.</cell>
</row>
<row>
<cell><code rend="inline">--relative-overlap</code> (<code rend="inline">-o</code>)</cell>
<cell>0.8</cell>
<cell>Proportion, mesur&#233;e sur le passage le plus long, que deux passages align&#233;s diff&#233;rents du m&#234;me document doivent se chevaucher pour &#234;tre regroup&#233;s. <!-- TODO SH: Current mismatch between official doc and code, see what is going to be changed after David answers to this issue https://github.com/dasmiq/passim/issues/10 --></cell>
<cell>Ce param&#232;tre d&#233;termine le degr&#233; de similarit&#233; des cha&#238;nes de caract&#232;res que deux passages doivent avoir pour &#234;tre regroup&#233;s.<br/><br/>Dans le cas de textes bruit&#233;s, il peut &#234;tre pr&#233;f&#233;rable de fixer ce param&#232;tre &#224; une valeur plus petite.</cell>
</row>
<row>
<cell><code rend="inline">--min-match</code> (<code rend="inline">-m</code>)</cell>
<cell>5</cell>
<cell>Nombre minimum de n-grammes correspondants entre deux documents</cell>
<cell>Ce param&#232;tre vous permet de d&#233;cider combien de n-grammes doivent &#234;tre trouv&#233;s entre deux documents.</cell>
</row>
<row>
<cell><code rend="inline">--maxDF</code> (<code rend="inline">-u</code>)</cell>
<cell>100</cell>
<cell>Limite sup&#233;rieure de la fr&#233;quence du document pour les n-grammes utilis&#233;s.</cell>
<cell>Ce param&#232;tre permettra de filtrer les n-grammes trop fr&#233;quents, donc apparaissant de nombreuses fois dans un document donn&#233;. <br/><br/>Cette valeur a un impact sur les performances, car elle va r&#233;duire le nombre de paires de documents r&#233;cup&#233;r&#233;s par Passim qui devront &#234;tre compar&#233;s.</cell>
</row>
<row>
<cell><code rend="inline">--minDF</code> (<code rend="inline">-l</code>)</cell>
<cell>2</cell>
<cell>Limite inf&#233;rieure de la fr&#233;quence de document des n-grammes utilis&#233;s</cell>
<cell>Puisque les n-grammes sont utilis&#233;s dans Passim pour retrouver des paires de documents candidats, un n-gramme n'apparaissant qu'une seule fois n'est pas utile, car il ne retrouvera qu'un seul document (et non une paire). Pour cette raison, la valeur par d&#233;faut de <code rend="inline">--minDF</code> est de <code rend="inline">2</code>.</cell>
</row>
<row>
<cell><code rend="inline">--n</code></cell>
<cell>5</cell>
<cell>Ordre des n-grammes pour la d&#233;tection de r&#233;utilisation de textes</cell>
<cell>Les n-grammes sont des cha&#238;nes de mots de longueur N. Ce param&#232;tre vous permet de d&#233;cider de quel type de n-gramme (unigramme, bigramme, trigramme...) devra &#234;tre utilis&#233; par Passim lors de la cr&#233;ation d'une liste de candidats possibles &#224; la r&#233;utilisation de textes.<br/><br/>Le r&#233;glage de ce param&#232;tre &#224; une valeur plus faible peut aider dans le cas de textes bruit&#233;s (c'est-&#224;-dire lorsque de nombreux mots d'un texte sont affect&#233;s par une ou plusieurs erreurs d'OCR). En effet, plus le n-gramme est long, plus il est susceptible de contenir des erreurs d'OCR.</cell>
</row>
</table><div type="2"><head>Utilisation de la sortie de Passim</head>
<p>Puisque l'utilisation des donn&#233;es de r&#233;utilisation de texte d&#233;pend en fin de compte des questions de recherche - et il y a plusieurs applications possibles de la r&#233;utilisation de texte, comme nous l'avons vu ci-dessus -, s'int&#233;resser &#224; l'utilisation des sorties de Passim va plus loin que les objectifs de ce cours.</p>
<p>Les donn&#233;es issues de Passim peuvent &#234;tre ensuite r&#233;investies &#224; travers d'autres langages de programmation, comme par exemple Python. Les clusters extraits peuvent &#234;tre utilis&#233;s pour d&#233;doublonner des documents dans un corpus, ou m&#234;me rassembler de multiples t&#233;moins du m&#234;me texte, mais cela d&#233;pendra enti&#232;rement du contexte de recherche et du cas d'utilisation sp&#233;cifique.</p>
<p>Afin de donner un exemple sur l'&#233;tape suivante, pour celles et ceux qui souhaitent manipuler et approfondir leurs connaissances sur les donn&#233;es de la r&#233;utilisation de texte en Python, nous leur fournissons un carnet Jupyter (<ref target="https://github.com/impresso/PH-passim-tutorial/blob/master/explore-passim-output.ipynb"><code rend="inline">explore-Passim-output.ipynb</code></ref>) qui explique comment importer des sorties JSON de Passim dans un <code rend="inline">pandas.DataFrame</code> et comment analyser la distribution des clusters de r&#233;utilisation de texte dans les deux cas pr&#233;sent&#233;s pr&#233;c&#233;demment. Pour les lecteurs et les lectrices novices qui utilisent la biblioth&#232;que <code rend="inline">pandas</code> de Python, la le&#231;on du <emph>Programming Historian</emph> r&#233;dig&#233;e par Charlie Harper sur <ref target="/en/lessons/visualizing-with-bokeh">la visualisation des donn&#233;es avec Bokeh et Pandas</ref> est une bonne lecture d'introduction (et tr&#232;s fortement recommand&#233;e).</p>
<p>Le code contenu et expliqu&#233; dans le journal produira les graphiques des figures 3 et 4, qui montrent respectivement comment les tailles des clusters de r&#233;utilisation de texte sont distribu&#233;es dans les donn&#233;es de impresso et dans les donn&#233;es de la Bible.</p>
<figure><desc>Figure 3. Distribution des tailles des clusters de r&#233;utilisation de texte dans l'&#233;chantillon de donn&#233;es de impresso.</desc><graphic url="plot-impresso.png"/></figure>
<figure><desc>Figure 4. Distribution des tailles des clusters de r&#233;utilisation de texte dans les donn&#233;es de l'&#233;chantillon biblique.</desc><graphic url="plot-bible.png"/></figure>
<p>Comme vous pouvez le voir dans ces graphiques, la majorit&#233; des clusters de r&#233;utilisation de texte contient au maximum deux passages dans les deux cas. Cependant, dans l'&#233;chantillon de donn&#233;es d'impresso, il y a beaucoup plus de variations quant &#224; la taille des clusters, avec 10% des &#233;chantillons qui ont une taille comprise entre 6 et 296 passages, contrairement aux donn&#233;es de la Bible, dont la taille maximum d'un cluster n'est que de 3.</p>
</div><div type="2"><head>Pour aller plus loin</head>
<p><hi rend="bold">Passim</hi></p>
<list type="unordered">
<item>Smith et al. (2015) pr&#233;sentent en d&#233;tail l'algorithme de d&#233;tection de r&#233;utilisation de texte impl&#233;ment&#233; dans Passim</item>
<item>Cordell (2015) a employ&#233; Passim pour &#233;tudier la r&#233;utilisation de textes dans un large corpus de journaux am&#233;ricains</item>
</list>
<p><hi rend="bold">textreuse</hi></p>
<list type="unordered">
<item>Vogler et al. (2020) utilisent le paquetage R <code rend="inline">textreuse</code> (Mullen 2016) pour &#233;tudier le ph&#233;nom&#232;ne de <emph>concentration des m&#233;dias</emph> dans le journalisme contemporain</item>
</list>
<p><hi rend="bold">TRACER</hi></p>
<list type="unordered">
<item>B&#252;chler et al. (2014) expliquent les algorithmes de d&#233;tection de la r&#233;utilisation de textes qui sont mis en &#339;uvre dans TRACER</item>
<item>Franzini et al. (2018) utilisent et &#233;valuent TRACER pour l'extraction de citations d'un texte latin (le <emph>Summa contra Gentiles</emph> de Thomas d'Aquin)</item>
</list>
<p><hi rend="bold">BLAST</hi></p>
<list type="unordered">
<item>Vierthaler et al. (2019) utilisent l'algorithme d'alignement BLAST pour d&#233;tecter la r&#233;utilisation dans des textes chinois</item>
<item>Vesanto et al. (2017) and Salmi et al. (2019) appliquent BLAST &#224; un corpus complet de journaux publi&#233;s en Finlande</item>
</list>
</div><div type="2"><head>Remerciements</head>
<p>Nous remercions sinc&#232;rement Marco B&#252;chler et Ryan Muther pour la r&#233;vision de cette le&#231;on, ainsi que nos coll&#232;gues Marten D&#252;ring et David Smith pour leurs commentaires constructifs sur une premi&#232;re version de ce tutoriel. Nous remercions &#233;galement Anna-Maria Sichani pour son r&#244;le d'&#233;ditrice. <emph>(N.D.L.R.) Les remerciements portent sur la version originale en anglais de cette le&#231;on.</emph></p>
<p>Les auteurs remercient chaleureusement le journal <ref target="https://letemps.ch/">Le Temps</ref> &#8212; propri&#233;taire de <emph>La Gazette de Lausanne</emph> (GDL) et du <emph>Journal de Gen&#232;ve</emph> (JDG) &#8212; ainsi que le groupe <ref target="https://www.arcinfo.ch/">ArcInfo</ref> &#8212; propri&#233;taire de <emph>L&#8217;Impartial</emph> (IMP) et de <emph>L&#8217;Express</emph> (EXP) &#8212;  pour avoir accept&#233; de partager leurs donn&#233;es &#224; des fins acad&#233;miques.</p>
<p>Matteo Romanello remercie le Fonds national suisse de la recherche scientifique (FNS) pour son soutien financier au projet <ref target="https://impresso-project.ch/"><emph>impresso &#8211; Media Monitoring of the Past</emph></ref> sous le num&#233;ro de subvention CR-SII5_173719. Le travail de Simon Hengchen a &#233;t&#233; soutenu par le programme de recherche et d'innovation Horizon 2020 de l'Union europ&#233;enne sous la subvention 770299 (<ref target="https://www.newseye.eu/">NewsEye</ref>). Simon Hengchen &#233;tait affili&#233; &#224; l'Universit&#233; d'Helsinki et &#224; l'Universit&#233; de Gen&#232;ve pour la plupart de ces travaux, et est actuellement financ&#233; par le projet <emph>Towards Computational Lexical Semantic Change Detection</emph> soutenu par le Conseil su&#233;dois de la recherche (20192022; dnr 2018-01184).</p>
</div><div type="2"><head>Bibliographie</head>
<list type="ordered">
<item>Franzini, Greta, Maria Moritz, Marco B&#252;chler et Marco Passarotti. &#171;&#8239;Using and evaluating TRACER for an Index fontium computatus of the Summa contra Gentiles of Thomas Aquinas&#8239;&#187;. <emph>Proceedings of the Fifth Italian Conference on Computational Linguistics (CLiC-it 2018)</emph> (2018). <ref target="http://ceur-ws.org/Vol-2253/paper22.pdf">Lien</ref></item>
<item>Smith, David A., Ryan Cordell et Abby Mullen. &#171;&#8239;Computational Methods for Uncovering Reprinted Texts in Antebellum Newspapers&#8239;&#187;. <emph>American Literary History</emph> <hi rend="bold">27</hi> (2015). <ref target="http://dx.doi.org/10.1093/alh/ajv029">Lien</ref></item>
<item>Cordell, Ryan. &#171;&#8239;Reprinting Circulation, and the Network Author in Antebellum Newspapers&#8239;&#187;. <emph>American Literary History</emph> <hi rend="bold">27</hi> (2015): 417&#8211;445. <ref target="http://dx.doi.org/10.1093/alh/ajv028">Lien</ref></item>
<item>Vogler, Daniel, Linards Udris et Mark Eisenegger. &#171;&#8239;Measuring Media Content Concentration at a Large Scale Using Automated Text Comparisons&#8239;&#187;. <emph>Journalism Studies</emph> 21, no.11 (2020). <ref target="http://dx.doi.org/10.1080/1461670x.2020.1761865">Lien</ref></item>
<item>Mullen, Lincoln. <emph>textreuse: Detect Text Reuse and Document Similarity</emph>. Github. (2016). <ref target="https://github.com/ropensci/textreuse">Lien</ref></item>
<item>B&#252;chler, Marco, Philip R. Burns, Martin M&#252;ller, Emily Franzini et Greta Franzini. &#171;&#8239;Towards a Historical Text Re-use Detection&#8239;&#187;. In <emph>Text Mining: From Ontology Learning to Automated Text Processing Applications</emph> dir. Chris Biemann et Alexander Mehler, 221&#8211;238. Springer International Publishing, 2014. <ref target="http://dx.doi.org/10.1007/978-3-319-12655-5_11">Lien</ref></item>
<item>Vierthaler, Paul et Meet Gelein. &#171;&#8239;A BLAST-based, Language-agnostic Text Reuse Algorithm with a MARKUS Implementation and Sequence Alignment Optimized for Large Chinese Corpora&#8239;&#187;. <emph>Journal of Cultural Analytics</emph> 4, vol.2 (2019). <ref target="http://dx.doi.org/10.22148/16.034">Lien</ref></item>
<item>Vesanto, Aleksi, Asko Nivala, Heli Rantala, Tapio Salakoski, Hannu Salmi et Filip Ginter. &#171;&#8239;Applying BLAST to Text Reuse Detection in Finnish Newspapers and Journals, 1771-1910&#8239;&#187;. <emph>Proceedings of the NoDaLiDa 2017 Workshop on Processing Historical Language</emph> (2017): 54&#8211;58. <ref target="https://www.aclweb.org/anthology/W17-0510">Lien</ref></item>
<item>Salmi, Hannu, Heli Rantala, Aleksi Vesanto et Filip Ginter. &#171;&#8239;The long-term reuse of text in the Finnish press, 1771&#8211;1920&#8239;&#187;. <emph>CEUR Workshop Proceedings</emph> 2364 (2019): 394&#8211;544.</item>
<item>Soto, Axel J, Abidalrahman Mohammad, Andrew Albert, Aminul Islam, Evangelos Milios, Michael Doyle, Rosane Minghim et Maria Cristina de Oliveira. &#171;&#8239;Similarity-Based Support for Text Reuse in Technical Writing&#8239;&#187;. <emph>Proceedings of the 2015 ACM Symposium on Document Engineering</emph> (2015): 97&#8211;106. <ref target="http://dx.doi.org/10.1145/2682571.2797068">Lien</ref></item>
<item>Schofield, Alexandra, Laure Thompson et David Mimno. &#171;&#8239;Quantifying the Effects of Text Duplication on Semantic Models&#8239;&#187;. <emph>Proceedings of the 2017 Conference on Empirical Methods in Natural Language Processing</emph> (2017): 2737&#8211;2747. <ref target="http://dx.doi.org/10.18653/v1/D17-1290">Lien</ref></item>
<item>Romanello, Matteo, Aur&#233;lien Berra et Alexandra Trachsel. &#171;&#8239;Rethinking Text Reuse as Digital Classicists&#8239;&#187;. <emph>Digital Humanities conference</emph> (2014). <ref target="https://wiki.digitalclassicist.org/Text_Reuse">Lien</ref></item>
</list>
</div></body>
  </text>
</TEI>
