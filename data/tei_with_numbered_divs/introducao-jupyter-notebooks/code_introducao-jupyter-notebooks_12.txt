#identifica o ficheiro fonte a ser aberto, chama-o f
with open('ph-jupyter-notebook-example.csv') as f:
    #cria um ficheiro de saída (referido como "out" no notebook) para ser gravado
    with open('ph-jupyter-notebook-example-dayofweek.csv', 'w') as out:
        #define "csv_reader" como executando a função csv.reader no ficheiro
        csv_reader = csv.reader(f, delimiter=',')
        #define "csv_writer" como executando a função csv.writer para "out" (o ficheiro de saída)
        csv_writer = csv.writer(out)
        #para cada linha que está sendo lida pelo csv_reader...
        for row in csv_reader:
            #define "csv_reader" como executando a função csv.reader no ficheiro
            csv_reader = csv.reader(f, delimiter=',')
            #para cada linha que está sendo lida pelo csv_reader...
            for row in csv_reader:
                #cria uma lista chamada "values" com o conteúdo da linha
                values = list(row)
                #define "rating" como a primeira coisa na lista
                #contagem em Python começa com 0, não 1
                rating = values[0]
                #define "parseddatepub" como a segunda coisa (1, porque começamos com 0) na lista,
                #convertido em um formato de data padrão usando dateutil.parser
                #e quando essas datas são analisadas, o analisador deve saber
                #que o primeiro valor na sequência é o dia
                parseddatepub = dateutil.parser.parse(values[1], dayfirst=True)
                #mesmo que acima para a data atualizada, a terceira coisa (2) na lista
                parseddateupdate = dateutil.parser.parse(values[2], dayfirst=True)
                #define "dayofweekpub" como parseddatepub (definido acima), convertido para o dia da semana
                #%A é usado para mudar para o dia da semana
                #Pode ver outros formatos aqui: https://docs.python.org/3/library/datetime.html#strftime-and-strptime-behavior
                dayofweekpub = datetime.date.strftime(parseddatepub, '%A')
                #mesma coisa para data de atualização
                dayofweekupdate = datetime.date.strftime(parseddateupdate, '%A')
                #cria uma lista da classificação e as novas datas formatadas
                updatedvalues = [rating, dayofweekpub, dayofweekupdate]
                #escreve todos os valores nesta célula de código
                csv_writer.writerow(updatedvalues)
                print(updatedvalues)
